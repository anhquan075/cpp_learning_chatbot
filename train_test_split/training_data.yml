version: "2.0"
nlu:
- intent: first_name
  examples: |
    - T√™n c·ªßa m√¨nh l√† qu√¢n
- intent: last_name
  examples: |
    - H·ªç c·ªßa m√¨nh l√† Nguy·ªÖn
- intent: nlu_fallback
  examples: |
    - C√¢nnjdjdkaka l√† g√¨?
    - https://scontent.xx.fbcdn.net/v/t39.1997-6/p100x100/65882783_2398656156862083_8186027788650676224_n.png?_nc_cat=1&ccb=2&_nc_sid=ac3552&_nc_ohc=4rqNta98n34AX-N86gg&_nc_ad=z-m&_nc_cid=0&_nc_ht=scontent.xx&_nc_tp=30&oh=ab4cd82706a6d74f545e19bdeb24d0ed&oe=6009FF31
- intent: dont_want_to_give_cpp_content
  examples: |
    - T·∫°i sao ta ph·∫£i h·ªçc m√¥n n√†y v·∫≠y?
    - T·∫°i s l·∫°i c·∫ßn c√°i b√†i nh∆∞ v
    - t·∫°i l√†m sao m√† m c·∫ßn ph·∫£i h·ªèi t nh∆∞ th·∫ø? C·ª© ƒë∆∞a ƒë·∫°i 1 b√†i b·∫•t ki g√¨ ƒëi k dc √†
    - T·∫°i sao m l·∫°i c·∫ßn c√°i ƒë·∫•y
    - T·∫°i sao m c·∫ßn ph·∫£i h·ªèi t nh∆∞ th·∫ø? B·ªô kh√¥ng th·ªÉ ƒë∆∞a ra 1 b√†i t·ªïng h·ª£p √† ?
    - v√¨ sao t l·∫°i ph·∫£i tr·∫£ l·ªùi c√¢u h·ªèi ƒë·∫•y ?
    - t·∫°i s t l·∫°i ph·∫£i n√≥i r√µ l√† l√†m b√†i n√†o
- intent: cpplus_where_asking
  examples: |
    - Ta c·∫ßn khai b√°o [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ·ªü where?
    - ta c·∫ßn khai b√°o m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ·ªü ƒë√¢u?
    - m√¨nh ph·∫£i vi·∫øt [comment](cpplus_content) ·ªü ƒë√¢u ƒë√¢y?
    - t ph·∫£i khai b√°o [library](cpplus_content) ·ªü ƒë√¢u?
    - gi·ªù tao vi·∫øt d√≤ng khai b√°o [library](cpplus_content) ·ªü ch·ªó n√†o ƒë√¢y m?
    - T n√™n khai b√°o [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} ·ªü ƒë√¢u?
    - ta khai b√°o [variable](cpplus_content) ·ªü ƒë√¢y ƒë√¢y?
    - t n√™n vi·∫øt [comment](cpplus_content) ·ªü where ƒë√¢y?
    - Khai b√°o [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} ·ªü ƒë√¢u?
    - t c·∫ßn ƒë·ªÉ [comment](cpplus_content) ·ªü ƒë√¢u?
    - tao ph·∫£i khai b√°o m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ·ªü ch·ªó n√†o v·∫≠y?
    - M√¨nh khai b√°o [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} ·ªü ƒë√¢u v·∫≠y?
- intent: date
  examples: |
    - Cho h·ªèi ng√†y th√°ng nƒÉm c√°i?
    - √™, nay ng√†y m·∫•y v·∫≠y ?
    - √™ bot, nay ng√†y m·∫•y ?
    - Bot ∆°i h√¥m nay l√† th·ª© m·∫•y v·∫≠y?
    - Cho h·ªèi th·ª© m·∫•y?
    - Cho h·ªèi ng√†y c√°i?
    - N√® h√¥m nay l√† ng√†y g√¨ ?
    - Cho h·ªèi ng√†y th√°ng?
    - ng√†y m·∫•y ?
    - nay ng√†y g√¨ ?
    - H√¥m ng√†y l√† ng√†y m·∫•y?
    - Ng√†y th√°ng nƒÉm?
- intent: time
  examples: |
    - em oii m·∫•y gi·ªù ·ªùi?
    - What time is it ?
    - B·∫°n ∆°i m·∫•y gi·ªù r·ªìi ?
    - M·∫•y gi·ªù r·ªìi b·∫°n ∆°i ?
    - time ƒë∆∞·ª£c bao nhi√™u r·ªìi ?
    - Gi·ªù l√† m·∫•y gi·ªù ?
    - m·∫•y gi·ªù r·ªìi v·∫≠y ?
    - m·∫•y time r·ªìi ?
    - √ä ku m·∫•y time r·ªìi d·∫° ?
    - b√¢y gi·ªù l√† m·∫•y Gi·ªù r·ªìi ·∫° ?
    - cho t√¥i h·ªèi b√¢y gi·ªù l√† m·∫•y gi·ªù ?
    - cho em h·ªèi m·∫•y gi·ªù r·ªìi v·∫≠y ·∫°?
    - √ä bot what time is it now ?
    - Cho m√¨nh h·ªèi b√¢y gi·ªù m·∫•y gi·ªù r·ªìi ?
    - √ä bot m·∫•y gi·ªù r·ªìi ?
    - n√® em ∆°i, m·∫•y gi·ªù r·ªìi
- intent: cpplus_when_asking
  examples: |
    - khi n√†o th√¨ t c·∫ßn s·ª≠ d·ª•ng c√°i [kh√¥ng gian t√™n]{"entity": "cpplus_content", "value": "namespace"} v·∫≠y?
    - l√∫c n√†o th√¨ s·∫Ω c·∫ßn ph·∫£i t·∫°o [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}?
    - l√∫c n√†o th√¨ m√¨nh n√™n s·ª≠ d·ª•ng [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} ƒë√¢y bot
    - Khi n√†o ta c·∫ßn ph·∫£i s·ª≠ d·ª•ng [comment](cpplus_content)?
    - l√∫c n√†o th√¨ ta c·∫ßn khai b√°o m·ªôt [variable](cpplus_content)?
    - khi n√†o th√¨ t c·∫ßn th√™m [comment](cpplus_content) v√¥ code c·ªßa t ƒë√¢y?
    - n√™n s·ª≠ d·ª•ng [library](cpplus_content) l√∫c n√†o?
    - C·∫ßn s·ª≠ d·ª•ng [kh√¥ng gian t√™n]{"entity": "cpplus_content", "value": "namespace"} l√∫c n√†o th·∫ø??
    - khi n√†o th√¨ ta c·∫ßn ph·∫£i kh·ªüi t·∫°o m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}?
    - Khi n√†o th√¨ tao c·∫ßn ph·∫£i th√™m [comment](cpplus_content) v·∫≠y ?
    - tao n√™n include [library](cpplus_content) l√∫c n√†o ƒë√¢y m?
    - Tao n√™n s·ª≠ d·ª•ng [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} v√†o th·ªùi ƒëi·ªÉm n√†o v?
    - khi n√†o th√¨ c·∫ßn t·∫°o m·ªôt [variable](cpplus_content)?
    - l√∫c n√†o th√¨ s·∫Ω c·∫ßn ph·∫£i khai b√°o m·ªôt [variable](cpplus_content)?
    - khi n√†o th√¨ c·∫ßn s·ª≠ d·ª•ng [namespace](cpplus_content)?
    - l√∫c n√†o th√¨ m√¨nh c·∫ßn th√™m [comment](cpplus_content) v√†o code c·ªßa m√¨nh v·∫≠y m?
    - c·∫ßn s·ª≠ d·ª•ng c√°i [namespace](cpplus_content) khi n√†o v th kia?
- intent: goodbye
  examples: |
    - Bai Bai
    - d·∫πp
    - h·∫πn l·∫ßn kh√°c
    - ƒë·ªÉ khi kh√°c h·ªèi ti·∫øp
    - bye
    - t·∫°m bi·ªát
    - H·∫πn ng√†y mai
    - H·∫πn g·∫∑p l·∫°i
    - Bye
    - ƒë·ªÉ d·ªãp kh√°c n√≥i ti·∫øp nha
    - good bye
    - tao ƒëi ƒë√¢y con trai
    - c√∫t ƒëi
    - See you next time
    - B·∫°n c√∫t ƒëi
    - c√∫t c√∫t c√∫t
    - c√∫c
    - pipi
    - ƒëi ƒë√¢y
    - T·∫°m bi·ªát nha
    - Th√¥i tui ph·∫£i ch·∫°y dl :))
    - BYE
    - th√¥i tui ph·∫£i ch·∫°y dl :))
    - see you next time
    - Good bye
    - h·∫πn d·ªãp kh√°c
- intent: dont_want_to_ask
  examples: |
    - tui ƒëang k c·∫ßn b·∫°n tr·∫£ l·ªùi g√¨ h·∫øt
    - b·ªë m ƒë c·∫ßn h·ªèi m g√¨ c·∫£
    - √™ t k c√≥ mu·ªën h·ªèi g√¨ m h·∫øt √°
    - dont want to ask you anything
    - anh ∆°i em ƒë√¢u c√≥ h·ªèi c√°i g√¨ ƒë√¢u m√† sao anh c·ª© √©p em ph·∫£i h·ªèi anh th·∫ø
    - n√® bot ∆°i tui k mu·ªën h·ªèi b·∫°n ƒëi·ªÅu g√¨ ƒë√¢u
    - tui h·ªèng c·∫ßn h·ªèi g√¨ b·∫°n h·∫øt nha
    - t√¥i kh√¥ng h·ªèi g√¨ c·∫£
    - √™ m√¨nh ƒëang k mu·ªën h·ªèi c·∫≠u ƒëi·ªÅu g√¨ h·∫øt nha
    - m√¨nh kh√¥ng mu·ªën h·ªèi g√¨ c·∫£
    - b·∫°n oii tui k c·∫ßn h·ªèi ƒëi·ªÅu g√¨ c·∫£
    - tao kh√¥ng mu·ªën h·ªèi
    - √™ t k c√≥ c·∫ßn h·ªèi g√¨ nha
    - kh√¥ng mu·ªën h·ªèi
    - m√¨nh kh√¥ng c√≥ nhu c·∫ßu h·ªèi g√¨ ngay l√∫c n√†y h·∫øt
    - kh√¥ng c·∫ßn h·ªèi
    - b·ªë m c√≥ h·ªèi g√¨ m ƒë√¢u
    - bot ∆°i t k mu·ªën h·ªèi m b·∫•t c·ª© ƒëi·ªÅu g√¨ c·∫£
    - t k c√≥ h·ªèi g√¨ m h·∫øt
    - d·∫° em kh√¥ng c√≥ h·ªèi g√¨ anh h·∫øt ·∫°
    - chatbot ∆°i t√¥i kh√¥ng mu·ªën h·ªèi g√¨ b·∫°n h·∫øt
    - i didn't ask you about covid 19
    - em kh√¥ng h·ªèi g√¨ anh h·∫øt anh bot ·∫°
    - tao k c·∫ßn g√¨ ph·∫£i h·ªèi m h·∫øt
    - kh√¥ng h·ªèi
    - √™ t k c√≥ h·ªèi g√¨ m nha
    - i dont want to ask you anything
    - Nothing
- intent: affirm
  examples: |
    - QU√Å CH√çNH X√ÅC
    - Ok nha
    - Okei
    - of course
    - chu·∫©n
    - that sounds good
    - C√≥
    - chu·∫©n qu√° ta
    - r√πi ok
    - ok good
    - √î kh√™
    - ok
    - indeed
    - OK Bot
    - r√µ r√†ng
    - oke la
    - Ok ƒë·ª£i t nghƒ© c√°i nha
    - chu·∫©n nha
    - ch√≠nh x√°c
    - DCM CHU·∫®N TH·∫æ
    - ch·ª© c√≤n g√¨ n·ªØa
    - ho√†n to√†n ƒë√∫ng
    - ƒë√∫ng r√≤i
    - ƒë√∫ng ·ªùi
    - QU√Å ƒê√öNG LU√îN NG∆Ø·ªúI ANH EM
    - Ok ƒë·ª£i ch√∫t ƒë·ªÉ suy nghƒ© ƒë√£
    - chu·∫©n x√°c lu√¥n
    - √¥ kh√™
    - dƒ© nhi√™n
    - ok ƒë√∫ng
    - ƒê∆∞·ª£c r·ªìi m√¨nh c·∫£m ∆°n
    - yes
    - Okela
    - ƒê·ªàNH V√ÉI
    - ƒë√∫ng
    - okela :v
    - √î k√™
    - ƒë∆∞∆°ng nhi√™n
    - GOOD V√ÉI LZZ
    - kh√¥ng th·ªÉ ch√≠nh x√°c h∆°n ƒë∆∞·ª£c n·ªØa
    - Ok bot
    - oke
    - correct
    - R√πi ok n√®
    - qu√° ƒë√∫ng
- intent: feeling_bad
  examples: |
    - h√¥m nay th·∫≠t s·ª± t·∫ª nh·∫°t
    - Bu·ªìn qu√°
    - tao sad qu√°
    - Extremely sad
    - A m th·∫•y kh√¥ng ·ªïn l·∫Øm
    - Tui d·ªü th·∫≠t s·ª±
    - very sad
    - Th·∫≠t l√† m·ªôt ng√†y t·ªìi t·ªá
    - R·ªõt m√¥n gi·∫£i t√≠ch th√¨ ph·∫£i l√†m sao
    - Kh√¥ng ·ªïn t√≠ n√†o lu√¥n √° bot
    - H√¥m nay th·∫≠t bu·ªìn
    - N·∫£n qu√°
    - Th·∫≠t s·ª± th·∫•t v·ªçng
    - tui ƒëang r·∫•t kh√¥ng ·ªïn lu√¥n √°
    - huhu
    - unhappy
    - c·∫£m th·∫•y h∆°i kh√¥ng ·ªïn l·∫Øm
    - Huhuhuhuhu
    - Nay tao bu·ªìn qu√° bot ∆°i
    - m√¨nh n√≥i m√¨nh khoogn ·ªïn
    - Bad
    - L√†m sao ƒë·ªÉ qua m√¥n CS1 c·ªßa th·∫ßy Ti·∫øn
    - m√¨nh kh√¥ng kh·ªèe l·∫Øm
    - m√¨nh c·∫£m th·∫•y k ·ªïn l·∫Øm
    - tao th·∫≠t s·ª± ch·ªâ mu·ªën kh√≥c
    - bu·ªìn th·∫≠t s·ª±
    - t·ªá h·∫°i
    - Tui kh√¥ng ·ªïn t√≠ n√†o lu√¥n √° √¥ng ∆°i
    - Tao ƒëang r·∫•t bu·ªìn
    - Bu·ªìn b√£
    - qu√° ch√°n
    - M·∫•t g·ªëc nh·∫≠p m√¥n l·∫≠p tr√¨nh r·ªìi pot ∆°i
    - m√¨nh ƒëang c·∫£m th·∫•y kh√¥ng ·ªïn l·∫Øm
    - bu·ªìn hiu lu√¥n
    - √¥ng ƒë√¢y kh√¥ng ·ªïn l·∫Øm
    - Awful
    - not very good
    - sao tui ngu qu√° v·∫≠y
    - Kh√¥ng th·ªÉ t·ªá h∆°n ƒë∆∞·ª£c n·ªØa
    - tui m·ªát qu√° üòÇüòÇüòÇ
    - very bad
    - ? nh∆∞ng m√† m√¨nh kh√¥ng ·ªïn
    - ch√°n qu√°
    - M√¨nh th·∫≠t s·ª± mu·ªën kh√≥c
    - H∆°i m·ªát üò•
    - nay tao ch√°n n·∫£n qu√°
    - sad
- intent: cpp_practice
  examples: |
    - C√ÅC B√ÄI GI√öP N√ÇNG CAO TR√åNH V·ªÄ [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}
    - c√°c b√†i to√°n v·ªÅ [loop](cpplus_content)
    - C√°c b√†i gi√∫p n√¢ng cao tr√¨nh v·ªÅ [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}
    - c√°c b√†i gi√∫p n√¢ng cao tr√¨nh v·ªÅ [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}
    - B√ÄI T·∫¨P V·ªÄ [TO√ÅN T·ª¨ 2 NG√îI]{"entity": "cpplus_content", "value": "binary-operator"}
    - C√°c b√†i t·∫≠p v·ªÅ [for](cpplus_content)
    - Cho m√¨nh xin m·ªôt s·ªë b√†i to√°n li√™n quan ƒë·∫øn [struct]{"entity": "cpplus_content", "value": "structure"}
    - TAO MU·ªêN √îN T·∫¨P V·ªÄ [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - tao c·∫ßn luy·ªán 1 s·ªë skill v·ªÅ [pointer](cpplus_content)
    - Luy·ªán [if](cpplus_content)
    - B·ªë m c·∫ßn c√°c b√†i t·∫≠p v·ªÅ [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"}
    - c√°c b√†i to√°n v·ªÅ [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"}  n√≥i chung
    - b√†i to√°n v·ªÅ [Bi·∫øn]{"entity": "cpplus_content", "value": "variable"}
    - B√ÄI T·∫¨P D√ôNG [TO√ÅN T·ª¨ 3 NG√îI]{"entity": "cpplus_content", "value": "ternary-operator"}
    - tao mu·ªën √¥n t·∫≠p v·ªÅ [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - Tao c·∫ßn luy·ªán 1 s·ªë skill v·ªÅ [pointer](cpplus_content)
    - C√°c b√†i t·∫≠p v·ªÅ [while](cpplus_content)
    - tao mu·ªën ƒë∆∞·ª£c √¥n b√†i v·ªÅ [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"}
    - m·ªôt s·ªë b√†i √¥n t·∫≠p v·ªÅ [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - c√°c b√†i t·∫≠p v·ªÅ [while](cpplus_content)
    - C√ÅC B√ÄI T·∫¨P V·ªÄ [WHILE]{"entity": "cpplus_content", "value": "while"}
    - b·∫°n c√≥ c√°c b√†i t·∫≠p v·ªÅ [H√ÄM]{"entity": "cpplus_content", "value": "function"} ko
    - ƒë∆∞a b·ªë m c√°c b√†i v·ªÅ [switch](cpplus_content) ƒë√¢y m
    - b·∫°n c√≥ c√°c b√†i t·∫≠p v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"} ko
    - ƒê∆ØA B·ªê M C√ÅC B√ÄI V·ªÄ [SWITCH]{"entity": "cpplus_content", "value": "switch"} ƒê√ÇY M
    - TUI C·∫¶N √îN T·∫¨P V·ªÄ [TO√ÅN T·ª¨]{"entity": "cpplus_content", "value": "operator"}
    - M·ªôt s·ªë c√°c c√°i b√†i t·∫≠p gi√∫p n√¢ng cao nh·∫≠n th·ª©c v·ªÅ [ƒê·ªá quy]{"entity": "cpplus_content", "value": "recursion"}
    - M·ªòT S·ªê B√ÄI √îN T·∫¨P V·ªÄ [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - Alo bot cho m√¨nh xin tham kh·∫£o m·ªôt s·ªë d·∫°ng b√†i t·∫≠p v·ªÅ [class](cpplus_content) v·ªõi ·∫°
    - luy·ªán t·∫≠p v·ªÅ [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"}
    - b√†i t·∫≠p v·ªÅ [to√°n t·ª≠ 2 ng√¥i]{"entity": "cpplus_content", "value": "binary-operator"}
    - b√†i t·∫≠p v·ªÅ [function](cpplus_content)
    - b√†i t·∫≠p d√πng [to√°n t·ª≠ 3 ng√¥i]{"entity": "cpplus_content", "value": "ternary-operator"}
    - b√†i t·∫≠p v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"}
    - b√†i to√°n v·ªÅ [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}
    - B√ÄI TO√ÅN V·ªÄ [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}
    - C√ÅC B√ÄI TO√ÅN V·ªÄ [TO√ÅN T·ª¨]{"entity": "cpplus_content", "value": "operator"}  N√ìI CHUNG
    - B√ÄI T·∫¨P V·ªÄ [H√ÄM]{"entity": "cpplus_content", "value": "function"}
    - tui c·∫ßn √¥n t·∫≠p v·ªÅ [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"}
    - TAO C·∫¶N LUY·ªÜN 1 S·ªê SKILL V·ªÄ [POINTER]{"entity": "cpplus_content", "value": "pointer"}
    - LUY·ªÜN [IF]{"entity": "cpplus_content", "value": "if"}
    - LUY·ªÜN T·∫¨P V·ªÄ [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"}
    - TAO MU·ªêN √îN T·∫¨P C√ÅC KI·∫æN TH·ª®C V·ªÄ [TO√ÅN T·ª¨]{"entity": "cpplus_content", "value": "operator"}
    - C√ÅC B√ÄI TO√ÅN V·ªÄ [LOOP]{"entity": "cpplus_content", "value": "loop"}
    - TAO MU·ªêN ƒê∆Ø·ª¢C √îN B√ÄI V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"}
    - LUY·ªÜN T·∫¨P V·ªÄ [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}
    - ƒê∆∞a b·ªë m c√°c b√†i v·ªÅ [switch](cpplus_content) ƒë√¢y m
- intent: continue_asking
  examples: |
    - ƒë∆∞·ª£c ƒë·ªÉ t h·ªèi m ti·∫øp
    - Ok gi·ªù ƒë·ªÉ h·ªèi ti·∫øp
    - Ok t√≠p n√†
    - ƒë·ª£i suy nghƒ© c√°i
    - ok chi·∫øn lu√¥n, ƒë·ªÉ b·ªë h·ªèi m ti·∫øp
    - b·∫°n c√≥ th·ªÉ tr·∫£ l·ªùi g√¨
    - oke ƒë·ª£i t√≠
    - Chi·∫øn ti·∫øp n√†y
    - Ok ƒë·ªÉ b·ªë m h·ªèi m ti·∫øp
    - N√≥ ch·∫°y nh∆∞ th·∫ø no√†
    - h·ªèi l·∫ßn n·ªØa n√®
    - ƒê∆∞·ª£c r·ªìi gi·ªù ƒë·ªÉ t h·ªèi m ti·∫øp
    - continue_asking
    - h·ªèi th√™m 1 c√¢u n·ªØa n√®
    - ƒë∆∞·ª£c r·ªìi ƒë·ªÉ b·ªë h·ªèi c√¢u kh√°c
    - Ok c√¢u ti·∫øp theo n√®
    - h·ªèi nh·∫π th√™m 1 c√¢u n·ªØa n√†
    - ok h·ªèi ti·∫øp n√†y
    - H·ªèi th√™m c√°i n·ªØa n√®
    - H·ªèi ti·∫øp t·ª•c 1 c√¢u n·ªØa nha
    - ti·∫øp theo n√®
    - ok ti·∫øp t·ª•c th√¥i
    - h·ªèi nh√® nh·∫π th√™m 1 c√¢u n·ªØa n√†
    - Ok ti·∫øp t·ª•c n√†y
    - C√≥ ch·ª©
    - chi·∫øn ti·∫øp n√®
    - ti·∫øp t·ª•c n√†y
    - h·ªèi c√°i nh·∫π 1 c√¢u n·ªØa xem sao nha
    - co
    - Ok continue n√®
    - √¥ kh√™ ƒë·ª£i t suy nghƒ© c√°i
    - H·ªèi th√™m m·ªôt c√¢u n·ªØa n√†
    - T·∫•t nhi√™n r·ªìi
    - h·ªèi ti·∫øp n√®
    - ƒê∆∞·ª£c r·ªìi ƒë·ªÉ gi·ªù h·ªèi m c√¢u kh√°c nha
    - M√¨nh mu·ªën h·ªèi ti·∫øp
    - chi·∫øn ti·∫øp ch·ª©
    - ok ti·∫øp theo n√®
    - H·ªèi n·ªØa n√®
    - z√¥ n√®
    - h·ªèi l·∫°i
    - c√≥
    - h·ªèi th√™m c√°i nh·∫π n√®
    - H·ªèi l·∫°i
    - ti·∫øp n√†y
    - Ti·∫øp t·ª•c n√†y
    - H·ªèi c√¢u kh√°c
    - ti·∫øp theo n√†y
    - H·ªèi ti·∫øp n√†y
    - ok ƒë·ªÉ suy nghƒ©
    - okay ch∆°i ti·∫øp n√®
- intent: attention
  examples: |
    - n√†y dume
    - √ä bot ngu
    - cough
    - N√à N√à N√à
    - knock knock
    - c·ªôc c·ªôc
    - e h√®m
    - e hem
    - n√†y
    - n√®
    - qu√¢y
    - y√¥ y√¥
    - √™ th lz
    - h√∫
    - Y√î
    - L√î L√î
    - c·ªëc c·ªëc
    - eee
    - ring ring
    - √ä DUMA
    - √äy
    - rep ƒëi bot ∆°i\t
    - N√ÄY DUME
    - A H√àM
    - N√ÄY N√ÄY
    - bot c√πi th·∫ø
    - c√∫c cu
    - N√à
    - L√î
    - √Ä L√î
    - E HEM
    - √ä DCM
    - HEI
    - ALOOOOO
    - E H√àM
    - Sao seen r·ªìi
    - Y√î Y√î
    - hey yo wtf
    - BUZZZ
    - buzz buzz
    - eeeeeeee
    - √™ duma
    - l√¥ l√¥
    - n√® n√® n√®
    - EEEEE
    - √™ dcm
    - RING RING
    - a h√®m
    - C·ªêC C·ªêC
    - N√ÄY DCM
    - BUZZ BUZZ
    - √ä ƒêMM
    - y√¥
- intent: thanks
  examples: |
    - Em c·∫£m ∆°n ·∫°
    - m√¨nh xin c·∫£m ∆°n
    - THANKS
    - EM C·∫¢M ∆†N ·∫†
    - Kh√¥ng bi·∫øt n√™n c√°m ∆°n sao cho v·ª´a ƒë√¢y
    - C·∫¢M ∆†N R·∫§T NHI·ªÄU
    - C·∫¢M ∆†N BOT NHA
    - thanks bot nha
    - C·∫¢M ∆†N NH√åU NHA
    - Thank you
    - THANKS BOT NHA
    - M√¨nh c√°m ∆°n chatbot nhi·ªÅu nha
    - ƒëa t·∫°
    - THANK NHI·ªÄU
    - Arigatou
    - ƒë·ªôi ∆°n
    - THANK YOU
    - M√åNH C·∫¢M ∆†N ·∫†
    - thanks
    - MANY THANKS
    - Ok thank you vinamilk
    - M∆°n nha
    - M√åNH XIN C·∫¢M ∆†N
    - Bot ∆°i, c√°m ∆°n m√†y nhi·ªÅu nha
    - M∆†N NHA
    - m√¨nh c·∫£m ∆°n ·∫°
    - Tks
    - TAO C·∫¢M ∆†N
    - C·∫£m ∆°n nh√¨u nha
    - ok tks
    - C√°m ∆°n m nha bot
    - C√°m ∆°n m√†y r·∫•t nhi·ªÅu
    - arigatoi
    - c·∫£m ∆°n
    - c·∫£m ∆°n c·∫≠u nha
    - c·∫£m ∆°n nhi·ªÅu
    - ARIGATOU
    - Ok tks
    - C√°m ∆°n
    - C·∫¢M ∆†N M√ÄY NHA
    - Tao r·∫•t c·∫£m ∆°n m√†y
    - TKS
    - tks
    - C·∫¢M ∆†N NHI·ªÄU
    - ƒê·ªòI ∆†N
    - c·∫£m ∆°n m√†y nha
    - tao c·∫£m ∆°n
    - c·∫£m ∆°n r·∫•t nhi·ªÅu
    - ARIGATOI
    - thank nhi·ªÅu
    - Th·∫≠t s·ª± ch√¢n th√†nh c√°m ∆°n m√†y, t·ª´ t·∫≠n ƒë√°y l√≤ng
    - M∆†N NHI·ªÄU N√à
    - MANG ∆†N C·∫¨U NHI·ªÄU
    - ƒêA T·∫†
    - Th·∫≠t s·ª± kh√¥ng bi·∫øt ph·∫£i c√°m ∆°n m sao cho ƒë·ªß ƒë√¢y
- intent: corona
  examples: |
    - Corona
    - The nao la 1 be covid 19
    - dai dich covid 19
    - Corona vi r√∫t
    - co vit
    - corona virus
    - corona
    - T√¨nh h√¨nh d·ªãch corona
    - ngƒÉn ch·∫∑n corona
    - Covid 19 hien nay
    - ngan chan corona
    - th·∫ø n√†o l√† corona
    - Cho toi hoi the nao la mot con corona
    - Th·∫ø n√†o l√† 1 b√© covid 19
    - ƒë·∫°i d·ªãch corona
    - Con corona
    - Corona vi rut
    - mot con corona la nhu the nao
    - D·ªãch covid 19 tphcm
    - covid l√† g√¨
    - Co rau na
    - dai dich corona
    - cho h·ªèi corona
    - m·ªôt con corona l√† nh∆∞ th·∫ø n√†o
    - Covid 19 tinh hinh tai viet nam
    - Covid 19 t√¨nh h√¨nh t·∫°i vi·ªát nam
    - corona la gi
    - co vit 19
    - Covid-19
    - c√¥ v√≠t 19
    - dich covid tai tphcm
    - Corona pandemic
    - Tinh hinh dich corona
    - Cho t√¥i h·ªèi th·∫ø n√†o l√† m·ªôt con corona
    - covid m∆∞·ªùi ch√≠n
    - C·ªì r√¥ n√† l√† g√¨ v
    - T√¨nh h√¨nh corona
    - covid muoi chin
    - Dich benh covid 19
    - Covid 19 hi·ªán nay
    - nh∆∞ th·∫ø n√†o l√† corona
    - Corona la sao?
    - Corona la wtf gi
    - C√°ch ph√≤ng ch·ªëng corona
    - c√¥ v√≠t
    - COVID 19
    - C·ªì r√¢u n√†
    - covid 19
    - Ncov
    - sars_ncov
    - Ph√≤ng ng·ª´a corona
    - con ƒëƒ© corona
    - t√¨nh h√¨nh covid t·∫°i vi·ªát nam
    - sars ncov 2019
    - Sars-ncov
    - SARS-NCOV
    - covid-19 tinh hinh
    - cho hoi corona
    - Cach phong chong corona
    - ƒë·∫°i d·ªãch covid 19
    - the nao la corona
- intent: compliment
  examples: |
    - ƒê∆Ø·ª¢C B·∫†N ∆†I
    - I am great
    - I'M GOOD
    - AMAZING
    - VERY GOOD
    - T·ªêT
    - sao m√†y hay th·∫ø
    - GI·ªéI THI·ªÜT S·ª∞
    - W∆°W gh√™ d·ªØ ta
    - KH√Å
    - woww bot gi·ªèi qu√° ta
    - L√ÄM T·ªêT L·∫ÆM
    - gh√™ v·∫≠y
    - hay
    - Th√¥i. M√¨nh gi·ª°n √°
    - tuy·ªát h·∫£o
    - u·∫ßy x·ªãn th·∫ø
    - QU√Å VIP LU√îN
    - ƒë∆∞·ª£c
    - t·ªët
    - Chi·∫øn vc v
    - Wow c√≥ √≠ch gh√™ ta
    - qu√° chu·∫©n lu√¥n
    - c≈©ng kh√° ph·∫øt ƒë·∫•y ch·ª©
    - Xu·∫•t s·∫Øc
    - TUY·ªÜT V·ªúI
    - BI·∫æT ƒêI·ªÄU ƒê·∫§Y
    - Kh√° khen cho nh√† ng∆∞∆°i
    - Woaaa gi·ªèi wa taaaa
    - TA C√ì L·ªúI KHEN NG·ª¢I D√ÄNH CHO NH√Ä NG∆Ø∆†I ƒê·∫§Y
    - SAO M√ÄY HAY TH·∫æ
    - TUY·ªÜT H·∫¢O
    - Qu√° gi·ªèi
    - QU√Å CHU·∫®N LU√îN
    - qu√° ƒë√£
    - kh√°
    - Ta c√≥ l·ªùi khen ng·ª£i d√†nh cho nh√† ng∆∞∆°i ƒë·∫•y
    - very good
    - HAY
    - woaaaa
    - Tuy·ªát c√∫ m√®o
    - Woww
    - ·ªí, C≈®NG KH√Å PH·∫æT ƒê√ì CH·ª®
    - ƒë∆∞·ª£c b·∫°n ∆°i
    - wow gi·ªèi ta
    - Bi·∫øt ƒëi·ªÅu ƒë·∫•y
    - Woaaaa
    - GH√ä ZAY
    - ƒê∆Ø·ª¢C
    - amazing
    - WONDERFUL
    - NGOAN L·∫ÆM
    - GH√ä
    - Qu√° ƒë∆∞·ª£c lu√¥n kkk
    - TUYET VOI
    - T·ªêT ƒê·∫§Y
    - I am feeling very good
    - hmm m·ªôt ch√∫t
    - R·∫§T HAY
    - I AM GREAT
    - AMAZING GOOD JOB EM
    - CHATBOT COI V·∫¨Y M√Ä C≈®NG CHI·∫æN PH·∫æT
    - tuy·ªát v·ªùi
    - VE RI G√öT
    - QU√Å GI·ªéI
    - C≈®NG KH√Å PH·∫æT ƒê·∫§Y CH·ª®
    - I'm good
    - Amazing good job em
    - vip pro lu√¥n ng∆∞·ªùi anh em
    - uii x·ªãn th·∫ø
    - Xu·∫•t cmn s·∫Øc
    - TUY·ªÜT C√ö M√àO
    - so weird :v
    - PERFECT
    - Vui
    - perfect
    - VIP PRO LU√îN NG∆Ø·ªúI ANH EM
    - NH√Ä NG∆Ø∆†I C≈®NG C√ì H·∫¢O KH√ç ƒê·∫§Y
    - Y√™u
    - qu√° vip lu√¥n
    - l√†m t·ªët l·∫Øm
    - Bot gi·ªèi qu√° taaa
- intent: who_create_you
  examples: |
    - cho m√¨nh xin link facebook hai ng∆∞·ªùi ƒë√£ t·∫°o ra b·∫°n ƒëi
    - cho tui xin link facebook ng∆∞·ªùi ƒë√£ t·∫°o ra m√†y ƒë∆∞·ª£c hong bot ><
    - T√°c gi·∫£ l√† ai
    - Khai nhanh, th·∫±ng n√†o ƒë√£ t·∫°o ra m√†y?
    - Cho tao h·ªèi t√°c gi·∫£ c·ªßa m√†y l√† th·∫±ng n√†o ?
    - Th·∫±ng n√†o ƒë√£ thi·∫øt k·∫ø ra m√†y
    - ai ƒë√£ thi·∫øt k·∫ø m√†y?
    - who created you ?
    - Th·∫Øng l√† ai
    - NH·ªÆNG NG∆Ø·ªúI ƒê√É ƒê√ìNG G√ìP TRONG VI·ªÜC T·∫†O RA M√ÄY G·ªíM NH·ªÆNG AI
    - Who is the author of this project
    - NG∆Ø·ªúI N√ÄO ƒê√É T·∫†O RA M V·∫¨Y BOT NGU
    - AI ƒê√É NH√ÄO N·∫∂N RA M√ÄY TH·∫æ BOT NGU
    - Nguy·ªÖn L√™ Anh Qu√¢n v√† D∆∞∆°ng ƒê√¨nh Th·∫Øng h·ªçc khoa n√†o
    - TH·∫∞NG N√ÄO ƒê√É THI·∫æT K·∫æ RA M√ÄY
    - AI DA TAO RA MAY
    - Bot ∆°i ai l√†m ra m√†y v·∫≠y
    - Ai ƒë√£ l·∫≠p tr√¨nh ra m th·∫ø bot
    - Nh·ªØng ng∆∞·ªùi ƒë√£ t·∫°o ra m√†y
    - nguoi nao da thiet ke ra m
    - WHO IS THE AUTHOR OF THIS PROJECT
    - √™ th·∫±ng lz n√†o t·∫°o ra ml m√†y th·∫ø
    - √ù m√¨nh l√† c√°ch n√†o t·∫°o ra b·∫°n
    - Ai t·∫°o ra b·∫°n v·∫≠y
    - ng∆∞·ªùi ƒë√£ mang m√†y ƒë·∫øn ƒë√¢y l√† ai V·∫≠y
    - Qu√¢n ngu l√† ai
    - L·∫¨P TR√åNH VI√äN N√ÄO ƒê√É T·∫†O RA M√ÄY
    - ƒê·ªó Ti·∫øn l√† ai?
    - b·∫≠t m√≠ t nghe v·ªÅ k·∫ª s√°ng t·∫°o ra m ƒë∆∞·ª£c k
    - AI ƒê√É L·∫¨P TR√åNH RA M TH·∫æ BOT
    - L·∫≠p tr√¨nh vi√™n n√†o ƒë√£ t·∫°o ra m√†y
    - Qu√¢n l√† ai
    - NG∆Ø·ªúI ƒê√É MANG M√ÄY ƒê·∫æN ƒê√ÇY L√Ä AI V·∫¨Y
    - Tac gia thiet ke may la ai
    - Bi·∫øt anh Ti·∫øn ƒê·ªó kh√¥ng b·∫°n?\t
    - ai da tao ra may
    - Cho h·ªèi ai vi·∫øt ra b·∫°n v·∫≠y
    - ai l√† ng∆∞·ªùi ƒë√£ t·∫°o ra c√°i project n√†y v·∫≠y?
    - nguoi nao da tao ra m the bot
    - cho tui ten ve nhung nguoi da tao ra ban di bot
    - Cho tui cai ten ve nguoi da tao ra may di
    - Ai t·∫°o ra b·∫°n
    - ai l√† ng∆∞·ªùi ƒë√£ l√†m n√™n b·∫°n nh∆∞ ng√†y h√¥m nay bot
    - L√†m sao ƒë·ªÉ t·∫°o ra b·∫°n
    - B·∫¨T M√ç T NGHE V·ªÄ K·∫∫ S√ÅNG T·∫†O RA M ƒê∆Ø·ª¢C K
    - Cho h·ªèi ai l√† ng∆∞·ªùi t·∫°o ra chatbot v·∫≠y
    - Cho h·ªèi ai t·∫°o b·∫°n v·∫≠y
    - T√°c gi·∫£ c·ªßa d·ª± √°n n√†y?
    - √ä cho tao xin link ng∆∞·ªùi ƒë√£ t·∫°o ra m√†y ƒë∆∞·ª£c kh√¥ng ?
    - nh·ªØng ng∆∞·ªùi ƒë√£ ƒë√≥ng g√≥p trong vi·ªác t·∫°o ra m√†y g·ªìm nh·ªØng ai
    - AI L√Ä NG∆Ø·ªúI ƒê√É L√ÄM N√äN B·∫†N NH∆Ø NG√ÄY H√îM NAY BOT
    - Nguy·ªÖn L√™ Anh Qu√¢n v√† D∆∞∆°ng ƒê√¨nh Th·∫Øng l√† ai ?
    - cho tui link facebook tac gia cua du an nay di
    - nguoi nao da tao ra may nhu bay gio vay
    - nguoi nao da lam ra may
    - √îNG CODER N√ÄO ƒê√É T·∫†O RA M√ÄY V·∫¨Y
    - Ng∆∞·ªùi n√†o ƒë√£ t·∫°o ra m v·∫≠y bot ngu
    - WHO CREATED YOU ?
    - cho t h·ªèi ng∆∞·ªùi l√†m ra c√°i n√†y
    - ai l√† ng∆∞·ªùi ƒë√£ s√°ng t·∫°o ra m√†y th·∫ø bot
    - N√à BOT ∆†I, T T√í M√í MU·ªêN BI·∫æT AI L√Ä NG∆Ø·ªúI ƒê√É T·∫†O RA M√ÄY V·∫¨Y, B·∫¨T M√ç TAO NGHE ƒê∆Ø·ª¢C K
    - Bi·∫øt Nguy·ªÖn Anh Qu√¢n l√† ai kh√¥ng?
    - CHO T BI·∫æT DANH X∆ØNG C·ª¶A NG∆Ø·ªúI ƒê√É T·∫†O RA M√ÄY N√ÄO
    - link face t√°c gi·∫£
    - T√ÅC GI·∫¢ L√Ä AI
    - T√ÅC GI·∫¢
    - √îng coder n√†o ƒë√£ t·∫°o ra m√†y v·∫≠y
    - AI ƒê√É THI·∫æT K·∫æ M√ÄY?
    - Ai l√† ng∆∞·ªùi ƒë√£ mang m√†y ƒë·∫øn th·∫ø gi·ªõi n√†y th·∫ø bot
    - Anh Qu√¢n
    - √ä CHO TAO XIN LINK NG∆Ø·ªúI ƒê√É T·∫†O RA M√ÄY ƒê∆Ø·ª¢C KH√îNG ?
    - N√® bot ∆°i, t t√≤ m√≤ mu·ªën bi·∫øt ai l√† ng∆∞·ªùi ƒë√£ t·∫°o ra m√†y v·∫≠y, b·∫≠t m√≠ tao nghe ƒë∆∞·ª£c k
    - NH·ªÆNG NG∆Ø·ªúI ƒê√É T·∫†O RA M√ÄY
    - √ä BOT LZ QU√à, AI L√Ä NG∆Ø·ªúI T·∫†O RA M V
    - Cho t cai ten ve nguoi da tao ra m di
    - ai la nguoi da tao ra may v
    - AI L√Ä NG∆Ø·ªúI ƒê√É MANG M√ÄY ƒê·∫æN TH·∫æ GI·ªöI N√ÄY TH·∫æ BOT
    - LINK FACE T√ÅC GI·∫¢
    - Cho tui xin link face cua nhung nguoi da tao ra ban di hihi
    - Ai l√†m t√°c gi·∫£ c·ªßa m√†y
    - ai ƒë√£ nh√†o n·∫∑n ra m√†y th·∫ø bot ngu
    - CHO T H·ªéI NG∆Ø·ªúI L√ÄM RA C√ÅI N√ÄY
    - Ai l√† ng∆∞·ªùi ƒë√£ l√†m m√†y ra n√¥ng n·ªói nh∆∞ n√†y v·∫≠y bot ngu
- intent: feeling_good
  examples: |
    - ·ªîN
    - b√† m v·∫´n kh·ªèe c·∫£m ∆°n
    - d·∫°o n√†y th√¨ m√¨nh v·∫´n ok
    - m√¨nh v·∫´n ok
    - kh·ªèe c·∫£m ∆°n
    - T C√íN ƒêANG SUNG M√ÉN M√Ä
    - M√¨nh kh·ªèe c·∫£m ∆°n
    - I'm really excited today
    - M√åNH C√íN KH·ªéE L·∫ÆM NHA B·ªí
    - C·∫¢M ∆†N B·∫†N BOT NHI·ªÄU NHA M√åNH V·∫™N KH·ªéE
    - M√åNH KH·ªéE C·∫¢M ∆†N
    - HIHI M√åNH ·ªîN C·∫¢M ∆†N BOT
    - m√¨nh v·∫´n ·ªïn ch√°n nha b·∫°n ∆°i
    - m√¨nh fine l·∫Øm nha
    - M√¨nh ·ªïn l·∫Øm
    - m√¨nh kh·ªèe c·∫£m ∆°n b·∫°n r·∫•t nhi·ªÅu
    - Kh√¥ng nh·ªØng kh·ªèe m√† c√≤n ƒëang r·∫•t sung s·ª©c
    - √îNG ƒê√ÇY V·∫™N ·ªîN NH√â
    - UI TUI V·∫™N C√íN NGON ZAI L·∫ÆM NHA C·∫¢M ∆†N
    - Dƒ© nhi√™n l√† v·∫´n kh·ªèe r
    - M√åNH V·∫™N GREAT
    - Absolutely fine
    - HEHE T V·∫™N ·ªîN NHA
    - OK L·∫ÆM
    - KH·ªéE C·∫¢M ∆†N
    - √¥ng m v·∫´n c√≤n ok l·∫Øm nha
    - ANH KH·ªéE C·∫¢M ∆†N EM
    - B·ªê M√ÄY KH·ªéE L·∫ÆM
    - C·∫¢M ∆†N M√åNH KH·ªéE L·∫ÆM
    - Ui tui v·∫´n c√≤n ngon zai l·∫Øm nha c·∫£m ∆°n
    - ch·ªã v·∫´n t·ªët nha
    - Excellent sir
    - Very okay, thank you
    - hehe t v·∫´n ·ªïn nha
    - T c√≤n kh·ªèe
    - tui ·ªïn c·∫£m ∆°n
    - Kh·ªèe c√°m ∆°n nhi·ªÅu
    - t ƒëang c·ª±c k√¨ ·ªïn
    - a kh·ªèe
    - C≈©ng t·∫°m ·ªïn
    - em kh·ªèe
    - CH·ªä C√íN KH·ªéE NHA EM
    - A KH·ªéE
    - B√† ƒë√¢y kh·ªèe c·∫£m ∆°n
    - T ƒêANG C·ª∞C K√å ·ªîN
    - b·ªë m√†y kh·ªèe l·∫Øm
    - C≈®NG T·∫†M ·ªîN
    - TUI ·ªîN C·∫¢M ∆†N
    - Just fantastic
    - Today I feel so good
    - √î kh√™ kh·ªèe nha
    - I'm feeling great
    - ·ªïn
    - C·ª∞C K√å KH·ªéE NHA
    - Very very good
    - T c√≤n ƒëang sung m√£n m√†
    - UI GI·ªúI M√åNH OK L·∫ÆM C·∫¢M ∆†N NHA
    - √îng ƒë√¢y v·∫´n ·ªïn nh√©
    - M√¨nh c√≤n kh·ªèe l·∫Øm nha b·ªì
    - M√åNH KH·ªéE C·∫¢M ∆†N B·∫†N R·∫§T NHI·ªÄU
    - KH·ªéE C√ÅM ∆†N NHI·ªÄU
    - Extremely good
    - D·∫†O N√ÄY TH√å M√åNH V·∫™N OK
    - c·∫£m ∆°n m√¨nh kh·ªèe l·∫Øm
    - KH·ªéE
    - c·ª±c k√¨ kh·ªèe nha
    - TAO TH·∫¨T S·ª∞ R·∫§T KH·ªéE C·∫¢M ∆†N M√ÄY ƒê√É QUAN T√ÇM TAO
    - C·ª® T·∫†M G·ªåI L√Ä ·ªîN ƒêI
    - M√åNH V·∫™N OK
    - Anh kh·ªèe c·∫£m ∆°n em
    - EM KH·ªéE
    - ch·ªã c√≤n kh·ªèe nha em
    - kh√° l√† ok
    - KH√îNG NH·ªÆNG KH·ªéE M√Ä C√íN ƒêANG R·∫§T SUNG S·ª®C
    - C·ª© t·∫°m g·ªçi l√† ·ªïn ƒëi
    - kh·ªèe
    - Good l·∫Øm
    - I'm just feeling fine today
    - M√åNH ·ªîN L·∫ÆM
    - √î KH√ä KH·ªéE NHA
    - B·ªê M KH·ªéE L·∫ÆM
    - B·ªë m kh·ªèe l·∫Øm
    - I'm a bit okay
    - c·∫£m ∆°n b·∫°n bot nhi·ªÅu nha m√¨nh v·∫´n kh·ªèe
    - tao kho·∫ª
- intent: want_to_practice_cpp
  examples: |
    - t mu·ªën dc √¥n b√†i v·ªÅ c++
    - √™ bot ∆°i t mu·ªën luy·ªán code tay
    - LUY·ªÜN CHO TUI V√ÄI B√ÄI CODE C DC HONG
    - √ä BOT G·ª¨I T 1 V√ÄI C√ÇU CODE C++ L√ÄM CH∆†I COI N√ÄO
    - √în cu·ªëi k·ª≥ nmlt
    - Cho t l√†m 1 s·ªë b√†i code ƒë·ªÉ luy·ªán ng√≥n n√†o
    - n√® bot ∆°i cho t l√†m 1 s·ªë b√†i t·∫≠p v·ªÅ C++ ƒëi m√†y
    - ChatBot g·ª≠i cho t√¥i 1 s·ªë b√†i to√°n NMLT ƒë·ªÉ luy·ªán tay ƒëi n√†o
    - TAO MU·ªêN ƒêC √îN T·∫¨P CPP
    - √ä bot g·ª≠i t 1 v√†i c√¢u code C++ l√†m ch∆°i coi n√†o
    - eee gui tui 1 so bai code C ikkk
    - √ä BOT ∆†I T MU·ªêN LUY·ªÜN CODE TAY
    - √ä Bot ∆°i t mu·ªën dc gi·∫£i code
    - chatbot ∆°i g·ª≠i m·∫•y b√†i to√°n code NMLT ƒëi n√†o
    - G·ª¨I CHO T√îI 1 S·ªê C√ÅC C√ÅI C√ÇU H·ªéI LI√äN QUAN ƒê·∫æN C++ ƒê√ä
    - √în t·∫≠p gi·ªØa k·ª≥ c++
    - Luyen bai code C/C++
    - EEE G·ª¨I TUI 1 S·ªê B√ÄI CODE C IKKK
    - EEEKK T MU·ªêN DC LUY·ªÜN B√ÄI CODE C √ç
    - eee cho v√†i b√†i t·∫≠p code c v·ªõi
    - N√à BOT ∆†I TAO MU·ªêN ƒêC GI·∫¢I CODE
    - On tap cuoi ky c++
    - L√†m b√†i t·∫≠p C++
    - L√ÄM B√ÄI CODE C++
    - bai tap nmlt
    - CHO T√îI XIN 1 S·ªê B√ÄI T·∫¨P CODE C
    - M√åNH MU·ªêN √îN T·∫¨P C++
    - G·ª¨I TAO 1 S·ªê B√ÄI CODE T·ªêI L√ÄM NG·ª¶ CHO NGON ƒê√ä BOT
    - CHATBOT G·ª¨I CHO T√îI 1 S·ªê B√ÄI TO√ÅN NMLT ƒê·ªÇ LUY·ªÜN TAY ƒêI N√ÄO
    - ne bot oi tao muon dc giai Code
    - e bot oi cho minh lam 1 so bai code c di
    - CHO T L√ÄM 1 S·ªê B√ÄI CODE ƒê·ªÇ LUY·ªÜN NG√ìN N√ÄO
    - B√ÄI T·∫¨P NMLT
    - Luy·ªán b√†i code C/C++
    - Chatbot luyen minh vai bai code c++ xem nao
    - hay cho tao 1 so cac cai bai tap ve c
    - G·ª≠i cho t√¥i 1 s·ªë c√°c c√°i c√¢u h·ªèi li√™n quan ƒë·∫øn C++ ƒë√™
    - L√†m b√†i luy·ªán code
    - LUY·ªÜN T·∫¨P B√ÄI T·∫¨P NMLT C++
    - √ä BOT ∆†I CHO M√åNH L√ÄM 1 S·ªê B√ÄI CODE C ƒêI
    - h√£y cho tao 1 s·ªë c√°c c√°i b√†i t·∫≠p v·ªÅ c
    - luy·ªán b√†i t·∫≠p NMLT
    - cho minh on tap 1 ti xiu ve C++ nao botchat
    - G·ª≠i tao 1 s·ªë b√†i code t·ªëi l√†m ng·ªß cho ngon ƒë√™ bot
    - Cay bai C++
    - B√ÄI √îN NMLT
    - eee g·ª≠i tui 1 s·ªë b√†i code C ikkk
    - C√ÄY B√ÄI T·∫¨P NMLT
    - Gui cho toi 1 so cac cai cau hoi lien quan den C++ de
    - Lam bai code C++
    - M√¨nh mu·ªën √¥n t·∫≠p C++
    - On tap giua ky c++
    - CHATBOT ∆†I G·ª¨I M·∫§Y B√ÄI TO√ÅN CODE NMLT ƒêI N√ÄO
    - ne bot oi cho t lam 1 so bai tap ve C++ di may
    - luy·ªán t·∫≠p b√†i t·∫≠p nmlt c++
    - E bot gui t 1 vai cau code C++ lam choi coi nao
    - n√® bot ∆°i tao mu·ªën ƒëc gi·∫£i Code
    - L√†m b√†i t·∫≠p NMLT
    - b·ªë m mu·ªën dc √¥n t·∫≠p c√°c b√†i v·ªÅ c++
    - √ä BOT ∆†I T MU·ªêN DC L√ÄM 1 S·ªê B√ÄI T·∫¨P CODE
    - C√ÄY B√ÄI C/C++
    - tao mu·ªën ƒëc √¥n t·∫≠p cpp
    - EEE CHO V√ÄI B√ÄI T·∫¨P CODE C V·ªöI
    - √ä BOT ∆†I T MU·ªêN DC GI·∫¢I CODE
    - Chatbot luy·ªán m√¨nh v√†i b√†i code c++ xem n√†o
    - cay bai c/c++
    - c√†y b√†i c/c++
    - CHO T √îN T·∫¨P 1 S·ªê B√ÄI V·ªÄ C++
    - C√ÄY B√ÄI C++
    - CHATBOT LUY·ªÜN M√åNH V√ÄI B√ÄI CODE C++ XEM N√ÄO
    - luyen bai tap NMLT
    - LUY·ªÜN B√ÄI CODE C/C++
    - e bot oi t muon dc lam 1 so bai tap code
    - b√†i t·∫≠p nmlt
    - G·ª¨I CHO M√åNH V√ÄI B√ÄI CODE C ƒêI CHATBOT
    - hay gui cho t 1 so bai tap ve c++
    - luyen tap bai tap nmlt c++
    - gui cho minh vai bai code C di chatbot
    - H√ÉY G·ª¨I CHO T 1 S·ªê B√ÄI T·∫¨P V·ªÄ C++
    - B√†i √¥n nmlt
    - cho t 1 so bai on luyen nhap mon lap trinh
    - B·ªê M MU·ªêN DC √îN T·∫¨P C√ÅC B√ÄI V·ªÄ C++
    - eeekk t muon dc luyen bai code C i
    - cho m√¨nh √¥n t·∫≠p 1 t√≠ x√≠u v·ªÅ C++ n√†o botchat
    - cho t √¥n t·∫≠p 1 s·ªë b√†i v·ªÅ c++
    - L√†m b√†i code C++
    - Ok luyen bai C++
    - OK LUY·ªÜN B√ÄI C++
    - L√†m b√†i code tay
    - √îN CU·ªêI K·ª≤ NMLT
    - C√†y b√†i C++
    - LUY·ªÜN B√ÄI T·∫¨P NMLT
    - c√†y c√°c c√°i b√†i to√°n v·ªÅ NMLT
    - E Bot oi t muon dc giai code
    - trau d·ªìi kƒ© thu·∫≠t l√†m b√†i c++
    - L√ÄM B√ÄI CODE TAY
    - chatbot oi gui may bai toan code NMLT di nao
    - T MU·ªêN DC √îN B√ÄI V·ªÄ C++
    - cay bai tap NMLT
    - trau doi ki thuat lam bai c++
    - cho t on tap 1 so bai ve c++
    - g·ª≠i t√¥i b√†i c++ nmlt
    - bo m muon dc on tap cac bai ve c++
    - h√£y g·ª≠i cho t 1 s·ªë b√†i t·∫≠p v·ªÅ c++
    - g·ª≠i cho m√¨nh v√†i b√†i code C ƒëi chatbot
    - cay cac cai bai toan ve NMLT
    - cho t 1 s·ªë b√†i √¥n luy·ªán nh·∫≠p m√¥n l·∫≠p tr√¨nh
    - On cuoi ky nmlt
    - L√ÄM B√ÄI LUY·ªÜN CODE
    - C√ÄY C√ÅC C√ÅI B√ÄI TO√ÅN V·ªÄ NMLT
    - L√ÄM B√ÄI T·∫¨P NMLT
- intent: want_to_ask
  examples: |
    - HOI CAI
    - NGHE TAO H·ªéI N√à
    - E bot t hoi cai
    - H·ªèi n√†y n√®
    - tao h·ªèi c√°i nha
    - GI√öP M√åNH M·ªòT S·ªê C√ÇU H·ªéI C++ ƒê∆Ø·ª¢C KH√îNG
    - E T HOI NAY CAI
    - OK H HOI CAU NAY DI
    - DUOC R GIO T HOI M CAI NAY NE
    - HEY BOT TAO N√ìI NGHE
    - Gi√∫p tao c√°i
    - OK ƒê·ªÇ T H·ªéI M C√ÅI N√ÄY NHA
    - ok h t h·ªèi m c√¢u n√†y n√†y
    - Hoi lai lan nua
    - OK ƒê·ªÇ T H·ªéI C√ÅI N√ÄY
    - TRA LOI GIUP TAO CAU NAY
    - YO HOI NAY COI
    - HOI NAY NE
    - Cho m√¨nh h·ªèi th√™m n·ªØa ƒë∆∞·ª£c kh√¥ng
    - NGHE TAO HOI NE
    - CHO TAO HOI MOT CHUT VE C++
    - HEY BOT TAO NOI NGHE
    - nghe tao h·ªèi n√®
    - CHO TAO H·ªéI M·ªòT CH√öT V·ªÄ C++
    - Ok ƒë·ªÉ t h·ªèi m c√°i n√†y
    - TAO N√ìI NGHE N√à
    - 0k h de t hoi m cai nay
    - ok luon de t tim cau hoi nay
    - E BOT GIUP TAO CAI
    - E BOT T HOI CAI
    - ok h hoi cau nay di
    - √ä BOT GI√öP TAO C√ÅI
    - GIUP TAO CAI
    - HELLO BOT TAO H·ªéI C√ÅI N√ÄY C√ÅI
    - ok h t hoi m cau nay nay
    - ok h h·ªèi c√¢u n√†y ƒëi
    - Minh hoi ban ti nha
    - HELLO BOT TAO HOI CAI NAY CAI
    - GI√öP TAO M·ªòT CH√öT ƒê∆Ø·ª¢C KH√îNG?
    - e bot giup tao cai
    - TAO NOI NGHE NE
    - hoi cai
    - H·ªèi t√≠ ƒë∆∞·ª£c kh√¥ng
    - H·ªéI L·∫†I
    - n√†y h·ªèi t√≠
    - giup minh mot so cau hoi C++ duoc khong
    - ok lu√¥n ƒë·ªÉ t t√¨m c√¢u h·ªèi n√†y
    - MINH HOI BAN TI NHA
    - TAO H·ªéI C√ÅI N√ÄY T√ç ƒê∆Ø·ª¢C KH√îNG?
    - duoc r gio t hoi m cai nay ne
    - Cho minh hoi them nua duoc khong
    - 0k h ƒë·ªÉ t h·ªèi m c√°i n√†y
    - nghe cau hoi cua tao ne
    - TAO HOI CAI NAY TI DUOC KHONG?
    - OK LU√îN ƒê·ªÇ T T√åM C√ÇU H·ªéI N√ÄY
    - NAY HOI TI
    - hello bot tao hoi cai nay cai
    - hey bot tao n√≥i nghe
    - √ä CHO TAO H·ªéI C√ÅI
    - √™ bot gi√∫p tao c√°i
    - H·ªéI C√ÅI
    - Tr·∫£ l·ªùi gi√∫p tao c√¢u n√†y
    - gi√∫p m√¨nh m·ªôt s·ªë c√¢u h·ªèi C++ ƒë∆∞·ª£c kh√¥ng
    - TR·∫¢ L·ªúI GI√öP TAO C√ÇU N√ÄY
    - H·ªèi l·∫°i l·∫ßn n·ªØa
    - OK H H·ªéI C√ÇU N√ÄY ƒêI
    - nghe c√¢u h·ªèi c·ªßa tao n√®
    - hey bot tao noi nghe
    - Hoi ti duoc khong
    - tao noi nghe ne
    - √™ t h·ªèi n√†y c√°i
    - nghe tao hoi ne
    - M√¨nh h·ªèi b·∫°n t√≠ nha
    - OK DE T HOI CAI NAY
    - Ok de t hoi m cai nay nha
    - √ä BOT T H·ªéI C√ÅI
    - Ok ƒë·ªÉ t h·ªèi m c√°i n√†y nha
    - ƒê∆Ø·ª¢C R GI·ªú T H·ªéI M C√ÅI N√ÄY N√à
    - Cho m√¨nh h·ªèi c√°i n√†y x√≠ nha
    - HOI LAI
    - Cho m√¨nh h·ªèi
    - cho tao h·ªèi m·ªôt ch√∫t v·ªÅ C++
    - Cho minh hoi cai nay xi nha
    - Cho m√¨nh h·ªèi c√°i n√†y x√≠
    - tao n√≥i nghe n√®
    - Tao hoi cai nay ti duoc khong?
    - Hi bot tao h·ªèi t√≠
    - √™ cho tao h·ªèi c√°i
    - TAO HOI CAI NHA
    - OK H T HOI M CAU NAY NAY
    - OK LUON DE T TIM CAU HOI NAY
    - Gi√∫p tao m·ªôt ch√∫t ƒë∆∞·ª£c kh√¥ng?
    - Yo hoi nay coi
    - tao hoi cai nha
    - H·ªèi c√°c ki·∫øn th·ª©c v·ªÅ C++
    - YO H·ªéI N√ÄY COI
    - TAO H·ªéI C√ÅI NHA
    - h·ªèi c√°i
    - √ä T H·ªéI N√ÄY C√ÅI
    - CHI·∫æN LU√îN GI·ªú ƒê·ªÇ T H·ªéI M N√ÄY NHA
    - 0K H DE T HOI M CAI NAY
    - 0K H ƒê·ªÇ T H·ªéI M C√ÅI N√ÄY
    - E CHO TAO HOI CAI
    - e t hoi nay cai
    - Chien luon gio de t hoi m nay nha
    - M√åNH H·ªéI B·∫†N T√ç NHA
    - HI BOT TAO H·ªéI T√ç
    - Hoi cac kien thuc ve C++
    - ƒë∆∞·ª£c r gi·ªù t h·ªèi m c√°i n√†y n√®
    - e cho tao hoi cai
    - Ok de t hoi m cai nay
    - H·ªèi m·ªôt c√¢u kh√°c
    - Yo h·ªèi n√†y coi
- intent: want_to_practice_flowchart
  examples: |
    - √ä BOT T MU·ªêN LUY·ªÜN L∆ØU ƒê·ªí THU·∫¨T TO√ÅN √Å, M C√ì B√ÄI N√ÄO KH√îNG G·ª¨I T L√ÄM V·ªöI
    - SACH KY THUAT LAP TRINH THAY KHANG BAI TAP FLOWCHART
    - C√ÄY B√ÄI T·∫¨P TH·∫¶Y KHANG
    - s√°ch k·ªπ thu·∫≠t l·∫≠p tr√¨nh th·∫ßy khang b√†i t·∫≠p flowchart
    - B√ÄI TH·∫¶Y KHANG
    - Bai thay Khang
    - ALO ALO CHO A M LUY·ªÜN T√ç SKILL FLOWCHART N√ÄO
    - Ve Flowchart
    - M√åNH MU·ªêN C√ÄY B√ÄI FLOWCHART
    - Luy·ªán t·∫≠p v·∫Ω flowchart
    - th·ª±c h√†nh v·∫Ω b√†i t·∫≠p th·∫ßy Khang
    - √ä bot g·ª≠i t b√†i t·∫≠p s∆° ƒë·ªì thu·∫≠t to√°n coi
    - Cac bai tap giup nang cao kha nang lam bai luu do
    - gui tham khao mot vai cau luu do trong sach ki thuat lap trinh coi nao
    - b√†i l·∫≠p l∆∞u ƒë·ªì thu·∫≠t to√°n s√°ch k·ªπ thu·∫≠t l·∫≠p tr√¨nh
    - TH·ª∞C H√ÄNH V·∫º L∆ØU ƒê·ªí THU·∫¨T TO√ÅN
    - Moi loai bai tap giup up trinh ve luu do
    - thuc hanh ve flowchart
    - bai tap flowchart
    - c√°c d·∫°ng b√†i t·∫≠p gi√∫p n√¢ng tr√¨nh v·∫Ω l∆∞u ƒë·ªì
    - minh muon cay bai flowchart
    - E bot t muon luyen luu do thuat toan a, m co bai nao khong gui t lam voi
    - C√ÅC D·∫†NG B√ÄI T·∫¨P GI√öP N√ÇNG TR√åNH V·∫º L∆ØU ƒê·ªí
    - SACH THAY KHANG BAI TAP
    - b√†i t·∫≠p l∆∞u ƒë·ªì thu·∫≠t to√°n uit
    - FLOWCHART THAY KHANG
    - luyen tap bai thay Khang
    - bai tap sach ki thuat lap trinh thay khang
    - luyen tap ve luu do
    - bai lap luu do thuat toan sach ky thuat lap trinh
    - gui cho toi mot so cau hoi lien quan den phan bai tap luu do thuat toan trong sach ki thuat lap trinh cua thay khang di
    - E, cho t lam bai tham khao cua mot so cau ve flowchart cua thay minh khang di bot
    - luy·ªán t·∫≠p v·∫Ω l∆∞u ƒë·ªì
    - B√ÄI L·∫¨P L∆ØU ƒê·ªí THU·∫¨T TO√ÅN S√ÅCH K·ª∏ THU·∫¨T L·∫¨P TR√åNH
    - e bot, m co bai tap thay Khang nao khong gui t lam voi
    - Flowchart V·∫Ω
    - b√†i t·∫≠p l∆∞u ƒë·ªì thu·∫≠t to√°n
    - c√†y l∆∞u ƒë·ªì thu·∫≠t to√°n
    - B·∫°n ∆°i g·ª≠i cho m√¨nh m·ªôt s·ªë b√†i t·∫≠p flowchart v·ªõi ·∫°
    - C√°c b√†i t·∫≠p gi√∫p n√¢ng cao kh·∫£ nƒÉng l√†m b√†i l∆∞u ƒë·ªì
    - Flowchart th·∫ßy khang
    - LUY·ªÜN T·∫¨P V·∫º FLOWCHART
    - M·ªåI LO·∫†I B√ÄI T·∫¨P GI√öP UP TR√åNH V·∫º L∆ØU ƒê·ªí
    - C√ÅC B√ÄI T·∫¨P GI√öP N√ÇNG CAO KH·∫¢ NƒÇNG L√ÄM B√ÄI L∆ØU ƒê·ªí
    - th·ª±c h√†nh v·∫Ω flowchart
    - C√ÄY L∆ØU ƒê·ªí THU·∫¨T TO√ÅN
    - B√ÄI T·∫¨P S√ÅCH Kƒ® THU·∫¨T L·∫¨P TR√åNH TH·∫¶Y KHANG
    - √™ bot, m c√≥ b√†i t·∫≠p th·∫ßy Khang n√†o kh√¥ng g·ª≠i t l√†m v·ªõi
    - thuc hanh ve bai tap thay Khang
    - Alo, t can bai tap luu do thuat toan, gui t vai cai di
    - Th·ª±c h√†nh v·∫Ω v·ªùi l∆∞u ƒë·ªì
    - cay bai tap thay Khang
    - b√†i t·∫≠p th·∫ßy Khang
    - FLOWCHART V·∫º
    - Thuc hanh ve voi luu do
    - Cho t√¥i l√†m b√†i th·∫ßy Khang
    - G·ª¨I CHO T√îI M·ªòT S·ªê C√ÇU H·ªéI LI√äN QUAN ƒê·∫æN PH·∫¶N B√ÄI T·∫¨P L∆ØU ƒê·ªí THU·∫¨T TO√ÅN TRONG S√ÅCH Kƒ® THU·∫¨T L·∫¨P TR√åNH C·ª¶A TH·∫¶Y KHANG ƒêI
    - FLOWCHART PRACTICE
    - TH·ª∞C H√ÄNH V·∫º B√ÄI T·∫¨P TH·∫¶Y KHANG
    - B√ÄI T·∫¨P L∆ØU ƒê·ªí THU·∫¨T TO√ÅN UIT
    - G·ª≠i b√†i t·∫≠p s√°ch k·ªπ thu·∫≠t l·∫≠p tr√¨nh th·∫ßy Khang
    - Thuc hanh ve luu do thuat toan
    - t mu·ªën luy·ªán t·∫≠p th√™m flowchart
    - Th·ª±c h√†nh v·∫Ω l∆∞u ƒë·ªì thu·∫≠t to√°n
    - T√îI MU·ªêN L√ÄM B√ÄI T·∫¨P TH·∫¶Y KHANG
    - Bai tap luu do thuat toan thay Khang
    - bai tap thay Khang
    - BOT ∆†I, G·ª¨I TUI √îN M·ªòT V√ÄI C√ÇU L∆ØU ƒê·ªí THU·∫¨T TO√ÅN S√ÅCH K·ª∏ THU·∫¨T L·∫¨P TR√åNH ƒêI
    - Cho t√¥i l√†m m·ªôt s·ªë c√¢u v·ªÅ l∆∞u ƒë·ªì thu·∫≠t to√°n c·ªßa th·∫ßy nguy·ªÖn t·∫•n tr·∫ßn minh khang t√°c gi·∫£ c·ªßa s√°ch ƒëi ·∫°
    - sach ki thuat lap trinh cua thay nguyen tan tran minh khang
    - V·∫º FLOWCHART
    - B√ÄI T·∫¨P TH·∫¶Y KHANG
    - ALO, T C·∫¶N B√ÄI T·∫¨P L∆ØU ƒê·ªí THU·∫¨T TO√ÅN, G·ª¨I T V√ÄI C√ÅI ƒêI
    - LUY·ªÜN T·∫¨P B√ÄI TH·∫¶Y KHANG
    - toi muon lam bai tap thay Khang
    - TH·ª∞C H√ÄNH V·∫º FLOWCHART
    - Bai tap thay nguyen tan tran minh khang
    - B√†i t·∫≠p th·∫ßy nguy·ªÖn t·∫•n tr·∫ßn minh khang
    - LUY·ªÜN T·∫¨P V·ªÄ FLOWCHART
    - t muon luyen tap them flowchart
    - c√†y b√†i t·∫≠p th·∫ßy Khang
    - bai tap luu do thuat toan uit
    - luy·ªán t·∫≠p b√†i th·∫ßy Khang
    - t√¥i mu·ªën l√†m b√†i t·∫≠p th·∫ßy Khang
    - T MU·ªêN LUY·ªÜN T·∫¨P TH√äM FLOWCHART
    - LUY·ªÜN T·∫¨P L√ÄM B√ÄI T·∫¨P TH·∫¶Y KHANG
    - √ä bot t mu·ªën luy·ªán l∆∞u ƒë·ªì thu·∫≠t to√°n √°, m c√≥ b√†i n√†o kh√¥ng g·ª≠i t l√†m v·ªõi
    - S√ÅCH K·ª∏ THU·∫¨T L·∫¨P TR√åNH TH·∫¶Y KHANG B√ÄI T·∫¨P FLOWCHART
    - alo alo cho a m luyen ti skill flowchart nao
    - Flowchart Ve
    - TH·ª∞C H√ÄNH V·∫º V·ªúI L∆ØU ƒê·ªí
    - CHO T√îI L√ÄM B√ÄI TH·∫¶Y KHANG
    - LUY·ªÜN T·∫¨P V·∫º L∆ØU ƒê·ªí
    - G·ª≠i b·ªë m b√†i s∆° ƒë·ªì thu·∫≠t to√°n coi bot
    - G·ª≠i b·ªë m√†y m·ªôt lo·∫°t b√†i Flowchart ƒë·ªÉ v·∫Ω coi n√†o
    - b√†i t·∫≠p s√°ch kƒ© thu·∫≠t l·∫≠p tr√¨nh th·∫ßy khang
    - Alo, t c·∫ßn b√†i t·∫≠p l∆∞u ƒë·ªì thu·∫≠t to√°n, g·ª≠i t v√†i c√°i ƒëi
    - luyen tap lam bai tap thay Khang
    - B√ÄI T·∫¨P FLOWCHART
    - V·∫Ω Flowchart
    - Gui bo may mot loat bai Flowchart de ve coi nao
    - B√ÄI T·∫¨P L∆ØU ƒê·ªí THU·∫¨T TO√ÅN TH·∫¶Y KHANG
    - FLOWCHART TH·∫¶Y KHANG
    - b√†i t·∫≠p flowchart
    - Sach ki thuat lap trinh cua thay Khang
    - Bot ∆°i, g·ª≠i tui √¥n m·ªôt v√†i c√¢u l∆∞u ƒë·ªì thu·∫≠t to√°n s√°ch k·ªπ thu·∫≠t l·∫≠p tr√¨nh ƒëi
    - cay luu do thuat toan
    - luy·ªán t·∫≠p l√†m b√†i t·∫≠p th·∫ßy Khang
    - Ban oi gui cho minh mot so bai tap flowchart voi a
    - m√¨nh mu·ªën c√†y b√†i flowchart
    - s√°ch kƒ© thu·∫≠t l·∫≠p tr√¨nh c·ªßa th·∫ßy nguy·ªÖn t·∫•n tr·∫ßn minh khang
    - sach ky thuat lap trinh thay khang bai tap flowchart
    - g·ª≠i m√¨nh b√†i t·∫≠p l∆∞u ƒë·ªì thu·∫≠t to√°n v·ªõi ·∫°
- intent: dont_want_to_give_flowchart_quest_num
  examples: |
    - Sao t phai tra loi so cau hoi nua?
    - tai s t lai can phai lam nhu vay chi the @@
    - tai vi sao ma m lai bat t chon cau hoi???
    - tai sao t lai co nghia vu dua cau hoi cho m?
    - SAO T PH·∫¢I TR·∫¢ L·ªúI S·ªê C√ÇU H·ªéI N·ªÆA?
    - √™ t·∫°i sao t l·∫°i ph·∫£i tr·∫£ l·ªùi c√¢u n√†y c·ªßa m ?
    - ∆° m ƒëang ra l·ªánh cho t ƒë·∫•y √†?
    - why you need such informations ?
    - V√å S M L·∫†I C·∫¶N C√ÅI TH√îNG TIN ƒê·∫§Y V BOT?
    - ∆° th·∫±ng lz n√†y m ra l·ªánh t √° ?
    - Sao m l·∫°i c·∫ßn c√≥ th√¥ng tin ƒë√≥ ?
    - G·ª≠i t ƒë·∫°i v√†i c√¢u l√†m ch∆°i th√¥i c≈©ng dc r, c·∫ßn g√¨ ph·∫£i s·ªë c√¢u n√†y n·ªç
    - t·∫°i s t l·∫°i c·∫ßn ph·∫£i l√†m nh∆∞ v·∫≠y chi th·∫ø @@
    - t·∫°i sao t l·∫°i ph·∫£i ch·ªâ ƒë·ªãnh c√¢u h·ªèi c·ª• th·ªÉ l√†m g√¨, ƒë∆∞a ƒë·∫°i t c√¢u n√†o c≈©ng dc
    - Vi s lai phai lam the? Cu gui vai cau random lam suong suong la ok r
    - SAO M LAI CAN CO THONG TIN DO ?
    - v√¨ shao l·∫°i c·∫ßn c√≥ s·ªë c√¢u h·ªèi c·ªë ƒë·ªãnh n·ªØa, √¥n t·∫≠p chung chung v√†i c√¢u ƒëi ƒë·ªì bot ngu
    - S lai can phai xac dinh so cau hoi cu the nao do?
    - tai sao lai can co so cau hoi the ? Khong co khong dc a
    - Tai sao m lai can co thong tin do ?
    - √™ √™ t k m√∫n l√†m z·ªã r s
    - Why you need to know that ?
    - S LAI CAN PHAI XAC DINH SO CAU HOI CU THE NAO DO?
    - ·ªßa h·ªèi zay l√†m j ?
    - T·∫°i s l·∫°i ph·∫£i l√†m z·∫≠y chi?
    - t ch·ªâ c·∫ßn l√†m ch∆°i 1 v√†i c√¢u thoiii
    - V√å S L·∫†I PH·∫¢I L√ÄM TH·∫æ? C·ª® G·ª¨I V√ÄI C√ÇU RANDOM L√ÄM S∆Ø∆†NG S∆Ø∆†NG L√Ä OK R
    - T·∫°i s l·∫°i c·∫ßn l√†m v?
    - ∆° ch·ªâ c·∫ßn ƒë∆∞a ra 1 v√†i c√¢u l√† dc r m√†?
    - VI SAO LAI PHAI NOI THEM VU NAY NUA TRONG KHI M CO THE DUA RA DAI 1 VAI CAU CUNG DC MA?
    - V√å SHAO M√Ä C·∫¶N PH·∫¢I N√ìI TH√äM C√ÅI N√ÄY N·ªÆA DKM, ƒê∆ØA ƒê·∫†I RA 1 V√ÄI C√ÇU CMM ƒêI
    - VI S LAI PHAI LAM THE? CU GUI VAI CAU RANDOM LAM SUONG SUONG LA OK R
    - s t l·∫°i c·∫ßn ph·∫£i tr·∫£ l·ªùi th√™m 1 c√¢u n√†y n·ªØa v?
    - vi shao ma can phai noi them cai nay nua dkm, dua dai ra 1 vai cau cmm di
    - T·∫°i sao l·∫°i ph·∫£i c·ª• th·ªÉ h√≥a 1 c√¢u h·ªèi b·∫•t k√¨? tao mu·ªën √¥n t·∫≠p th√¨ c·ª© √¥n t·∫≠p chung chung cho tao ƒëi con bot ngu
    - V√å SHAO L·∫†I C·∫¶N C√ì S·ªê C√ÇU H·ªéI C·ªê ƒê·ªäNH N·ªÆA, √îN T·∫¨P CHUNG CHUNG V√ÄI C√ÇU ƒêI ƒê·ªí BOT NGU
    - √ä t·∫°i s t√¥i l·∫°i ph·∫£i c·ª• th·ªÉ h√≥a m·ªôt c√¢u n√†o ƒë√≥ ???
    - TAI S LAI CAN SO CAU HOI? K TU DUA 1 VAI CAU RA DC A?
    - vi sao lai phai noi them vu nay nua trong khi m co the dua ra dai 1 vai cau cung dc ma?
    - G·ª¨I ƒê·∫†I V√ÄI C√ÇU RANDOM C≈®NG DC R M√Ä???
    - vi shao lai can co so cau hoi co dinh nua, on tap chung chung vai cau di do bot ngu
    - s bo m lai phai tra loi zu nay? dua dai ra 1 cau nao day di cung dc
    - T·∫†I SAO M L·∫†I C·∫¶N C√ì TH√îNG TIN ƒê√ì ?
    - Tai s lai can lam v?
    - TAI S LAI PHAI LAM NHU THE?
    - t·∫°i v√¨ sao m√† m l·∫°i b·∫Øt t ch·ªçn c√¢u h·ªèi???
    - t·∫°i sao l·∫°i c·∫ßn c√≥ s·ªë c√¢u h·ªèi th·∫ø ? Kh√¥ng c√≥ kh√¥ng dc √†
    - TAI S T LAI CAN PHAI LAM NHU VAY CHI THE @@
    - S m lai can so cau hoi cu the? Tu dua ra 1 vai cau on tap di???
    - ∆° sao l·∫°i c·∫ßn ph·∫£i th√™m c√°i n√†y n·ªØa?
    - why you need to know about that information?
    - T·∫°i sao m l·∫°i c·∫ßn c√≥ th√¥ng tin ƒë√≥ ?
    - T·∫°i shao m l·∫°i ph·∫£i c·∫ßn s·ªë c√¢u h·ªèi th·∫ø? ƒê∆∞a ƒë·∫°i c√¢u g√¨ ra b·ªô kh√¥ng ƒë∆∞·ª£c hay sao?
    - V√å SAO L·∫†I C·∫¶N PH·∫¢I ƒê∆ØA RA S·ªê C√ÇU C·ª§ TH·ªÇ?
    - T·∫†I SAO L·∫†I PH·∫¢I C·ª§ TH·ªÇ H√ìA 1 C√ÇU H·ªéI B·∫§T K√å? TAO MU·ªêN √îN T·∫¨P TH√å C·ª® √îN T·∫¨P CHUNG CHUNG CHO TAO ƒêI CON BOT NGU
    - T·∫†I S L·∫†I PH·∫¢I L√ÄM Z·∫¨Y CHI?
    - Sao t ph·∫£i tr·∫£ l·ªùi s·ªë c√¢u h·ªèi n·ªØa?
    - tai sao t lai phai so cau hoi cho m
    - S T LAI CAN PHAI TRA LOI THEM 1 CAU NAY NUA V?
    - SAO M√åNH L·∫†I C·∫¶N PH·∫¢I TR·∫¢ L·ªúI TH√äM C√ÇU N√ÄY N·ªÆA? ƒê∆ØA M√åNH ƒê·∫†I 1 C√ÇU N√ÄO TH√îI C≈®NG DC R
    - S B·ªê M L·∫†I PH·∫¢I TR·∫¢ L·ªúI Z·ª§ N√ÄY? ƒê∆ØA ƒê·∫†I RA 1 C√ÇU N√ÄO ƒê·∫§Y ƒêI C≈®NG DC
    - S L·∫†I C·∫¶N PH·∫¢I X√ÅC ƒê·ªäNH S·ªê C√ÇU H·ªéI C·ª§ TH·ªÇ N√ÄO ƒê√ì?
    - T·∫†I SAO L·∫†I C·∫¶N C√ì S·ªê C√ÇU H·ªéI TH·∫æ ? KH√îNG C√ì KH√îNG DC √Ä
    - TAI VI SAO MA M LAI BAT T CHON CAU HOI???
    - Is it ok if I dont want to answer that questions ?
    - T·∫†I S L·∫†I C·∫¶N S·ªê C√ÇU H·ªéI? K T·ª∞ ƒê∆ØA 1 V√ÄI C√ÇU RA DC √Ä?
    - vi sao tao lai can phai tra loi them cau hoi nay cua may nua v bot
    - sao lai phai noi them vu nay nua the?
    - S M L·∫†I C·∫¶N S·ªê C√ÇU H·ªéI C·ª§ TH·ªÇ? T·ª∞ ƒê∆ØA RA 1 V√ÄI C√ÇU √îN T·∫¨P ƒêI???
    - VI SHAO LAI CAN CO SO CAU HOI CO DINH NUA, ON TAP CHUNG CHUNG VAI CAU DI DO BOT NGU
    - tai sao t lai phai chi dinh cau hoi cu the lam gi, dua dai t cau nao cung dc
    - T·∫†I V√å SAO M√Ä M L·∫†I B·∫ÆT T CH·ªåN C√ÇU H·ªéI???
    - S l·∫°i c·∫ßn ph·∫£i x√°c ƒë·ªãnh s·ªë c√¢u h·ªèi c·ª• th·ªÉ n√†o ƒë√≥?
    - SAO L·∫†I PH·∫¢I N√ìI TH√äM V·ª§ N√ÄY N·ªÆA TH·∫æ?
    - TAI S LAI CAN LAM V?
    - Vi sao lai can phai dua ra so cau cu the?
    - ·ª¶a n√® h·ªèi zay l√†m j th·∫ø ?
    - Tai shao m lai phai can so cau hoi the? Dua dai cau gi ra bo khong duoc hay sao?
    - T·∫†I SAO T L·∫†I PH·∫¢I CH·ªà ƒê·ªäNH C√ÇU H·ªéI C·ª§ TH·ªÇ L√ÄM G√å, ƒê∆ØA ƒê·∫†I T C√ÇU N√ÄO C≈®NG DC
    - VI SHAO MA CAN PHAI NOI THEM CAI NAY NUA DKM, DUA DAI RA 1 VAI CAU CMM DI
    - V√¨ s m l·∫°i c·∫ßn c√°i th√¥ng tin ƒë·∫•y v bot?
    - T·∫°i s l·∫°i ph·∫£i l√†m nh∆∞ th·∫ø?
    - ∆° k√¨a sao m√¨nh l·∫°i ph·∫£i n√≥i th√™m th√¥ng tin ƒë·∫•y?
    - VI S M LAI CAN CAI THONG TIN DAY V BOT?
    - v√¨ sao l·∫°i ph·∫£i n√≥i th√™m v·ª• n√†y n·ªØa trong khi m c√≥ th·ªÉ ƒë∆∞a ra ƒë·∫°i 1 v√†i c√¢u c≈©ng dc m√†?
    - Sao tao lai can phai dua so cau hoi cu the nhu the?
    - S BO M LAI PHAI TRA LOI ZU NAY? DUA DAI RA 1 CAU NAO DAY DI CUNG DC
    - tai s lai can so cau hoi? k tu dua 1 vai cau ra dc a?
    - ·ªßa m√† h·ªèi z·ªã chi bot ngu ?
    - T·∫°i s l·∫°i c·∫ßn s·ªë c√¢u h·ªèi ƒë·ªÉ l√†m g√¨?
    - TAI S LAI PHAI LAM ZAY CHI?
    - Tai s lai can so cau hoi de lam gi?
    - SAO M L·∫†I C·∫¶N C√ì TH√îNG TIN ƒê√ì ?
    - V√å SAO TAO L·∫†I C·∫¶N PH·∫¢I TR·∫¢ L·ªúI TH√äM C√ÇU H·ªéI N√ÄY C·ª¶A M√ÄY N·ªÆA V BOT
    - Gui dai vai cau random cung dc r ma???
    - S T L·∫†I C·∫¶N PH·∫¢I TR·∫¢ L·ªúI TH√äM 1 C√ÇU N√ÄY N·ªÆA V?
    - TAI SAO LAI PHAI CU THE HOA 1 CAU HOI BAT KI? TAO MUON ON TAP THI CU ON TAP CHUNG CHUNG CHO TAO DI CON BOT NGU
    - T ch·ªâ mu·ªën m·ªôt v√†i c√¢u th√¥i k c·∫ßn ph·∫£i c·ª• th·ªÉ ƒë√¢u
    - Sao minh lai can phai tra loi them cau nay nua? Dua minh dai 1 cau nao thoi cung dc r
    - T·∫†I S L·∫†I C·∫¶N S·ªê C√ÇU H·ªéI ƒê·ªÇ L√ÄM G√å?
    - s b·ªë m l·∫°i ph·∫£i tr·∫£ l·ªùi z·ª• n√†y? ƒë∆∞a ƒë·∫°i ra 1 c√¢u n√†o ƒë·∫•y ƒëi c≈©ng dc
    - v√¨ sao tao l·∫°i c·∫ßn ph·∫£i tr·∫£ l·ªùi th√™m c√¢u h·ªèi n√†y c·ªßa m√†y n·ªØa v bot
    - VI SAO LAI CAN PHAI DUA RA SO CAU CU THE?
    - Tai s lai phai lam zay chi?
    - t·∫°i s l·∫°i c·∫ßn s·ªë c√¢u h·ªèi? k t·ª± ƒë∆∞a 1 v√†i c√¢u ra dc √†?
    - Sao m√¨nh l·∫°i c·∫ßn ph·∫£i tr·∫£ l·ªùi th√™m c√¢u n√†y n·ªØa? ƒê∆∞a m√¨nh ƒë·∫°i 1 c√¢u n√†o th√¥i c≈©ng dc r
    - T·∫†I SAO T L·∫†I C√ì NGHƒ®A V·ª§ ƒê∆ØA C√ÇU H·ªéI CHO M?
    - T·∫†I S L·∫†I C·∫¶N L√ÄM V?
    - Why I need to answer that ?
    - S m l·∫°i c·∫ßn s·ªë c√¢u h·ªèi c·ª• th·ªÉ? T·ª± ƒë∆∞a ra 1 v√†i c√¢u √¥n t·∫≠p ƒëi???
    - C·ª© g·ª≠i b·ªë m 1 v√†i c√¢u l√†m ch∆°i ch∆°i s∆∞∆°ng s∆∞∆°ng l√† ƒë·ªß r
    - t·∫°i sao t l·∫°i ph·∫£i s·ªë c√¢u h·ªèi cho m
    - TAI SAO T LAI CO NGHIA VU DUA CAU HOI CHO M?
    - SAO T PHAI TRA LOI SO CAU HOI NUA?
    - SAO TAO LAI CAN PHAI DUA SO CAU HOI CU THE NHU THE?
    - T·∫†I SAO T L·∫†I PH·∫¢I S·ªê C√ÇU H·ªéI CHO M
- intent: greet
  examples: |
    - YO YO YO
    - N√ç H·∫†O
    - Hello
    - helllo
    - n·ªâ h·∫£o
    - CH√ÄO B·∫†N
    - Nƒ® H√ÉO
    - √ä M√ÄY
    - √™ m√†y
    - yo wtf
    - HEY SIR
    - CH√ÄO C·∫¨U
    - KONBANWA
    - √† l·ªë
    - YO WTF TH·∫∞NG EM
    - Hi bott iuuu
    - NI HAO
    - ch√†o ƒë·ªìng ch√≠
    - ALO M√ÄY
    - Hai
    - √™ th·∫±ng kia
    - ch√†o b·∫°n
    - hey sir
    - N√ÄY B·∫†N EII
    - CHAO X√åN
    - HELLO M√ÄY
    - Alo b·∫°n ∆°i
    - e
    - n√†y b·∫°n eii
    - Hello tinh yeu
    - nihao
    - alo em
    - YO
    - XIN CH√ÄO
    - N√ç H·∫¢O
    - √™ m√†i
    - YO ∆ØTF
    - CH√ÄO M√ÄY
    - CH√ÄO ƒê·ªíNG CH√ç
    - yo ∆∞tf
    - nƒ© h√£o
    - hai
    - √ä B·∫†N EII
    - alo
    - yooo
    - Nƒ© h·∫£o
    - √ä bro
    - HI
    - nƒ© h·∫£o
    - B·∫†N EI
    - √ä c∆∞ng
    - E
    - ohayo gozaimasu
    - ALO ANH EM
    - .
    - hello m√†y
    - √ä TH·∫∞NG KIA
    - Xin ch√†o
    - bot ∆°i d·∫≠y ƒëi
    - Xin ch√†o bot
    - √ä C∆ØNG
    - Xin ch√†o Chatbot
    - Hi bot
    - l√¥
    - hiii
    - CH√ÄO ANH
    - H√ä L√î NG∆Ø·ªúI ANH EM
    - hello b·∫°n ∆°i
    - Hello Bot
    - alo m√†y
    - Nƒ® H·∫¢O
    - b·∫°n ei
    - HI SIR
    - HIII
    - alo alo
    - √ä B·∫†N √äII
    - h√≠ b·∫°n
    - Xin ch√†o Bot
    - hi there
    - hi sir
    - n√†y th·∫±ng kia
    - √™ b·∫°n √™ii
    - Ch√†o th√¢n √°i
    - HELLO B·∫†N
    - A L√î
    - konnichiwa
    - H√ç B·∫†N
    - MADAM
    - hey
    - CH√ÄO EM
    - ch√†o c·∫≠u
    - OHAYO GOZAIMASU
    - h·∫ø l√¥
    - √™ b·∫°n eii
    - ALO B·∫†N EIII
    - HEY THERE
    - ALO
    - ni hao
    - HEY
    - √ä BRO
    - √ä
    - yo
    - EE BANJ EEII
    - √™
    - YOOO
    - CH√ÄO TH√ÇN √ÅI
    - Alo
    - Nƒ® H·∫†O MA
    - konbanwa
    - ee banj eeii
    - H√∫
    - Ch√†o
    - yo yo yo
    - n√≠ h·∫£o
    - hello
    - eeee
    - YO WTF
    - chao x√¨n
    - heloo
    - NIHAO
- intent: stop_asking
  examples: |
    - Ngh·ªâ cmm ƒëi
    - t·ª´ t·ª´ r·ªìi t h·ªèi m
    - C√∫t x√©o
    - Th√¥i ƒë∆∞·ª£c r·ªìi m√¨nh kh√¥ng c·∫ßn h·ªèi th√™m ƒë√¢u, c·∫£m ∆°n nha
    - bi·∫øn ƒëi em
    - M√†y bi·∫øn ƒëi
    - th√¥i d·∫πp h·∫øt ƒëi t k h·ªèi g√¨ ƒë√¢u
    - D·∫πp
    - Ko
    - Th√¥i t k h·ªèi ƒë√¢u, ƒëi ƒë√¢y
    - t·ª´ t·ª´ ƒë·ª£i t√≠ suy nghƒ© c√¢u h·ªèi ƒë√£
    - HOIII
    - t test m th√¥i ch·ª© t k h·ªèi ƒë√¢u
    - th√¥i em kh√¥ng h·ªèi anh ƒë√¢u
    - T ch∆∞a t√≠nh h·ªèi g√¨ h·∫øt
    - Th√¥i d·∫πp k h·ªèi
    - √† th√¥i kh·ªèi ƒëi
    - ak k c√≥ g√¨ h·∫øt
    - √Ä K C√ì G√å ƒê√ÇU
    - √Ä TH√îI K C√ì G√å
    - Th√¥i ƒë∆∞·ª£c r ngh·ªâ th√¥i k h·ªèi n·ªØa
    - T·ª™ T·ª™ M·ªòT T√ç N·ªÆA E H·ªéI A SAU
    - Ah kh√¥ng c√≥ g√¨ ƒë√¢u nha
    - Th√¥i t ƒë·ªïi √Ω r·ªìi kh√¥ng h·ªèi ƒë√¢u
    - T·ª´ t·ª´ l√°t e h·ªèi nha
    - Ch·ªù x√≠ ƒë√≥ tao h·ªèi m√†y
    - √Ä th√¥i ƒëc r
    - TAO CH∆ØA MU·ªêN H·ªéI G√å H·∫æT √Å
    - T CH∆ØA C·∫¶N H·ªéI G√å M H·∫æT
    - T T√çNH TH·ª¨ L√íNG M TH√îI CH·ª® CH∆ØA C·∫¶N H·ªéI G√å H·∫æT
    - Th√¥i ƒë∆∞·ª£c r k mu·ªën h·ªèi g√¨ n·ªØa h·∫øt
    - Th√¥i t k h·ªèi g√¨ n·ªØa ƒë√¢u
    - T·ª™ T·ª™ ƒêI L√ÅT T H·ªéI
    - T K MU·ªêN H·ªéI HAN G√å H·∫æT
    - C√°m ∆°n ko c·∫ßn
    - Th√¥i ƒë∆∞·ª£c r·ªìi em kh√¥ng h·ªèi g√¨ ƒë√¢u
    - ch·ªù ƒë√≥ ƒëi l√°t b·ªë m h·ªèi m sau
    - Ko h·ªèi n·ªØa
    - Ak k c√≥ gj` ƒë√¢u
    - Thua
    - AK TH√îI K C√ì G√å
    - Th√¥i t k mu·ªën h·ªèi n·ªØa
    - th√¥i ƒë∆∞·ª£c r k c·∫ßn n·ªØa
    - th√¥i k c√≥ g√¨
    - T·ª´ t·ª´ ƒëi l√°t h·ªèi
    - AH KH√îNG C√ì G√å ƒê√ÇU NHA
    - √Ä TH√îI KH·ªéI ƒêI
    - TH√îI NGH·ªà ƒêI
    - TH√îI TAO KH√îNG MU·ªêN H·ªéI N·ªÆA
    - √† th√¥i
    - √† k c√≥ g√¨ ƒë√¢u
    - t·ª´ t·ª´ ƒëi t ch∆∞a mu·ªën h·ªèi
    - Ch·ªù ƒë√≥ ƒëi l√°t t tra kh·∫£o m ti·∫øp
    - h√¥ng
    - √Ä K C√ì G√å H·∫æT
    - TAO CH∆ØA C·∫¶N H·ªéI G√å ƒê√ÇU
    - th√¥i t k c·∫ßn h·ªèi n·ªØa
    - t ch∆∞a nghƒ© ra c√¢u h·ªèi n√†o cho m h·∫øt √°
    - C√∫t
    - TH√îI T ƒê·ªîI √ù R·ªíI KH√îNG H·ªéI ƒê√ÇU
    - √Ä TH√îI KH√îNG C√ì G√å
    - TH√îI B·ªé ƒêI
    - T CH∆ØA T√çNH H·ªéI G√å H·∫æT
    - HUII DC √ôI
    - TH√îI EM KH√îNG H·ªéI ANH ƒê√ÇU
    - T·ª™ T·ª™ L√ÅT E H·ªéI NHA
    - t·ª´ t·ª´ b√¨nh tƒ©nh ƒëi l√°t r h·ªèi m sau
    - C√°m ∆°n nh∆∞ng m√¨nh k c√≤n c√¢u h·ªèi n√†o ƒë√¢u
    - TH√îI T K H·ªéI G√å N·ªÆA ƒê√ÇU
    - √Ä TH√îI ƒêC R
    - √Ä KH√îNG C√ì G√å
    - Baii
    - TH√îI B·ªé QUA ƒêI
    - khum
    - TH√îI D·∫∏P H·∫æT
    - TH√îI D·∫∏P K H·ªéI
    - Th√¥i
    - ch·ªù cmm ƒëi l√°t b·ªë m h·ªèi m l·∫°i
    - Ak th√¥i k c√≥ g√¨
    - Tao ch∆∞a mu·ªën h·ªèi g√¨ h·∫øt √°
    - Th√¥i b·ªè ƒëi
    - Ch·ªù ƒë√≥ t h·ªèi m
    - NGH·ªà CMM ƒêI
    - √Ä TH√îI ƒê∆Ø·ª¢C R·ªíI
    - Ch·ªù ƒë√≥ ƒëi l√°t b·ªë m quay l·∫°i h·ªèi m sau
    - t·ª´ t·ª´ r·ªìi h·ªèi sau
    - Nghƒ©
    - T k mu·ªën h·ªèi han g√¨ h·∫øt
    - TH√îI NGH·ªà NHA T K H·ªéI N·ªÆA ƒê√ÇU
    - √† th√¥i kh·ªèi
    - t ch∆∞a c·∫ßn h·ªèi g√¨ m h·∫øt
    - TH√îI D·∫∏P T K C·∫¶N H·ªéI N·ªÆA
    - t·ª´ t·ª´ m·ªôt t√≠ n·ªØa e h·ªèi a sau
    - T CH∆ØA NGHƒ® RA C√ÇU H·ªéI N√ÄO CHO M H·∫æT √Å
    - Ki
    - √Ä th√¥i kh√¥ng c√≥ g√¨
    - T·ª™ T·ª™ L√ÅT EM H·ªéI A SAU NHA
    - TH√îI ƒê∆Ø·ª¢C R K C·∫¶N N·ªÆA
    - th√¥i tao kh√¥ng mu·ªën h·ªèi n·ªØa
    - Ch·ªù ƒë√≥ ƒë·ªÉ l√°t t h·ªèi m sau
    - TH√îI B·ªé ƒêI T K H·ªéI N·ªÆA
    - ch·ªù ƒë√≥ l√°t t h·ªèi m ti·∫øp
    - √Ä Kh√¥ng c√≥ g√¨
    - TH√îI K C√ì G√å
    - Th√¥i ƒëc r m√¨nh k c·∫ßn h·ªèi n·ªØa ƒë√¢u c·∫£m ∆°n
    - hoyyy kh·ªèi dc ·ªùi
    - TH√îI T K H·ªéI ƒê√ÇU, ƒêI ƒê√ÇY
    - /deny
    - ah th√¥i k c√≥ g√¨ ƒë√¢u
    - TH√îI ƒê∆Ø·ª¢C R·ªíI T K H·ªéI N·ªÆA ƒê√ÇU
    - tao ch∆∞a c√≥ c√¢u h·ªèi n√†o ƒë√¢u
    - huii dc √πi
    - √† k c√≥ g√¨ h·∫øt
    - TH√îI T K MU·ªêN H·ªéI N·ªÆA
    - T·ª´ t·ª´ ƒëi l√°t t h·ªèi
    - deo
    - HOYYY KH·ªéI DC ·ªúI
    - T·ª´ t·ª´ nha ƒë·ª£i c√≥ g√¨ t suy nghƒ© c√¢u h·ªèi r quay l·∫°i sau
    - HI·ªÜN T CH∆ØA C√ì C√ÇU H·ªéI N√ÄO D√ÄNH CHO M H·∫æT √Å
    - T·ª´ t·ª´ l√°t em h·ªèi a sau nha
    - ah k c√≥ g√¨ ƒë√¢u
    - th√¥i b·ªè cmn ƒëi
    - √Ä TH√îI KH·ªéI
    - TH√îI ƒê∆Ø·ª¢C R·ªíI EM KH√îNG H·ªéI G√å ƒê√ÇU
    - Th√¥i ngh·ªâ
    - TAO CH∆ØA C√ì C√ÇU H·ªéI N√ÄO ƒê√ÇU
    - ko
    - th√¥i b·ªè ƒëi t k h·ªèi n·ªØa
    - Hi·ªán t ch∆∞a c√≥ c√¢u h·ªèi n√†o d√†nh cho m h·∫øt √°
    - th√¥i ƒë∆∞·ª£c r·ªìi t k h·ªèi n·ªØa ƒë√¢u
- intent: cpplus_specific_video_tutorial_asking
  examples: |
    - Bai tutorials ve ham [Macro]{"entity": "cpplus_content", "value": "macro"} trong C++
    - Link b√†i v·ªÅ [Bi·∫øn]{"entity": "cpplus_content", "value": "variable"} trong C++
    - G·ª¨I T LINK B√ÄI [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} C√ÅI
    - Link [namespace](cpplus_content)
    - BAI GIANG HAY VE [KIEU KI TU]{"entity": "cpplus_content", "value": "character"} UIT
    - LINK VIDEO B√ÄI GI·∫¢NG V·ªÄ [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"} TRONG C
    - B√ÄI [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} TRONG C++ VIDEO SERIES
    - video l√Ω thuy·∫øt v·ªÅ [m·∫£ng]{"entity": "cpplus_content", "value": "array"} trong C++
    - VIDEO TUTORIALS V·ªÄ [C]{"entity": "cpplus_content", "value": "cplusplus"}++
    - B√†i gi·∫£ng v·ªÅ [m·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} c·ªßa tr∆∞·ªùng ƒë·∫°i h·ªçc c√¥ng ngh·ªá th√¥ng tin
    - Video tutorials [comment](cpplus_content)
    - Mot so video bai quay ve [data types]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - [Namespace]{"entity": "cpplus_content", "value": "namespace"} tutorials
    - Videos v·ªÅ Nh·∫≠p m√¥n [C]{"entity": "cpplus_content", "value": "cplusplus"}++
    - BOT ∆†I B·∫†N G·ª¨I 1 VIDEO TUTORIAL V·ªÄ [CLASS]{"entity": "cpplus_content", "value": "class"} C·ª¶A TR∆Ø·ªúNG UIT C·ª¶A B·∫†N ƒêI
    - VIDEOS TUTORIALS V·ªÄ [NH·∫¨P M√îN L·∫¨P TR√åNH]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - G·ª≠i t 1 s·ªë video v·ªÅ [comment](cpplus_content)
    - TUTORIALS VE KHAI NIEM [VONG LAP]{"entity": "cpplus_content", "value": "loop"} TRONG C++
    - G·ª≠i t 1 link video utube b√†i ki·ªÉu [unsinged]{"entity": "cpplus_content", "value": "unsigned"} ƒë√™
    - VIDEO B√ÄI GI·∫¢NG V·ªÄ [KI·ªÇU D·ªÆ LI·ªÜU]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - VIDEO BAI GIANG VE [KIEU DU LIEU]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - G·ª¨I VIDEO V·ªÄ TUTORIAL [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - B√†i gi·∫£ng l√Ω thuy·∫øt v·ªÅ ki·ªÉu [struct]{"entity": "cpplus_content", "value": "structure"} c·ªßa UIT
    - BAI GIANG VE [CON TRO]{"entity": "cpplus_content", "value": "pointer"} TRONG C++
    - Bai giang hay ve [kieu ki tu]{"entity": "cpplus_content", "value": "character"} UIT
    - INTRODUCTION TO PROGRAMMING TUTORIALS - [COMMENT]{"entity": "cpplus_content", "value": "comment"}
    - video link bai [macro](cpplus_content) C++
    - Introduction to programming tutorials - [Comment]{"entity": "cpplus_content", "value": "comment"}
    - Bai giang ve [con tro]{"entity": "cpplus_content", "value": "pointer"} trong C++
    - [M·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} video link youtube
    - video bai giang ve [kieu du lieu]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - video tutorials v·ªÅ [C]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒëi bot ∆°i
    - √™ bot g·ª≠i t link b√†i [comment](cpplus_content) ƒëi
    - Video v·ªÅ nh·∫≠p m√¥n [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - gui t link bai [namespace](cpplus_content) cai
    - LINK UTUBE B√ÄI GI·ªöI THI·ªÜU V·ªÄ KI·ªÇU [UNSIGNED]{"entity": "cpplus_content", "value": "unsigned"} TRONG C++
    - YOUTUBE LINK B√ÄI [VARIABLE]{"entity": "cpplus_content", "value": "variable"} C++
    - video link b√†i [macro](cpplus_content) C++
    - Bot oi ban gui 1 video tutorial ve [class](cpplus_content) cua truong UIT cua ban di
    - [Mang hai chieu]{"entity": "cpplus_content", "value": "2d-array"} video link youtube
    - 1 LOAT SERIES BAI GIANG VE LY THUYET [HAM]{"entity": "cpplus_content", "value": "function"} TRONG C++
    - Ne bot ngu dua tao link video [library](cpplus_content) c++ coi may
    - videos tutorials ve [nhap mon lap trinh]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - B√ÄI GI·∫¢NG C·ª¶A UIT V·ªÄ [STRING]{"entity": "cpplus_content", "value": "string"} KHOA KHOA H·ªåC M√ÅY T√çNH
    - B√ÄI GI·∫¢NG V·ªÄ [TO√ÅN T·ª¨]{"entity": "cpplus_content", "value": "operator"} TRONG C++
    - B√ÄI GI·∫¢NG [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"} TRONG C++
    - Videos ve Nhap mon [C]{"entity": "cpplus_content", "value": "cplusplus"}++
    - Cho xin video v·ªÅ [while](cpplus_content)
    - C++ [comment](cpplus_content) tutorials
    - G·ª¨I T√îI VIDEO GI·ªöI THI·ªÜU S∆† B·ªò V·ªÄ [NH·∫¨P M√îN L·∫¨P TR√åNH]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - video v·ªÅ con tr·ªè v√† [m·∫£ng]{"entity": "cpplus_content", "value": "array"}
    - C++ LINK VIDEO [VECTOR]{"entity": "cpplus_content", "value": "vector"}
    - B√ÄI GI·∫¢NG HAY V·ªÄ [KI·ªÇU K√ç T·ª∞]{"entity": "cpplus_content", "value": "character"} UIT
    - BAI GIANG VE LY THUYET KIEU [CHUOI]{"entity": "cpplus_content", "value": "string"} UIT
    - e bot gui t link bai [comment](cpplus_content) di
    - Link utube b√†i gi·ªõi thi·ªáu v·ªÅ ki·ªÉu [unsigned](cpplus_content) trong C++
    - video b√†i gi·∫£ng v·ªÅ [ki·ªÉu d·ªØ li·ªáu]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - Link Youtube b√†i v·ªÅ [macro](cpplus_content) Tutorials C++
    - √ä BOT G·ª¨I T LINK B√ÄI [COMMENT]{"entity": "cpplus_content", "value": "comment"} ƒêI
    - Video bai giang cua khoa Khoa hoc may tinh CS UIT ve kieu du lieu [string](cpplus_content)
    - BAI GIANG VE [TOAN TU]{"entity": "cpplus_content", "value": "operator"} TRONG C++
    - Bai giang ly thuyet ve kieu [struct]{"entity": "cpplus_content", "value": "structure"} cua UIT
    - gui toi video gioi thieu so bo ve [Nhap mon lap trinh]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - videos tutorials v·ªÅ [nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - C√°c video gi·ªõi thi·ªáu v·ªÅ [nmlt]{"entity": "cpplus_content", "value": "introduction-to-programming"} ƒëi
    - BAI GIANG LY THUYET VE KIEU [STRUCT]{"entity": "cpplus_content", "value": "structure"} CUA UIT
    - C++ [COMMENT]{"entity": "cpplus_content", "value": "comment"} TUTORIALS
    - BOT NGU G·ª¨I T B√ÄI [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} ƒêI M
    - VIDEO V·ªÄ [COMMENT]{"entity": "cpplus_content", "value": "comment"}
    - C√ÅC VIDEO GI·ªöI THI·ªÜU V·ªÄ [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - B√ÄI TUTORIALS V·ªÄ H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} TRONG C++
    - B√†i gi·∫£ng hay v·ªÅ [ki·ªÉu k√≠ t·ª±]{"entity": "cpplus_content", "value": "character"} UIT
    - BAI GIANG CUA UIT VE [STRING]{"entity": "cpplus_content", "value": "string"} KHOA KHOA HOC MAY TINH
    - VIDEO V·ªÄ NH·∫¨P M√îN [C]{"entity": "cpplus_content", "value": "cplusplus"}++
    - Link b√†i v·ªÅ [namespace](cpplus_content)
    - Link Video bai giang ve [mang mot chieu]{"entity": "cpplus_content", "value": "array"} trong C
    - Series v·ªÅ b√†i [h√†m]{"entity": "cpplus_content", "value": "function"} trong c++
    - Link Youtube bai ve [macro](cpplus_content) Tutorials C++
    - B√ÄI GI·∫¢NG L√ù THUY·∫æT V·ªÄ KI·ªÇU [STRUCT]{"entity": "cpplus_content", "value": "structure"} C·ª¶A UIT
    - LINK YOUTUBE B√ÄI [VARIABLES]{"entity": "cpplus_content", "value": "variable"}
    - T√†i li·ªáu [nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - Link bai ve [Bien]{"entity": "cpplus_content", "value": "variable"} trong C++
    - Cac video gioi thieu ve [nmlt]{"entity": "cpplus_content", "value": "introduction-to-programming"} di
    - video ly thuyet ve [mang]{"entity": "cpplus_content", "value": "array"} trong C++
    - Video ve nhap mon [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - C++ link video [vector](cpplus_content)
    - VIDEO TUTORIALS [COMMENT]{"entity": "cpplus_content", "value": "comment"}
    - SERIES TUTORIAL ABOUT [FUNCTION]{"entity": "cpplus_content", "value": "function"} IN CPP
    - B√ÄI GI·∫¢NG V·ªÄ L√ù THUY·∫æT KI·ªÇU [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} UIT
    - BOT OI BAN GUI 1 VIDEO TUTORIAL VE [CLASS]{"entity": "cpplus_content", "value": "class"} CUA TRUONG UIT CUA BAN DI
    - LINK B√ÄI V·ªÄ [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"}
    - g·ª≠i t√¥i video gi·ªõi thi·ªáu s∆° b·ªô v·ªÅ [Nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - LINK [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"}
    - M·ªòT S·ªê VIDEO B√ÄI QUAY V·ªÄ [DATA TYPES]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - [M·∫¢NG HAI CHI·ªÄU]{"entity": "cpplus_content", "value": "2d-array"} VIDEO LINK YOUTUBE
    - M·ªôt s·ªë video b√†i quay v·ªÅ [data types]{"entity": "cpplus_content", "value": "data-type"} CS-UIT
    - Gui t 1 so video ve [comment](cpplus_content)
    - B√†i gi·∫£ng [M·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} trong C++
    - [POINTER]{"entity": "cpplus_content", "value": "pointer"} IN C++ TUTORIALS
    - g·ª≠i t link b√†i [namespace](cpplus_content) c√°i
    - Link bai ve [namespace](cpplus_content)
    - Link Video b√†i gi·∫£ng v·ªÅ [m·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} trong C
    - G·ª¨I T 1 LINK VIDEO UTUBE B√ÄI KI·ªÇU [UNSINGED]{"entity": "cpplus_content", "value": "unsigned"} ƒê√ä
    - video tutorials link [vector](cpplus_content) C++
    - Gui t 1 link video utube bai kieu [unsinged]{"entity": "cpplus_content", "value": "unsigned"} de
    - VIDEO BAI GIANG CUA KHOA KHOA HOC MAY TINH CS UIT VE KIEU DU LIEU [STRING]{"entity": "cpplus_content", "value": "string"}
    - Youtube link b√†i [variable](cpplus_content) C++
    - Bai giang [Mang mot chieu]{"entity": "cpplus_content", "value": "array"} trong C++
    - VIDEO B√ÄI GI·∫¢NG C·ª¶A KHOA KHOA H·ªåC M√ÅY T√çNH CS UIT V·ªÄ KI·ªÇU D·ªÆ LI·ªÜU [STRING]{"entity": "cpplus_content", "value": "string"}
    - Tutorials v·ªÅ kh√°i ni·ªám [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} trong C++
    - b√†i gi·∫£ng v·ªÅ l√Ω thuy·∫øt ki·ªÉu [chu·ªói]{"entity": "cpplus_content", "value": "string"} UIT
    - gui video ve tutorial [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - VIDEO TUTORIALS LINK [VECTOR]{"entity": "cpplus_content", "value": "vector"} C++
    - 1 LO·∫†T SERIES B√ÄI GI·∫¢NG V·ªÄ L√ù THUY·∫æT [H√ÄM]{"entity": "cpplus_content", "value": "function"} TRONG C++
    - Series tutorial about [function](cpplus_content) in CPP
    - N√à BOT NGU ƒê∆ØA TAO LINK VIDEO [LIBRARY]{"entity": "cpplus_content", "value": "library"} C++ COI M√ÄY
    - video ve [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - LINK B√ÄI V·ªÄ [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} TRONG C++
    - B√†i gi·∫£ng c·ªßa uit v·ªÅ [string](cpplus_content) khoa khoa h·ªçc m√°y t√≠nh
    - Bot ngu gui t bai [namespace](cpplus_content) di m
    - Youtube link bai [variable](cpplus_content) C++
    - Link utube bai gioi thieu ve kieu [unsigned](cpplus_content) trong C++
    - [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} TUTORIALS
    - V·∫≠y cho m√¨nh h·ªèi v·ªÅ video c·ªßa [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} ƒëi
    - BAI GIANG VE [MANG HAI CHIEU]{"entity": "cpplus_content", "value": "2d-array"} CUA TRUONG DAI HOC CONG NGHE THONG TIN
    - VIDEOS V·ªÄ NH·∫¨P M√îN [C]{"entity": "cpplus_content", "value": "cplusplus"}++
    - VIDEO L√ù THUY·∫æT V·ªÄ [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} TRONG C++
    - b√†i gi·∫£ng v·ªÅ [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} trong C++
    - VIDEO GI·ªöI THI·ªÜU M√îN [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"}
    - bai giang ve ly thuyet kieu [chuoi]{"entity": "cpplus_content", "value": "string"} UIT
    - B√†i [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} trong C++ video series
    - Bai giang cua uit ve [string](cpplus_content) khoa khoa hoc may tinh
    - 1 lo·∫°t series b√†i gi·∫£ng v·ªÅ l√Ω thuy·∫øt [H√†m]{"entity": "cpplus_content", "value": "function"} trong C++
- intent: flowchart_asking
  examples: |
    - M√¨nh mu·ªën h·ªèi c√¢u s·ªë [2](flowchart_quest_num)
    - B√†i t·∫≠p [3](flowchart_quest_num) ƒëi bot
    - M√åNH MU·ªêN H·ªéI V·ªÄ B√ÄI S·ªê [85](flowchart_quest_num) C·ª¶A TH·∫¶Y KHANG, B·∫†N GI√öP M√åNH V√ìI
    - gui t cau [111](flowchart_quest_num) phan luu do thuat toan cai nhe nao
    - g·ª≠i a m c√¢u [34](flowchart_quest_num) [56](flowchart_quest_num) l√†m ch∆°i coi n√®
    - L∆ØU ƒê·ªí B√ÄI [12](flowchart_quest_num)
    - Gui dap an cau [30](flowchart_quest_num) phan luu do
    - E, cau luu do thuat toan [80](flowchart_quest_num) lam sao vay bot, chi tui voiii
    - Gui dap an cau so [50](flowchart_quest_num) di a
    - ƒë√°p √°n c√¢u s·ªë [66](flowchart_quest_num) flowchart th·∫ßy khang
    - M√¨nh mu·ªën h·ªèi v·ªÅ b√†i s·ªë [85](flowchart_quest_num) c·ªßa th·∫ßy khang, b·∫°n gi√∫p m√¨nh v√≥i
    - C√¢u s·ªë [20](flowchart_quest_num)
    - cho ƒë√°p √°n c√¢u [40](flowchart_quest_num) [41](flowchart_quest_num) [42](flowchart_quest_num) ƒëi m
    - gui toi so [5](flowchart_quest_num), so [8](flowchart_quest_num), so [1](flowchart_quest_num)
    - c√¢u [40](flowchart_quest_num) c√¢u [80](flowchart_quest_num)
    - C√°ch gi·∫£i chi ti·∫øt b√†i [01](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n
    - Cau so [13](flowchart_quest_num)
    - B√ÄI T·∫¨P TH·∫¶Y KHANG C√ÇU S·ªê [43](flowchart_quest_num)
    - ƒê√ÅP √ÅN FLOWCHART B√ÄI S·ªê [49](flowchart_quest_num)
    - √ä bot, g·ª≠i ƒë√°p √°n c√¢u [100](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n
    - Cho m√¨nh ƒë√°p √°n b√†i s·ªë [4](flowchart_quest_num)
    - c√¢u s·ªë [21](flowchart_quest_num) l∆∞u ƒë·ªì ƒë√°p √°n l√† g√¨ v·∫≠y
    - C√¢u s·ªë [16](flowchart_quest_num) l∆∞u ƒë·ªì
    - t√¥i mu·ªën ƒë∆∞·ª£c tham kh·∫£o ƒë√°p √°n b√†i s·ªë [90](flowchart_quest_num) ph·∫ßn l∆∞u ƒë·ªì thu·∫≠t to√°n trong cu·ªën kƒ© thu·∫≠t l·∫≠p tr√¨nh th·∫ßy khang
    - C√¢u th·ª© [3](flowchart_quest_num) c√¢u th·ª© [4](flowchart_quest_num) c√¢u th·ª© [5](flowchart_quest_num) c√¢u th·ª© [6](flowchart_quest_num)
    - cau [40](flowchart_quest_num) cau [80](flowchart_quest_num)
    - Cau [2](flowchart_quest_num)
    - C√¢u s·ªë [13](flowchart_quest_num)
    - √ä, c√¢u l∆∞u ƒë·ªì thu·∫≠t to√°n [80](flowchart_quest_num) l√†m sao v·∫≠y bot, ch·ªâ tui v·ªõiii
    - h√£y g·ª≠i t√¥i l·ªùi gi·∫£i chi ti·∫øt c·ªßa c√¢u l∆∞u ƒë·ªì s·ªë [1](flowchart_quest_num) ƒëi ·∫°
    - Th·∫ßy khang s√°ch l·∫≠p tr√¨nh b√†i l∆∞u ƒë·ªì thu·∫≠t to√°n b√†i [10](flowchart_quest_num)
    - √ä BOT, G·ª¨I ƒê√ÅP √ÅN C√ÇU [100](flowchart_quest_num) L∆ØU ƒê·ªí THU·∫¨T TO√ÅN
    - loi giai cuc ki chi tiet va chat luong cua cau [09](flowchart_quest_num) de bot eii
    - B√†i [97](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n th·∫ßy khang
    - dap an cau so [7](flowchart_quest_num) la gi
    - B√†i t·∫≠p t·ª± luy·ªán s·ªë [5](flowchart_quest_num)
    - √™ m r·∫£nh k, g·ª≠i t c√¢u [29](flowchart_quest_num) ph·∫ßn l∆∞u ƒë·ªì c√°i
    - PLEASE, CHO T√îI XIN ƒê√ÅP √ÅN C√ÇU [33](flowchart_quest_num) L∆ØU ƒê·ªí THU·∫¨T TO√ÅN ƒê·ªÇ THAM KH·∫¢O V·ªöI ·∫†
    - gui a m cau [34](flowchart_quest_num) [56](flowchart_quest_num) lam choi coi ne
    - c√≥ th·ªÉ n√†o cho tui bi·∫øt ƒë√°p √°n c√¢u s·ªë [27](flowchart_quest_num) ph·∫ßn l∆∞u ƒë·ªì thu·∫≠t to√°n b√†i th·∫ßy khang ƒë∆∞·ª£c kh√¥ng
    - luoc do thuat toan cau so [76](flowchart_quest_num)
    - c·ª©u tao c√¢u [20](flowchart_quest_num) b√†i l∆∞u ƒë·ªì ƒëi bot
    - C√ÇU S·ªê [16](flowchart_quest_num) L∆ØU ƒê·ªí
    - CHO M√åNH H·ªéI ƒê√ÅP √ÅN C√ÇU S·ªê [27](flowchart_quest_num) ƒêI BOT ∆†I
    - N√® b·∫°n hi·ªÅn, s∆° ƒë·ªì thu·∫≠t to√°n b√†i s·ªë [57](flowchart_quest_num)
    - cau [1](flowchart_quest_num)
    - CHO EM ƒê√ÅP √ÅN B√ÄI [60](flowchart_quest_num) FLOWCHART TRONG S√ÅCH Kƒ® THU·∫¨T L·∫¨P TR√åNH TH·∫¶Y KHANG V·ªöI ·∫†
    - l·ªùi gi·∫£i c·ª±c k√¨ chi ti·∫øt v√† ch·∫•t l∆∞·ª£ng c·ªßa c√¢u [09](flowchart_quest_num) ƒë√™ bot eii
    - ƒë√°p √°n c√¢u s·ªë [7](flowchart_quest_num) l√† g√¨
    - Cau so [20](flowchart_quest_num)
    - c√°ch gi·∫£i b√†i [1](flowchart_quest_num)
    - Nghe r√µ tr·∫£ l·ªùi, cho t√¥i ƒë√°p √°n c√¢u [29](flowchart_quest_num) flowchart
    - Cho t xin dap an cau so [50](flowchart_quest_num) voi [56](flowchart_quest_num) di may
    - b√†i t·∫≠p [2](flowchart_quest_num) b√†i t·∫≠p [3](flowchart_quest_num)
    - Alo, c√¢u s·ªë [19](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n b·∫°n eii
    - cau [70](flowchart_quest_num) va [40](flowchart_quest_num) va [20](flowchart_quest_num)
    - Cho t xin ƒë√°p √°n c√¢u s·ªë [50](flowchart_quest_num) v·ªõi [56](flowchart_quest_num) ƒëi m√†y
    - √™ m√†y ∆°i, tao c·∫ßn m√†y gi√∫p tao c√¢u s·ªë [77](flowchart_quest_num) ph·∫ßn l∆∞u ƒë·ªì thu·∫≠t to√°n
    - L·ªúI GI·∫¢I CHI CMN TI·∫æT B√ÄI S·ªê [80](flowchart_quest_num) FLOWCHART TH·∫¶Y KHANG Kƒ® THU·∫¨T L·∫¨P TR√åNH
    - hay gui toi loi giai chi tiet cua cau luu do so [1](flowchart_quest_num) di a
    - ƒë√°p √°n b√†i [3](flowchart_quest_num)
    - √™ ku, l∆∞u ƒë·ªì thu·∫≠t to√°n c√¢u [23](flowchart_quest_num)
    - B√ÄI T·∫¨P S·ªê [18](flowchart_quest_num)
    - Cach giai bai so [2](flowchart_quest_num)
    - n√® bot ngu ∆°i, g·ª≠i t l·ªùi gi·∫£i c√¢u [61](flowchart_quest_num) lz qu√® n√†y c√°i m
    - dap an cau [25](flowchart_quest_num) sach thay khang la gi
    - CHO M√åNH B√ÄI [5](flowchart_quest_num) B√ÄI TH·∫¶Y KHANG L∆ØU ƒê·ªí THU·∫¨T TO√ÅN
    - cho m√¨nh m·ªôt c√°i answer v·ªÅ b√†i s·ªë [55](flowchart_quest_num) s√°ch th·∫ßy khang ƒëi
    - Cho b√†i t·∫≠p l∆∞u ƒë·ªì s·ªë [45](flowchart_quest_num)
    - C√ì TH·ªÇ N√ÄO CHO TUI BI·∫æT ƒê√ÅP √ÅN C√ÇU S·ªê [27](flowchart_quest_num) PH·∫¶N L∆ØU ƒê·ªí THU·∫¨T TO√ÅN B√ÄI TH·∫¶Y KHANG ƒê∆Ø·ª¢C KH√îNG
    - c√°ch gi·∫£i b√†i s·ªë [2](flowchart_quest_num)
    - Bai giai cau so [21](flowchart_quest_num) cau [33](flowchart_quest_num)
    - √ä M√ÄY ∆†I, TAO C·∫¶N M√ÄY GI√öP TAO C√ÇU S·ªê [77](flowchart_quest_num) PH·∫¶N L∆ØU ƒê·ªí THU·∫¨T TO√ÅN
    - so do thuat toan cau [82](flowchart_quest_num)
    - bai tap [2](flowchart_quest_num) bai tap [3](flowchart_quest_num)
    - c√¢u [70](flowchart_quest_num) v√† [40](flowchart_quest_num) v√† [20](flowchart_quest_num)
    - N√® n√® n√®, g·ª≠i tao ƒë√°p √°n c√¢u s·ªë [95](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n c√°i
    - b√†i t·∫≠p Flowchart s·ªë [9](flowchart_quest_num)
    - l·ªùi gi·∫£i tham kh·∫£o cho b√†i s·ªë [120](flowchart_quest_num)
    - L∆∞u ƒë·ªì b√†i [12](flowchart_quest_num)
    - cho minh xin cau [94](flowchart_quest_num) zoi [21](flowchart_quest_num) di
    - B√†i t·∫≠p s·ªë [1](flowchart_quest_num)
    - Cau so [10](flowchart_quest_num)
    - B√†i [1](flowchart_quest_num)
    - √™ t mu·ªën h·ªèi c√¢u [19](flowchart_quest_num), c√¢u [20](flowchart_quest_num) v√† c√¢u [21](flowchart_quest_num)
    - ne bot ngu oi, gui t loi giai cau [61](flowchart_quest_num) lz que nay cai m
    - g·ª≠i c√¢u [59](flowchart_quest_num) l∆∞·ª£c ƒë·ªì thu·∫≠t to√°n ƒë√™
    - √ä KU, L∆ØU ƒê·ªí THU·∫¨T TO√ÅN C√ÇU [23](flowchart_quest_num)
    - Cau so [19](flowchart_quest_num)
    - C√¢u [2](flowchart_quest_num)
    - Cau so [37](flowchart_quest_num)
    - b·∫Øn cho t√¥i c√°i c√¢u s·ªë [49](flowchart_quest_num) v·ªõi c√¢u s·ªë [50](flowchart_quest_num) ƒëi bot
    - Cau so [1](flowchart_quest_num)
    - C√¢u s·ªë [37](flowchart_quest_num)
    - N√à N√à N√à, G·ª¨I TAO ƒê√ÅP √ÅN C√ÇU S·ªê [95](flowchart_quest_num) L∆ØU ƒê·ªí THU·∫¨T TO√ÅN C√ÅI
    - gui cau [59](flowchart_quest_num) luoc do thuat toan de
    - bai tap [2](flowchart_quest_num)
    - N√® b·∫°n hi·ªÅn, ƒë√°p √°n c√¢u s·ªë [69](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n l√† g√¨ z·∫°
    - c√¢u s·ªë [7](flowchart_quest_num) ph·∫ßn l∆∞u ƒë·ªì thu·∫≠t to√°n s√°ch kƒ© thu·∫≠t l·∫≠p tr√¨nh
    - G·ª≠i ƒë√°p √°n c√¢u s·ªë [50](flowchart_quest_num) ƒëi ·∫°
    - tao mu·ªën h·ªèi m c√¢u s·ªë [10](flowchart_quest_num) v√† c√¢u s·ªë [30](flowchart_quest_num)
    - ƒë√°p √°n c√¢u [25](flowchart_quest_num) s√°ch th·∫ßy khang l√† g√¨
    - luu do thuat toan thay Khang bai [3](flowchart_quest_num)
    - B√ÄI L∆ØU ƒê·ªí C√ÇU [66](flowchart_quest_num)
    - L·ªùi gi·∫£i chi cmn ti·∫øt b√†i s·ªë [80](flowchart_quest_num) flowchart th·∫ßy khang kƒ© thu·∫≠t l·∫≠p tr√¨nh
    - Alo, cau so [19](flowchart_quest_num) luu do thuat toan ban eii
    - C√¢u [10](flowchart_quest_num) v√† c√¢u [20](flowchart_quest_num)
    - b√†i t·∫≠p [2](flowchart_quest_num)
    - Bot n√®, cho tui h·ªèi v·ªÅ c√¢u s·ªë [50](flowchart_quest_num) ƒë∆∞·ª£c hong :33
    - Cho m√¨nh h·ªèi ƒë√°p √°n c√¢u s·ªë [27](flowchart_quest_num) ƒëi bot ∆°i
    - c√¢u [21](flowchart_quest_num) v√† [95](flowchart_quest_num)
    - e bot oi gui t cau hoi [9](flowchart_quest_num) [23](flowchart_quest_num) di ne
    - C√¢u s·ªë [1](flowchart_quest_num)
    - G·ª≠i ƒë√°p √°n c√¢u [30](flowchart_quest_num) ph·∫ßn l∆∞u ƒë·ªì
    - Bai [1](flowchart_quest_num)
    - e t muon hoi cau [19](flowchart_quest_num), cau [20](flowchart_quest_num) va cau [21](flowchart_quest_num)
    - l∆∞·ª£c ƒë·ªì thu·∫≠t to√°n c√¢u s·ªë [25](flowchart_quest_num) s√°ch th·∫ßy khang
    - cuu tao cau [20](flowchart_quest_num) bai luu do di bot
    - b√†i l∆∞u ƒë·ªì c√¢u [66](flowchart_quest_num)
    - Minh muon hoi cau so [2](flowchart_quest_num)
    - Cau so [100](flowchart_quest_num)
    - l∆∞u ƒë·ªì thu·∫≠t to√°n th·∫ßy Khang b√†i [3](flowchart_quest_num)
    - g·ª≠i t√¥i s·ªë [5](flowchart_quest_num), s·ªë [8](flowchart_quest_num), s·ªë [1](flowchart_quest_num)
    - c√¢u [1](flowchart_quest_num)
    - ƒê√°p √°n flowchart b√†i s·ªë [49](flowchart_quest_num)
    - Cau so [200](flowchart_quest_num)
    - √™, cho m·ªôt chi·∫øc c√¢u h·ªèi v·ªÅ b√†i [9](flowchart_quest_num) l∆∞u ƒë·ªì thu·∫≠t to√°n c·ªßa th·∫ßy khang ƒëi
    - tao muon hoi m cau so [10](flowchart_quest_num) va cau so [30](flowchart_quest_num)
    - luoc do thuat toan cau so [25](flowchart_quest_num) sach thay khang
    - Bai tap [3](flowchart_quest_num) di bot
    - B√†i T·∫≠p S·ªë [18](flowchart_quest_num)
    - CHO M√åNH ƒê√ÅP √ÅN B√ÄI S·ªê [4](flowchart_quest_num)
    - T√îI MU·ªêN ƒê∆Ø·ª¢C THAM KH·∫¢O ƒê√ÅP √ÅN B√ÄI S·ªê [90](flowchart_quest_num) PH·∫¶N L∆ØU ƒê·ªí THU·∫¨T TO√ÅN TRONG CU·ªêN Kƒ® THU·∫¨T L·∫¨P TR√åNH TH·∫¶Y KHANG
- intent: deny
  examples: |
    - sai b·ªë n√≥ r·ªìi
    - DUME MAY NGU VAILON SAI CMNR
    - sai r bot di oi
    - DM BOT NGU M N√ìI TH·∫æ L√Ä TOANG R·ªíI
    - √ä sai r·ªìi nha, tr·∫£ l·ªùi v·∫≠y l√† k ph·∫£i ƒë√¢u nha
    - hong phai zi ui
    - kh√¥ng ƒë√∫ng
    - noi v la sai r do bro
    - TR·∫¢ L·ªúI V·∫¨Y L√Ä CH·∫æT ME R
    - E hinh nhu dau phai dau
    - Ku ngu th·∫ø sai r
    - M√¨nh h·ªèi m√† b·∫°n to√†n tr·∫£ l·ªùi kh√¥ng ƒë∆∞·ª£c
    - TR·∫¢ L·ªúI NGU TH·∫æ K BI·∫æT
    - Th√¥i h·ªèi nhi√™u ƒë·ªß bi·∫øt tr√¨nh mi r·ªìi
    - s·ªßa cc j ngu th·∫ø
    - S·ª¶A J M√Ä S·ª¶A NGU TKE
    - sai roi con a
    - sai b√©t
    - SAI R BOT ƒêƒ® ∆†I
    - Sai r√†nh r√†nh r·ªìi k√¨a m√†y
    - SAI CMM R·ªíI BOT NGU
    - tr·∫£ l·ªùi v·∫≠y l√† ch·∫øt me r
    - Tr·∫£ l·ªùi kh√¥ng ƒë√∫ng
    - a a sai nha sai nha
    - Sai cmnr
    - Dm bot ngu m noi the la toang roi
    - √ä sai cmnr
    - Wrong r·ªìi ku ∆°i
    - S·ª¶A NGU Z·ª™A Z·ª™A THOI
    - sao n√≥i sai qu√†i z·ªã
    - sai r·ªìi con ·∫°
    - SAI R·ªíI CON ƒêƒ® ∆†I
    - S·ª¶A CC J NGU TH·∫æ
    - TR·∫¢ L·ªúI C√ÅI CC J NGU V
    - trat lat
    - Do bot ngu sai roi leu leu
    - Kh√¥ng ƒë√∫ng
    - ƒê·ªí BOT NGU SAI R√íI L√äU L√äU
    - KU ∆†I KU SAI L·∫ÆM R·ªíI
    - sai be b√©
    - DM K PH·∫¢I TH·∫æ, M TR·∫¢ L·ªúI SAI M·∫§T R·ªíI BOT ·∫†
    - Dcmm sai b√©t b√®n b·∫πt r·ªìi con ·∫°
    - Tra loi khong dung
    - ƒê√©o :))\t
    - Dume may ngu vailon sai cmnr
    - ·ª¶a h√¨nh nh∆∞ sai r·ªìi ƒë√≥
    - SAI
    - Leu leu sai r nha
    - N√ìI V L√Ä SAI R ƒê√ì BRO
    - n√≥i cdj th·∫ø bot ngu
    - KU NGU TH·∫æ SAI R
    - WRONG
    - ƒê·ªì bot ngu sai r√≤i l√™u l√™u
    - Nooo may tra loi vay la sai roi
    - SAI B·ªê N√ì R·ªíI
    - tra loi vay la chet me r
    - HONG ƒê√öNG √ôI
    - Khong dung
    - s·ªßa j m√† s·ªßa ngu tke
    - N√ìI CDJ TH·∫æ BOT NGU
    - sai bo no roi
    - YOU WRONG
    - √ä sai r
    - Ku ∆°i ku sai l·∫Øm r·ªìi
    - uizzz sai bet doi con gioi a
    - SAI R·ªíI CON ·∫†
    - ƒê√©o ph·∫£i nh∆∞ v·∫≠y ƒë√¢u
    - khong dung
    - TR·∫¨T ƒê∆Ø·ªúNG RAY R·ªíI BOT NGU
    - E sai r
    - √ä SAI R
    - hong dung ui bot uiii
    - Hong
    - bot ngu vcc sai roi
    - sai bo no ra roi
    - M quay vao o sai roi
    - SAI CMNR
    - n√≥i j zay ta ∆°i
    - wrong
    - BOT NGU VCC SAI R·ªíI
    - L√äU L√äU L√äU ƒê·ªí CON BOT NGU SAI R·ªíI NHA CON
    - m tr·∫£ l·ªùi v l√† sai r
    - NOOO M√ÄY TR·∫¢ L·ªúI V·∫¨Y L√Ä SAI R·ªíI
    - sai be be
    - noi j zay ta oi
    - Ua hinh nhu sai roi do
    - TR·∫¨T CMNR
    - sai b·ªë n√≥ ra r·ªìi
    - Tr·∫£ l·ªùi c√°i cc j ngu v
    - HONG DUNG UI BOT UIII
    - leu leu leu do con bot ngu sai roi nha con
    - n√≥i v l√† sai r ƒë√≥ bro
    - sai r·ªìi
    - s·ªßa sai qu√° tr·ªùi z·ªã
    - Uizzz tra loi the ma cung tra loi dc
    - NH∆Ø V·∫¨Y L√Ä KO ƒê√öNG R·ªíI
    - Dm k phai the, m tra loi sai mat roi bot a
    - Uizzz tr·∫£ l·ªùi th·∫ø m√† c≈©ng tr·∫£ l·ªùi ƒëc
    - Ku oi ku sai lam roi
    - hong ph·∫£i z·ªã √πi
    - Sai r·ªìi con ƒëƒ© ∆°i
    - uizzz sai b√©t d·ªìi con gi·ªùi ·∫°
    - E sai roi nha, tra loi vay la k phai dau nha
    - sai r bot ƒëƒ© ∆°i
    - tr·∫≠t l·∫•t
    - L√™u l√™u sai r nha
    - Nooo m√†y tr·∫£ l·ªùi v·∫≠y l√† sai r·ªìi
    - TR·∫¨T L·∫§T
    - Tr·∫≠t ƒë∆∞·ªùng ray r·ªìi bot ngu
    - hong ƒë√∫ng √πi bot uiii
    - √ä SAI R·ªíI NHA, TR·∫¢ L·ªúI V·∫¨Y L√Ä K PH·∫¢I ƒê√ÇU NHA
    - ·ª¶A H√åNH NH∆Ø SAI R·ªíI ƒê√ì
    - sai vc ra r·ªìi con bot ngu
    - Dm bot ngu m n√≥i th·∫ø l√† toang r·ªìi
    - M quay v√†o √¥ sai r·ªìi
    - Dkm sai roi thang ngu
    - Tr·∫£ l·ªùi ngu th·∫ø k bi·∫øt
    - M TR·∫¢ L·ªúI V L√Ä SAI R
    - √ä SAI CMNR
    - Tr·∫≠t cmnr
    - BRO N√ìI TH·∫æ CH∆ØA ƒê√öNG ƒê√ÇU
    - SAI BE B√â
    - √° √† sai nha sai nha
    - s·ªßa th·∫ø m√† c≈©ng s·ªßa ƒë∆∞·ª£c
    - Sai t√® le
    - √Å h√¨nh nh∆∞ c√¢u n√†y ƒë√¢u ph·∫£i th·∫ø
    - KH√îNG ƒê√öNG
    - sua j ma sua ngu tke
    - sai vc ra roi con bot ngu
    - Sai te le
    - E sai cmnr
    - √Å √Ä SAI NHA SAI NHA
    - sua ngu zua zua thoi
    - SAI B·ªê N√ì RA R·ªíI
    - Trat duong ray roi bot ngu
    - hong dung ui
    - sao noi sai quai zi
    - Nhu vay la ko dung roi
    - noi cdj the bot ngu
    - hong ƒë√∫ng √πi
    - Deo phai the
    - sai roi
    - Dcmm sai bet ben bet roi con a
    - Sai ranh ranh roi kia may
    - SAI R·ªíI
    - Deo phai nhu vay dau
    - ƒê√âO PH·∫¢I TH·∫æ
    - √ä h√¨nh nh∆∞ ƒë√¢u ph·∫£i ƒë√¢u
    - SAI R√ÄNH R√ÄNH R·ªíI K√åA M√ÄY
    - sai cmm r·ªìi bot ngu
    - HONG PH·∫¢I Z·ªä √ôI
    - sai bet
    - b·∫°n kh√¥ng hi·ªÉu √†
    - s·ªßa ngu z·ª´a z·ª´a thoi
    - Dkm sai r·ªìi th·∫±ng ngu
    - you wrong
    - l√™u l√™u l√™u ƒë·ªì con bot ngu sai r·ªìi nha con
    - SAI B√âT
    - TR·∫¢ L·ªúI KH√îNG ƒê√öNG
    - L√äU L√äU SAI R NHA
- intent: want_to_watch_cpp_tutorial
  examples: |
    - E C√ì TH·ªÇ XIN LINK VIDEO B√ÄI D·∫†Y C++ C·ª¶A TR∆Ø·ªúNG M√åNH DC K A BOT
    - LAP TRINH C++ VIDEO BAI DAY
    - Cho link bai giang lap trinh c++ uit
    - C++ programming tutorials
    - e muon coi 1 vai link bai giang c++ cua truong minh a bot uii
    - video h∆∞·ªõng d·∫´n kƒ© thu·∫≠t l·∫≠p tr√¨nh C++
    - C++ TUTORIALS
    - m√¨nh mu·ªën xem qua m·ªôt v√†i c√°c c√°i video b√†i gi·∫£ng v·ªÅ C++ c·ªßa tr∆∞·ªùng UIT
    - CHO EM XEM 1 S·ªê VIDEO D·∫†Y V·ªÄ NMLT B√äN UIT V·ªöI ·∫†
    - E MU·ªêN COI 1 V√ÄI LINK B√ÄI GI·∫¢NG C++ C·ª¶A TR∆Ø·ªúNG M√åNH A BOT UII
    - BOT N√Ä CHO TUI COI SERIES GI·∫¢NG D·∫†Y C++ ƒêI
    - C++ VIDEO BAI GIANG
    - BOT CHO COI NMLT ƒêI
    - bot uii cho tui link videos nmlt z·ªõi
    - coi cac video ve c++
    - C++ tutorials
    - coi vid bai c++
    - cho iem coi so qua 1 so video bai giang nmlt thuong hieu uit zoi akk
    - T MU·ªêN TH·ªä PH·∫†M 1 S·ªê VIDEO B√ÄI GI·∫¢NG C·ª¶A TR∆Ø·ªúNG M
    - √ä DKM 1 VIDEO B√ÄI GI·∫¢NG NMLT UIT
    - link d·∫°y NMLT
    - Tao mu·ªën xem m·ªôt v√†i video tutorial v·ªÅ NMLT
    - t muon dc coi video bai giang C++ cua cac thay co UIT
    - LY THUYET C++ TUTORIALS
    - video c·ªßa tu·∫ßn 10
    - VIDEO B√ÄI GI·∫¢NG C++
    - √ä BOT NGU M·ªû T B√ÄI GI·∫¢NG NH·∫¨P M√îN L·∫¨P TR√åNH UIT ƒêI
    - CHO TOII XEM VIDEO B√ÄI GI·∫¢NG NMLT
    - TH·ªä PH·∫†M QUA VIDEO H∆Ø·ªöNG D·∫™N Kƒ® THU·∫¨T CODE C++
    - video c·ªßa tu·∫ßn th·ª© 5
    - tao c√≥ th·ªÉ ƒë∆∞·ª£c ph√©p xem qua 1 s·ªë b√†i gi·∫£ng v·ªÅ L·∫≠p Tr√¨nh C++ c·ªßa tr∆∞·ªùng m√¨nh k chatbot
    - VIDEO C++
    - Coi cac bai tutorials C++ cua Khoa Khoa Hoc May Tinh UIT
    - √ä dkm 1 video b√†i gi·∫£ng NMLT UIT
    - Bot oi cho tui coi video bai giang nmlt
    - Xem video b√†i gi·∫£ng Nh·∫≠p m√¥n l·∫≠p tr√¨nh
    - video c·ªßa tu·∫ßn 5
    - t muon dc xem C++ UIT
    - bot cho coi nmlt di
    - T√îI MU·ªêN ƒê∆Ø·ª¢C COI QUA M·ªòT S·ªê SERIES D·∫†Y NH·∫¨P M√îN L·∫¨P TR√åNH C·ª¶A UIT
    - T MU·ªêN ƒêC COI VIDEO B√ÄI GI·∫¢NG C++ C·ª¶A C√ÅC TH·∫¶Y C√î UIT
    - Coi mot so cac cai video tutorials CPP cua truong dai hoc cong nghe thong tin
    - LINK VIDEO B√ÄI GI·∫¢NG UIT
    - link video introduction to programming
    - INTRODUCTION TO PROGRAMMING VIDEO TUTORIALS
    - C++ VIDEO B√ÄI GI·∫¢NG
    - CH·ªä MU·ªêN ƒê∆Ø·ª¢C COI QUA TH·ª¨ VIDEO B√ÄI GI·∫¢NG C·ª¶A M·∫§Y C∆ØNG XEM SAO
    - √™ g·ª≠i link video b√†i gi·∫£ng C++ ƒëi pa
    - √ä cho xin video v·ªÅ c++ ƒëi
    - CHO TUI COI 1 SO VIDEO BAI GIANG VE C++ VOI BA
    - CHO XIN LINK VIDEO B√ÄI GI·∫¢NG NMLT
    - T√îI R·∫§T MU·ªêN ƒê∆Ø·ª¢C COI QUA C√ÅC VIDEO B√ÄI GI·∫¢NG V·ªÄ L·∫¨P TR√åNH C++ T·∫†I UIT
    - COI C√ÅC B√ÄI GI·∫¢NG C++ C·ª¶A KHOA CS UIT
    - TAO M√öN COI VIDEO C++
    - T M√öN COI VIDEO D·∫†Y C++
    - CHO T√îI XEM VIDEO B√ÄI GI·∫¢NG NMLT
    - √™ √™ dume g·ª≠i t link video C++
    - E muon vai link video bai day C++ cua truong minh anh bot a
    - √™ dm link video b√†i gi·∫£ng c++
    - T XIN PH√âP ƒê∆Ø·ª¢C TH·ªä PH·∫†M M·ªòT S·ªê SERIES B√ÄI GI·∫¢NG V·ªÄ NH·∫¨P M√îN L·∫¨P TR√åNH TR∆Ø·ªúNG M√ÄY
    - Cho toi coi 1 so cac video bai giang C++ cua truong CNTT
    - √ä BOT CHO TUI XIN LINK NMLT
    - bot ∆°i tui muon coi video b√†i gi·∫£ng
    - √ä bot ngu m·ªü t b√†i gi·∫£ng Nh·∫≠p M√¥n L·∫≠p Tr√¨nh UIT ƒëi
    - link tutorials c++ uit
    - coi cac cai videos ve C++ cua UIT
    - tao mun coi video C++
    - th·ªã ph·∫°m qua video h∆∞·ªõng d·∫´n kƒ© thu·∫≠t code c++
    - t mu·ªën dc xem C++ UIT
    - XEM VIDEO B√ÄI GI·∫¢NG NH·∫¨P M√îN L·∫¨P TR√åNH
    - CHO T√îI COI 1 S·ªê C√ÅC VIDEO B√ÄI GI·∫¢NG C++ C·ª¶A TR∆Ø·ªúNG CNTT
    - g·ª≠i cho b·ªë m m·∫•y c√°i link d·∫°y l√Ω thuy·∫øt c++ c√°i coi bot ngu
    - √ä DM LINK VIDEO B√ÄI GI·∫¢NG C++
    - E MU·ªêN V√ÄI LINK VIDEO B√ÄI D·∫†Y C++ C·ª¶A TR∆Ø·ªúNG M√åNH ANH BOT ·∫†
    - Toi rat muon duoc coi qua cac video bai giang ve lap trinh C++ tai UIT
    - COI C√ÅC VIDEO V·ªÄ C++
    - LINK D·∫†Y NMLT
    - M√åNH MU·ªêN DC COI QUA 1 S·ªê VIDEO B√ÄI GI·∫¢NG C·ª¶A UIT V·ªÄ L·∫¨P TR√åNH C++
    - video C++
    - LINK VIDEO INTRODUCTION TO PROGRAMMING
    - t xin ph√©p ƒë∆∞·ª£c th·ªã ph·∫°m m·ªôt s·ªë series b√†i gi·∫£ng v·ªÅ nh·∫≠p m√¥n l·∫≠p tr√¨nh tr∆∞·ªùng m√†y
    - T√¥i c√≥ th·ªÉ xem qua m·ªôt s·ªë series b√†i gi·∫£ng v·ªÅ L·∫≠p tr√¨nh c++ c·ªßa tr∆∞·ªùng ƒë·∫°i h·ªçc cntt n√†y dc ch·ª©?
    - BOT UII CHO TUI LINK VIDEOS NMLT Z·ªöI
    - cho m√¨nh xem 1 s·ªë video nmlt c·ªßa khoa khmt v·ªõi bot
    - E GUI LINK VIDEO BAI GIANG C++ DI PA
    - cho em xem 1 s·ªë video d·∫°y v·ªÅ nmlt b√™n uit v·ªõi ·∫°
    - bot cho coi nmlt ƒëi
    - Introduction to programming video tutorials
    - COI VIDEO B√ÄI GI·∫¢NG
    - Chi muon duoc coi qua thu video bai giang cua may cung xem sao
    - Video b√†i gi·∫£ng v·ªÅ l√Ω thuy·∫øt C++
    - NH·∫¨P M√îN L·∫¨P TR√åNH VIDEO B√ÄI GI·∫¢NG
    - Cho toi xin link video cac bai day NMLT
    - T√¥i mu·ªën ƒë∆∞·ª£c coi qua m·ªôt s·ªë series d·∫°y nh·∫≠p m√¥n l·∫≠p tr√¨nh c·ªßa uit
    - Cho minh xem video bai giang ve NMLT UIT
    - LINK TUTORIALS C++ UIT
    - cho minh xem 1 so video nmlt cua khoa khmt voi bot
    - m√¨nh mu·ªën dc coi qua 1 s·ªë video b√†i gi·∫£ng c·ªßa UIT v·ªÅ l·∫≠p tr√¨nh C++
    - VIDEO B√ÄI GI·∫¢NG V·ªÄ L√ù THUY·∫æT C++
    - Nh·∫≠p m√¥n l·∫≠p tr√¨nh video b√†i gi·∫£ng
    - cho tui coi 1 s·ªë video b√†i gi·∫£ng v·ªÅ c++ v·ªõi ba
    - Cho t√¥i xem video b√†i gi·∫£ng NMLT
    - Ch·ªã mu·ªën ƒë∆∞·ª£c coi qua th·ª≠ video b√†i gi·∫£ng c·ªßa m·∫•y c∆∞ng xem sao
    - videos nmlt
    - VIDEO H∆Ø·ªöNG D·∫™N Kƒ® THU·∫¨T L·∫¨P TR√åNH C++
    - tao m√∫n coi video C++
    - THI PHAM QUA VIDEO HUONG DAN KI THUAT CODE C++
    - coi video b√†i gi·∫£ng
    - CHO B·ªê M COI 1 S·ªê LINK VIDEO B√ÄI GI·∫¢NG D·∫†Y NMLT C·ª¶A M COI BOT NGU
    - coi video bai giang
    - Cho link b√†i gi·∫£ng l·∫≠p tr√¨nh c++ uit
    - CHO IEM COI S∆† QUA 1 S·ªê VIDEO B√ÄI GI·∫¢NG NMLT TH∆Ø∆†NG HI·ªÜU UIT Z·ªöI ·∫†KK
    - coi c√°c c√°i videos v·ªÅ C++ c·ªßa UIT
    - cho em xem 1 so video day ve nmlt ben uit voi a
    - √ä G·ª¨I LINK VIDEO B√ÄI GI·∫¢NG C++ ƒêI PA
    - video tu·∫ßn 1
    - G·ª¨I TUI M·∫§Y VIDEO B√ÄI GI·∫¢NG UIT IKKK
    - G·ª¨I CHO B·ªê M M·∫§Y C√ÅI LINK D·∫†Y L√ù THUY·∫æT C++ C√ÅI COI BOT NGU
    - t xin phep duoc thi pham mot so series bai giang ve nhap mon lap trinh truong may
    - COI C√ÅC C√ÅI VIDEOS V·ªÄ C++ C·ª¶A UIT
    - cho t coi m·∫•y c√°i video h∆∞·ªõng d·∫´n l√Ω thuy·∫øt C++ ƒëi
    - C++ video b√†i gi·∫£ng
    - tao co the duoc phep xem qua 1 so bai giang ve Lap Trinh C++ cua truong minh k chatbot
    - BOT ∆†I CHO TUI COI VIDEO B√ÄI GI·∫¢NG NMLT
    - T mun coi video day C++
    - t muon thi pham 1 so video bai giang cua truong m
    - VIDEO HUONG DAN KI THUAT LAP TRINH C++
    - XEM VIDEO BAI GIANG NHAP MON LAP TRINH
    - t mu·ªën th·ªã ph·∫°m 1 s·ªë video b√†i gi·∫£ng c·ªßa tr∆∞·ªùng m
    - Link Tutorials C++ CS UIT
    - √™ bot cho tui xin link NMLT
    - CHO TOII XEM VIDEO BAI GIANG NMLT
    - Coi cac bai giang C++ cua khoa CS UIT
    - t mu·ªën ƒëc coi video b√†i gi·∫£ng C++ c·ªßa c√°c th·∫ßy c√¥ UIT
    - T MU·ªêN DC XEM C++ UIT
    - bot oi tui muon coi video bai giang
    - CHO M√åNH XEM 1 S·ªê VIDEO NMLT C·ª¶A KHOA KHMT V·ªöI BOT
    - coi video h∆∞·ªõng d·∫´n c++
    - t mu·ªën xem 1 s·ªë video h∆∞·ªõng d·∫´n h·ªçc nmlt
    - L√Ω thuy·∫øt C++ tutorials
    - coi vid b√†i c++
    - VIDEO NMLT
    - Link video C++
    - E c√≥ th·ªÉ xin link video b√†i d·∫°y c++ c·ªßa tr∆∞·ªùng m√¨nh dc k a bot
    - cho bo m coi 1 so link video bai giang day nmlt cua m coi bot ngu
    - cho xin link video bai giang nmlt
    - CHO LINK B√ÄI GI·∫¢NG L·∫¨P TR√åNH C++ UIT
    - T MU·ªêN XEM 1 S·ªê VIDEO H∆Ø·ªöNG D·∫™N H·ªåC NMLT
    - T m√∫n coi video d·∫°y C++
    - cho xin link video b√†i gi·∫£ng nmlt
    - link video b√†i gi·∫£ng UIT
    - Cho toi xem video bai giang NMLT
    - Video b√†i gi·∫£ng C++
    - cho b·ªë m coi 1 s·ªë link video b√†i gi·∫£ng d·∫°y nmlt c·ªßa m coi bot ngu
    - T√¥i r·∫•t mu·ªën ƒë∆∞·ª£c coi qua c√°c video b√†i gi·∫£ng v·ªÅ l·∫≠p tr√¨nh C++ t·∫°i UIT
    - E co the xin link video bai day c++ cua truong minh dc k a bot
    - LINK TUTORIALS C++ CS UIT
    - L·∫¨P TR√åNH C++ VIDEO B√ÄI D·∫†Y
    - CHO T COI M·∫§Y C√ÅI VIDEO H∆Ø·ªöNG D·∫™N L√ù THUY·∫æT C++ ƒêI
    - coi c√°c video v·ªÅ c++
    - Video NMLT
    - CHO T COI MAY CAI VIDEO HUONG DAN LY THUYET C++ DI
    - Tao muon xem mot vai video tutorial ve NMLT
    - minh muon dc coi qua 1 so video bai giang cua UIT ve lap trinh C++
- intent: out_of_scope
  examples: |
    - Doi net ve Do Tien
    - -_-
    - ai l√† con ƒëƒ© c·ªßa anh n√†o
    - cout << "hello" ;
    - Biet toi la ai khong ?
    - M√¨nh c∆∞·ªùi haha
    - Bot c√≥ bi·∫øt d·∫°ng ƒë·ªÅ thi h·ªçc k√¨ kh√¥ng?
    - bi·∫øt ki·∫øm ti·ªÅn k
    - ƒê·∫°o H√†m
    - hihi
    - ƒÉn kem th·ªß ƒë·ª©c ·ªü qu√°n n√†o th√¨ ngon
    - c·ªông l√† g√¨
    - thay Do Tien
    - qwerty
    - l√†m sao ƒë·ªÉ th√†nh k·ªπ s∆∞ AI
    - c√°ch h·∫øt n·ª£ m√¥n
    - Xuan DIeu
    - Machine learning l√† g√¨
    - con c·∫∑c l√† g√¨
    - ƒê·ªÅ b√†i ƒë√≥
    - ianh iu iem
    - c√°ch ƒë·ªÉ th√†nh tr√πm l·∫≠p tr√¨nh
    - d·ªãch t·ª´ c++ sang python ƒë∆∞·ª£c kh√¥ng
    - tr·ª©ng c√≥ tr∆∞·ªõc hay g√† c√≥ tr∆∞·ªõc
    - /hi
    - hmmm is this a bug ??
    - nay c√≥ h·ªçp k
    - Iwiwiwiwoejieue
    - ƒë·ªÅ b√†i
    - python
    - t·ªëc chi·∫øn ƒë√™
    - ƒë√°nh li√™n qu√¢n ƒë√™
    - test
    - b·∫°n c√≥ th·ªÉ h·ªó tr·ª£ d√πng VScode ƒë∆∞·ª£c kkh√¥ng
    - /c√¢u 3
    - Haha.
    - l√†m sao in hello world tr√™n c++
    - what dose the fox say?
    - thu·∫≠t to√°n s·∫Øp x·∫øp
    - Sao c·ª© c√†ng code c√†ng bug v·∫≠y bro
    - c√°ch l√°i xe m√°y
    - Video h∆∞·ªõng d·∫´n python
    - Doi net ve nha tho Xuan Dieu.
    - fix bug gi√∫p tao v·ªõi
    - X += 1;
    - Th·∫ø bi·∫øt t√™n m√¨nh kh√¥ng?
    - B·∫°n c√≥ bi·∫øt t√¨m l·ªói trong code kh√¥ng ?
    - show tr√¨nh ƒëi
    - --version
    - l·ªói is not declared
    - h√°t cho t nghe ƒëi
    - L√†m sao ƒë·ªÉ l·∫•y ra d√£y tƒÉng d·∫ßn trong m·∫£ng
    - thay Do Tien thuong noi gi khi tre deadlines
    - B·∫°n c√≥ th·ªÉ debug gi√∫p t√¥i kh√¥ng?
    - l√†m b·∫°n g√°i a nha
    - thu·∫≠t to√°n ph√¢n lo·∫°i
    - ai la con di cua anh nao
    - ch·ªâ t c√°ch qua m√¥n
    - em mu·ªën l√°i ch·ªã
    - Noi gi do yeu thuong toi di !
    - Ch·ªß c·ªßa b·∫°n c√≥ bi·∫øt g√¨ v·ªÅ c√¢u chuy·ªán gi·ªØa hai ch√∫ng ta kh√¥ng?
    - em ƒÉn c∆°m ch∆∞a?
    - \quit
    - 1234567890
    - M√¨nh c·∫ßn ng∆∞·ªùi y√™u
    - ch·ªâ t machine learning ƒëi
    - 1 + 1 = 2 ƒë√∫ng kh√¥ng?
    - V√¨ sao tr·ªùi m∆∞a!
    - l√†m sao ƒë·ªÉ h·∫øt n·ª£ m√¥n
    - .
    - tr·ªÖ deadline l√† g√¨ ?
    - asfasfsdbfdbheqwer
    - deep learning l√† c√°i g√¨
    - D·∫°y m√¨nh c√°ch l·∫≠p tr√¨nh AI
    - Con troÃâ trong C++ chieÃÇÃÅm bao nhieÃÇu boÃ£ÃÇ nhoÃõÃÅ?
    - em iu anh
    - A
    - c√°ch qua m√¥n
    - Angular
    - k·ªÉ c√¢u chuy·ªán vui ƒëi
    - C·∫•u tr√∫c d·ªØ li·ªáu gi·∫£i thu·∫≠t
    - ƒë√°nh nhau ko
    - l√†m sao ƒë·ªÉ l√†m tr√πm tr∆∞·ªùng
    - c√¥ng ngh·ªá th√¥ng tin l√† g√¨
    - mikami l√† ai
    - to√°n r·ªùi r·∫°c l√† g√¨
    - ƒÇn t·∫øt ch∆∞a ·∫°
    - printf_s
    - donald trump
    - /restart
    - cho tui h·ªèi c√°c ki·∫øm ng∆∞·ªùi y√™u
    - machine learning c√°i g√¨ v·∫≠y
    - th·ªùi ti·∫øt h√¥m nay t·∫°i th·ªß ƒë·ª©c
    - Haha
    - Kƒ© thu·∫≠t c·∫Øm c·ªù
    - t ƒë√°nh m√†y b√¢y gi·ªù
    - l√†m sao ƒë·ªÉ l√†m tr√πm l·∫≠p tr√¨nh
    - ch·ªü tui ƒëi ch∆°i v·ªõi nha
    - 1 + 1
    - l√†m sao ƒë·ªÉ qua m√¥n
    - d·∫°y t√¥i deep learning
    - m√¨nh mu·ªën bi·∫øt v·ªÅ python
    - b·ªë ∆°i m√¨nh ƒëi ƒë√¢u th·∫ø
    - H√¥m nay l√† ng√†y m·∫•y
    - 16 typh on the mic
    - th·ªùi s·ª± h√¥m nay
    - ng√†y mai c√≥ ti·∫øt k ta
    - bla bla
    - B·∫°n gi·∫£i b√†i gi√∫p m√¨nh ƒë∆∞·ª£c kh√¥ng?
    - Jejeksskajs
    - l√†m sao ƒë·ªÉ ki·∫øm ng∆∞·ªùi iu ·∫°
    - Th·∫ø n√†o l√† point er
    - M·∫£nh
    - bao gi·ªù th√¨ c√≥ b·ªì
    - Netflix l√† g√¨
    - iu nhau k
    - ram l√† c√°i g√¨ ?
    - 69
    - to√°n r·ªùi r·∫°c
    - l√†m sao ƒë·ªÉ th√†nh l·∫≠p tr√¨nh vi√™n gi·ªèi
    - √îng ch·∫∑n tui ƒëi
    - Frf
    - 3
    - Con tr·ªè trong C++ chi·∫øm bao nhi√™u b·ªô nh·ªõ v√† k√≠ch th∆∞·ªõc c·ªßa ch√∫ng c√≥ b·∫±ng nhau kh√¥ng?
    - .cpp l√† g√¨
    - h·∫£i quay xe
    - H√†m kh√°c th·ªß t·ª•c ch·ªó n√†o?
    - ngo√†i c++ ra b·∫°n c√≤n bi·∫øt v·ªÅ ng√¥n ng·ªØ l·∫≠p tr√¨nh n√†o n·ªØa kh√¥ng ?
    - c·∫•u tr√∫c r·ªùi r·∫°c l√† g√¨
    - Noi gi do yeu thuong tui di.
    - 1 c·ªông 1 b·∫±ng?
    - R·ªõt m√¥n r·ªìi l√†m sao b√¢y gi·ªù
    - haha
    - Jsjskskskajsbs
    - C√°ch l·∫≠p tr√¨nh AI
    - RAM l√† g√¨?
    - int main()
    - Postflix l√† g√¨
    - Uit
    - √ù m√¨nh l√† m√¨nh c√≥ ƒë·∫πp trai hong?
    - m√° m√†y t√™n l√† ng·ªçc √¥ng gi√† m√†y tu·∫•n anh
    - l√†m sao ƒë·ªÉ master l·∫≠p tr√¨nh v·∫≠y bro
    - H√†m conio l√†m g√¨
    - bi·∫øt h√°t auto tune k
    - H·ªçc g√¨ ƒë·ªÉ ƒë·∫°t ƒëi·ªÉm cao nh·∫≠p m√¥n l·∫≠p tr√¨nh?
    - H·ªçc c++ xong, ra l√†m g√¨?
    - /q
    - uit
    - th√≠ch coi phim k
    - b√≠ m·∫≠t c·ªßa v≈© tr·ª• l√† g√¨
    - K·∫ø th·ª´a trong C++
    - NH·∫≠p     M√îN lajapp  tr√¨nh laf g√¨
    - n√≥ ch·∫°y nh∆∞ th·∫ø no√†
    - what the fox say
    - Cho m√¨nh xin t√†i li·ªáu c++?
    - babe
    - Dhsjsjsjska
    - h√¥m nay ng√†y m·∫•y?
    - h√°t cho tui nghe ƒëi
    - how to print hello world
    - 1+1=?
    - nh∆∞ b·∫°n ƒë√£ th·∫•y t√¥i v·ªõi b·∫°n ƒë·ªÅu l√† d√¢n ch∆°i
    - d·∫°y t l√†m AI ƒëi
    - th·ªùi ti·∫øt h√¥m nay l√† g√¨
    - Abc
    - thi b·∫±ng l√°i xe ·ªü ƒë√¢u
    - Th·ª±c l√† g√¨?
    - ƒÉn kem ko
    - ng√†y ƒÉn ƒë∆∞·ª£c m·∫•y ch√©n c∆°m
- intent: who_are_you
  examples: |
    - C·∫¨U L√Ä AI
    - m la cai cc gi
    - MAY LA AI
    - ƒê·∫°i nh√¢n t√™n g√¨
    - M L√Ä TH N√ÄO
    - ch·ªã l√† ai
    - b·∫°n c√≥ t√™n kh√¥ng ?
    - B·∫°n c√≥ ph·∫£i l√† ng∆∞·ªùi kh√¥ng ?
    - B·∫°n t√™n l√† g√¨ nh·ªâ?
    - Nickname c·ªßa m l√† g√¨
    - ƒê·∫†I NH√ÇN T√äN G√å
    - M L√Ä CC G√å V
    - B·∫°n ƒë∆∞·ª£c l·∫≠p tr√¨nh s·∫≥n h·∫øt ph·∫£i kh√¥ng?
    - Ban ten la gi nhi?
    - MAY LA CAI QUAI GI VAY
    - M√ÄY R·ªêT CU·ªòC L√Ä G√å
    - May la cai quai gi vay
    - L√ÉNG KH√ÅCH T√äN G√å
    - N√ìI B·ªê M NGHE T√äN C·ª¶A M XEM N√ÄO
    - t√™n c·ªßa m√†y l√† ?
    - M√†y t√™n g√¨ nh·ªâ?
    - may rot cuoc la gi
    - √îNG L√Ä AI
    - iem l√† aii
    - BAN LA THE LOAI GI V
    - TH·∫¶Y L√Ä AI
    - M L√Ä TML N√ÄO
    - M√ÄY L√Ä TH·ª∞C TH·ªÇ G√å TH·∫æ
    - ·ª¶A M L√Ä CC G√å TH·∫æ
    - cho minh hoi ban bot day ten la gi nhi
    - ban ten gi the
    - ccc m la cai cc gi
    - B·∫°n t√™n g√¨
    - NH√ÇN TI·ªÜN ƒê√ÇY CHO M√åNH H·ªéI B·∫†N CHATBOT ƒê√ÇY L√Ä G√å DC K
    - may la con nao
    - YOU T√äN G√å
    - M L√Ä CC G√å
    - M√ÄY R·ªêT CU·ªòC L√Ä C√ÅI QU√ÅI G√å V·∫¨Y
    - noi bo m nghe ten cua m xem nao
    - C√¥ l√† ai
    - M√ÄY L√Ä CON N√ÄO
    - ban chat cua m la gi
    - qu√Ω nh√¢n t√™n g√¨
    - cho m√¨nh h·ªèi b·∫°n t√™n l√† g√¨ th·∫ø
    - B·∫°n l√† ai z·ªãi
    - AI L√Ä B·∫†N
    - Mi ten gi nhi?
    - ti·ªÉu mu·ªôi t√™n g√¨
    - QUY NHAN TEN GI
    - BAN TEN GI
    - M LA CAI CC GI
    - b·∫£n ch·∫•t c·ªßa m l√† g√¨
    - ten mi la?
    - b·∫°n l√† ai
    - M√ÄY L√Ä C√ÅI GI·ªêNG LO√ÄI G√å V·∫¨Y
    - Ban la the loai gi v
    - CHATBOT T√äN G√å V·∫¨Y NH·ªà
    - s∆∞ ƒë·ªá t√™n g√¨
    - Cc m la ai
    - Ten gi
    - M LA CC GI V
    - YO WTF M LA AI THE
    - may la cai lz que gi zay
    - Mi t√™n g√¨ nh·ªâ?
    - M√ÄY L√Ä TH·∫∞NG N√ÄO
    - May ten la gi
    - AI L√Ä M√ÄY
    - M√ÄY R·ªêT CU·ªòC L√Ä G√å V·∫¨Y
    - Cho h·ªèi v·ªã huynh ƒë√†i ƒë√¢y t√™n g√¨ nh·ªâ
    - ANH L√Ä AI
    - m la cc gi v
    - Bot t√™n g√¨
    - Kimi no na wa ?
    - m√¨nh c√≥ th·ªÉ bi·∫øt t√™n c·ªßa b·∫°n Chatbot ƒë√¢y ƒë∆∞·ª£c k nh·ªâ
    - May ten gi nhi?
    - Cho t√¥i ƒë∆∞·ª£c h·ªèi b·∫°n l√† g√¨
    - B·∫†N CHATBOT ƒê√ÇY L√Ä C√ÅI G√å ƒê√ÇY NH·ªà
    - BAN LA AI
    - may la thuc the gi the
    - ban la ai
    - b·∫°n m·∫•y tu·ªïi
    - m√†y r·ªët cu·ªôc l√† c√°i qu√°i g√¨ v·∫≠y
    - MAY TEN GI
    - Who are you
    - B·∫°n c√≥ tr√≤ ch∆°i g√¨ vui kh√¥ng?
    - m l√† th lz n√†o
    - ten cua may la ?
    - noi tao nghe ten may
    - M la th lz nao
    - ten may la gi
    - may ten la gi nhi
    - N√ìI TAO NGHE T√äN M√ÄY
    - M L√Ä TH LZ N√ÄO
    - M√ÄY L√Ä AI
    - BAN TEN LA GI NHI
    - NICKNAME C·ª¶A M L√Ä G√å
    - B·∫†N L√Ä AI Z·ªäI
    - B·ªë m h·ªèi m t√™n g√¨
    - t√™n mi l√†?
    - Ban ten gi
    - Nh·ªØng c√¢u n√†o b·∫°n bi·∫øt ƒë·ªÉ m√¨nh h·ªèi?\t
    - m l√† c√°i g√¨
    - gi·ªõi t√≠nh c·ªßa b·∫°n l√† g√¨?
    - m la cai wtf gi the
    - mi la ai
    - m√†y l√† lz qu√® n√†o v
    - Gi√°o s∆∞ l√† ai
    - Ban ten la gi nhi
    - who are you really then?
    - mi la cai wtf gi the
    - ·ª¶a m l√† cc g√¨ th·∫ø
    - m√†y l√† con c·∫∑c g√¨ v·∫≠y
    - C√ì TH·ªÇ CHO M√åNH BI·∫æT T√äN B·∫†N ƒê∆Ø·ª¢C KH√îNG B·∫†N CHATBOT ?
    - M√åNH C√ì TH·ªÇ BI·∫æT T√äN C·ª¶A B·∫†N CHATBOT ƒê√ÇY ƒê∆Ø·ª¢C K NH·ªà
    - Ch√∫ l√† ai
    - m l√† tml n√†o
    - M√ÄY L√Ä TH·ªÇ LO·∫†I G√å V·∫¨Y
    - MAY TEN LA GI
    - m√†y l√† th·ª±c th·ªÉ g√¨ th·∫ø
    - may la lz que nao v
    - S∆Ø ƒê·ªÜ T√äN G√å
    - BAN TEN LA GI
    - √¥ng l√† ai
    - B·ªê M H·ªéI M T√äN G√å
    - CH·ªä L√Ä AI
    - M L√Ä C√ÅI G√å
    - V·ªä HUYNH ƒê√ÄI T√äN G√å
    - May la the loai gi vay
    - b√† l√† ai
    - m√†y l√† c√°i gi·ªëng lo√†i g√¨ v·∫≠y
    - may la gi
    - Mi ten gi
    - c√≥ th·ªÉ cho m√¨nh bi·∫øt t√™n b·∫°n ƒë∆∞·ª£c kh√¥ng b·∫°n ChatBot ?
    - M LA TH LZ NAO
    - M T√äN G√å
    - cho minh hoi ban ten la gi the
    - m t√™n g√¨
    - may rot cuoc la cai quai gi vay
    - v·ªã huynh ƒë√†i t√™n g√¨
    - EM L√Ä AI
    - CC M LA AI
    - banj teen gif
    - S∆Ø HUYNH T√äN G√å
    - M√ÄY L√Ä C√ÅI LZ QU√à G√å ZAY
    - CHO H·ªéI V·ªä HUYNH ƒê√ÄI ƒê√ÇY T√äN G√å NH·ªà
    - M l√† th n√†o
    - t√™n m√†y l√† g√¨
    - n√≥i cho ta bi·∫øt t√™n nh√† ng∆∞·ªùi l√† g√¨
    - may la ai
    - CH√ö L√Ä AI
    - what exactly are you?
    - M la th nao
    - TI·ªÇU MU·ªòI T√äN G√å
    - m√†y r·ªët cu·ªôc l√† g√¨ v·∫≠y
    - ai la ban
    - B√Ä L√Ä AI
    - m√†y t√™n g√¨
    - BANJ TEEN GIF
    - Chatbot t√™n g√¨ v·∫≠y nh·ªâ
    - CCC M LA CAI CC GI
    - MAY TEN LA GI NHI
    - M l√† cc g√¨ v
    - noi cho ta biet ten nha nguoi la gi
    - YO WTF M L√Ä AI TH·∫æ
    - m l√† cc g√¨
    - may la thang nao
    - b·∫°n chatbot ƒë√¢y t√™n l√† g√¨ nh·ªâ
    - M√†y l√† th·ªÉ lo·∫°i g√¨ v·∫≠y
    - c·∫≠u l√† ai
    - B·∫†N BOT T√äN G√å
    - b·∫°n t√™n g√¨ th·∫ø
    - m l√† c√°i wtf g√¨ th·∫ø
    - who are u
    - Nh√¢n ti·ªán ƒë√¢y cho m√¨nh h·ªèi b·∫°n chatbot ƒë√¢y l√† g√¨ dc k
    - GI√ÅO S∆Ø L√Ä AI
    - m ten gi
    - B·∫†N CHATBOT ƒê√ÇY T√äN L√Ä G√å NH·ªà
    - th·∫ßy l√† ai
    - CHO T√îI H·ªéI B·∫†N L√Ä AI
    - BOT T√äN G√å
    - m√†y l√† th·∫±ng n√†o
    - b·ª£n l√† ai z·ªã
    - B·∫°n l√† ai
    - m√†y r·ªët cu·ªôc l√† g√¨
    - T√™n g√¨
- intent: insult
  examples: |
    - L√°o c√° ch√≥
    - CMM
    - DCMM LUON
    - dit cu may
    - Ngu bot
    - LZ
    - DUME
    - M NGU VC
    - l·ªìn bot
    - Th·∫±ng l·ªìn
    - TH·∫∞NG NGU BOT N√ÄY
    - b·ªë m√†y ƒëang ch·ª≠i m√†y ƒë·∫•y
    - ƒê·ªäT M·∫∏ M TH·∫∞NG BOT NGU
    - ngu nh∆∞ ch√≥
    - LZ M√Å M√ÄY LUONG
    - chu·∫©n b·ªã nghe b·ªë m ch·ª≠i m n√®
    - Ngu qu√°
    - C√°i lz me may
    - l√°o ch√≥
    - th L·ªìn
    - L√ÅO C√Å CH√ì
    - bot g√†
    - ƒêCLMM TH NGU B0T
    - Bot ga`
    - CON DI~ BOT
    - BOT NG√ÅO
    - duma
    - BOT NGU
    - BOT D·ªêT
    - D·ªët
    - lz
    - √ä nghe t ch·ª≠i n√®
    - B·∫°n th·∫≠t l√† nh√†m ch√°n m√†
    - Bot c·∫∑c
    - Bot Ngu
    - DIT CU MAY
    - LOZ M·∫∏ M
    - L·ªíN
    - you trash
    - ƒëmm
    - you fuckin' disable
    - BOT G√Ä
    - Dick
    - bot l·ªìn
    - TH·∫∞NG LON`
    - Th·∫±ng lon`
    - dm
    - TH LON`
    - cmm
    - C·∫∑c
    - √ìC LOZ BOT
    - Th lon`
    - ƒë·ªãt c·ª• m√†y
    - CON M·∫∏ M√ÄY
    - ƒêmm
    - Loz m·∫π m
    - S·ª¶A L√äN
    - Bot ng√°o
    - NGU
    - ƒêMM
    - fuck you
    - L√ÅO LZ
    - f^ck you
    - D·ªäT C·ª§ M
    - SAO M NGU TH·∫æ
    - con c·∫∑c l√† g√¨
    - ch√≥ bot
    - TH·∫∞NG L·ªíN
    - ƒê·ªí NG0^K'
    - ƒê0^` NGU
    - Cc
    - fuck your mother
    - th lon
    - DD·ª• m√° m√†y lu√¥n
    - √≥c bot
    - VCC
    - lz m√° m√†y luong
    - B·∫°n c√≥ b·ªã ngu kh√¥ng ?
    - L·ªìn m√°
    - Ngu Ng·ªëc
    - Lz m·∫π m√†y ngu nh∆∞ c·∫∑c
    - Th l ƒë·∫ßu c·∫Øt moi
    - Tao chu·∫©n b·ªã ch·ª≠i m√†y n√®
    - ƒëcmm
    - DMM
    - Dmm
    - vc
    - TH·∫∞NG L
    - S m c√≥ th·ªÉ nGU nh∆∞ v·∫≠y ƒë∆∞·ª£c?
    - M ngu qu√° √†!
    - ƒê·ªí NGU
    - Ngu vl
    - B·ªë m ƒëang ch·ª≠i m ƒë·∫•y
    - CON CH√ì BOT NGU
    - ƒê·ªí G√Ä
    - CON DI~
    - vcc
    - DM
    - anh m√†y ƒëang ch·ª≠i m√†y ƒë·∫•y
    - A m ƒëang ch·ª≠i m ƒë·∫•y
    - Sao m ngu th·∫ø
    - Vcl
    - BOT CAC
    - M nGu vC
    - CON C·∫∂C
    - BOT C·∫∂C
    - bot cac
    - Lol
    - S√öC SINH NGU H·ªåC
    - NG√ÅO
    - S M C√ì TH·ªÇ NGU NH∆Ø V·∫¨Y ƒê∆Ø·ª¢C?
    - l√°o lz
    - LOZ
    - DD·ª§ M√Å M√ÄY LU√îN
    - s√∫c sinh ngu h·ªçc
    - die
    - ƒêCM
    - C√¢m m·∫π m·ªìm v√†o con ch√≥ ngu
    - ngu nh∆∞ con ch√≥
    - Ngu V√£i C·∫∑c
    - CH√ì BOT
    - just die
    - LOZ BOT
    - t ƒëang ch·ª≠i m ƒë·∫•y
    - ƒê·ªãt m·∫π m th·∫±ng bot ngu
    - bot ngao'
    - ƒë0^` nGU
    - NGU BOT
    - Ngu
    - s·ªßa l√™n
    - Ngu qu√° m√†
    - DUMA
    - √ìC V·∫¨T
    - con ch√≥
    - G√†
    - con Ch√≥ bot ngu
    - C·∫∂C BOT
    - ƒê·ªì G√†
    - ƒë·ªì nG0^k'
    - Cƒëcmm
    - √ìC C·∫∂C BOT
    - VKL
    - DCMM
    - TH LON
    - cc
    - ƒêCMM
    - NGU V√ÉI C·∫∂C
    - pussy
    - you dog
    - ƒê·ª§ M·∫∏ M√ÄY
    - loz
    - √ìc c·∫∑c bot
    - G√Ä V√ÉI L·ªíN
    - L√ÅO L
    - Con ch√≥ ngu
    - LOL M√Å M
    - C·∫∂C
    - Ng√°o
    - L√ÅO CH√ì
    - con C·∫∑c
    - C√ÇM M·∫∏ M·ªíM V√ÄO CON CH√ì NGU
    - th ch√≥ ngu bot
    - lol m√° m
    - you shit
    - con di~ bot
    - ƒëcm
    - th·∫±ng l
    - C·∫∑c bot
    - con m·∫π m√†y
    - G√† v√£i L·ªìN
    - LZ M·∫∏ M√ÄY NGU NH∆Ø C·∫∂C
    - BOT GA`
    - CC
    - VC
    - TH L·ªíN
    - Con ƒëƒ©
    - CON ƒêƒ® NGU
    - ƒêclmm th nGu B0T
    - CƒêCMM
    - you garbage
    - d·ªãt c·ª• m
    - fack you
    - VCL
    - C√ÅI LZ ME MAY
    - ƒê·ª• m√° m√†y qu√° ngu ƒëi
    - NGU NG·ªêC
    - LOL
- intent: health_inquire
  examples: |
    - H·ªîM R√ÄY V·∫™N OK CH·ª® H·∫¢
    - MINH VAN KHOE, CON BAN
    - B·ªØa h ok k
    - CH·ªä KH·ªéE, C√íN B√â TH√å SAO N√Ä
    - H·ªîM R√ÄY OK KH√îNG
    - H·ªîM R√ÄY S·ªêNG T·ªêT KH√îNG
    - tu·∫ßn v·ª´a r·ªìi kh·ªèe ch·ª© h·∫£
    - Minh van khoe, con ban
    - GREAT, AND YOU?
    - B·ªÆA GI·ªú S·ªêNG T·ªêT K
    - B·ªê M CH·∫ÆC CH·∫ÆN L√Ä KH·ªéE R, C√íN M TH√å SAO
    - OK, AND U?
    - h·ªïm r√†y ch√∫ em th·∫ø n√†o
    - d·∫°o n√†y cu·ªôc s·ªëng v·∫´n t·ªët ch·ª© h·∫£
    - H·ªîM R√ÄY TH·∫∞NG EM TUI SAO R
    - B·ªê M√ÄY KH·ªéE, C√íN CON GI·ªúI M TH√å SAO, KH·ªéE KO
    - D·∫†O N√ÄY C√ì SAO K
    - B·ªÆA GI·ªú M SAO R K·ªÇ T NGHE
    - D·∫†O N√ÄY EM IU C·ª¶A A KH·ªéE HONG
    - C√íN M√ÄY?
    - B·ªØa gi·ªù sao r·ªìi m
    - b·ªØa gi·ªù s·ªëng t·ªët k
    - DUME C√íN M TH√å SAO
    - I'M JUST FINE, AND YOU?
    - S·ªëng t·ªët k th em
    - M√¨nh kh·ªèe c√≤n m th√¨ sao
    - S·ªêNG T·ªêT K BOT
    - I'm okay, how about you?
    - V·ª™A R·ªíI KH·ªéE K
    - d·∫°o n√†y m√†y th·∫ø n√†o?
    - M TH√å CH·∫ÆC C≈®NG KH·ªéE R·ªíI C√íN G√å DUMEMAY TH LZ M√ÅY M√ìC
    - Kh·ªèe k
    - b·ªØa gi·ªù s·ªëng ch·∫øt sao r
    - D·∫†O N√ÄY M√ÄY SAO
    - H·ªîM R√ÄY CH√ö EM TH·∫æ N√ÄO
    - I'M GREAT, HOW 'BOUT U?
    - kh·ªèe hong
    - B·ªÆA H OK K
    - D·∫†O N√ÄY TH·∫∞NG E C·ª¶A CH·ªä ·ªîN K
    - T KH·ªéE, C√íN M TH√å SAO
    - S·ªëng ·ªïng ch·ª© Chatbot
    - b·ªØa gi·ªù ·ªïn √°p k m
    - Dume c√≤n m th√¨ sao
    - EI D·∫†O N√ÄY S·ªêNG T·ªêT CH·ª®
    - h·ªïm r√†y ok kh√¥ng
    - v·ª´a r·ªìi m sao r
    - m√¨nh h·ªèi c√°i n√®, d·∫°o n√†y s·ªëng t·ªët hong
    - NOT REALLY FINE BUT STILL OKAY, AND YOU?
    - H·ªîM R√ÄY TH·∫∞NG ƒê·ªÜ A V·∫™N ·ªîN CH·ª®
    - CHO EM H·ªéI, D·∫†O N√ÄY B·∫†N KH·ªéE K?
    - ABSOLUTELY FINE, HOW ABOUT U?
    - KH·ªéE CH·ª® M√ÄY
    - d·∫°o n√†y em iu c·ªßa a kh·ªèe hong
    - D·∫†O N√ÄY ·ªîN √ÅP KH√îNG
    - Kh·ªèe ch·ª© m√†y
    - MINH KHOE, CON BAN THI SAO
    - EM V·∫™N KH·ªéE, C√íN C√î TH√å SAO
    - s·ªëng t·ªët ch·ª© h·∫£
    - B·∫°n kho·∫ª kh√¥ng
    - S·ªêNG T·ªêT K
    - B·ªØa gi·ªù ·ªïn kh√¥ng
    - b·ªë m kh·ªèe c√≤n m th√¨?
    - t kh·ªèe c√≤n m th√¨ sao
    - S·ªêNG T·ªêT CH·ª® H·∫¢
    - B·ªØa gi·ªù v·∫´n ok ch·ª© h·∫£
    - D·∫†O N√ÄY CRUSH C·ª¶A TUI KH·ªéE HONG N√Ä
    - How about u?
    - Ei d·∫°o n√†y s·ªëng t·ªët ch·ª©
    - h·ªïm r√†y c√≥ v·∫•n ƒë·ªÅ g√¨ k
    - Ok, and u?
    - B·ªØa gi·ªù ok k ch√∫ e
    - m th√¨ sao, ·ªü ƒë√≥ m√† h·ªèi tao
    - √™ d·∫°o n√†y sao r
    - b·ªØa gi·ªù m sao r k·ªÉ t nghe
    - D·∫°o n√†y cu·ªôc s·ªëng v·∫´n ok ch·ª© h·∫£ ch√∫ e
    - v·ª´a r·ªìi kh·ªèe k
    - TU·∫¶N V·ª™A R·ªíI KH·ªéE CH·ª® H·∫¢
    - B·ªÆA H KH·ªéE K
    - D·∫†O N√ÄY CU·ªòC S·ªêNG V·∫™N ·ªîN ƒê·ªäNH CH·ª®
    - D·∫†O N√ÄY SAO R·ªíI TH L
    - B·∫†N KHO·∫∫ KH√îNG
    - N√à D·∫†O N√ÄY S·ªêNG SAO R
    - I'M EXTREMELY FINE, AND YOU?
    - s·ªëng t·ªët kh√¥ng th·∫±ng em
    - D·∫†O N√ÄY T·ªêT K
    - tu·∫ßn v·ª´a qua v·∫´n ·ªïn ch·ª©
    - KH·ªéE K
    - I'm ok, about ya?
    - I'm just fine, and you?
    - H·ªïm r√†y s·ªëng t·ªët kh√¥ng
    - I'm fine, how about u?
    - H·ªîM R√ÄY S·ª®C KH·ªéE ·ªîN CH·ª®
    - B·ªÆA GI·ªú S·ªêNG CH·∫æT SAO R
    - M√åNH KH·ªéE C√íN B·∫†N TH√å SAO
    - I'M FINE, HOW ABOUT U?
    - M C≈®NG KH·ªéE CH·ª® H·∫¢?
    - b·ªØa gi·ªù v·∫´n ok m√† ph·∫£i k?
    - b·ªØa h s·ª©c kh·ªèe m sao r
    - D·∫†O N√ÄY SAO R·ªíI
    - kh·ªèe k bot
    - cho em h·ªèi d·∫°o n√†y s·ªëng t·ªët k
    - Not really fine but still okay, and you?
    - d·∫°o n√†y c√¥ng vi·ªác ·ªïn th·ªèa ch·ª© h·∫£
    - kh·ªèe kh√¥ng
    - S·ªëng t·ªët kh√¥ng m√†y
    - D·∫°o n√†y th·∫±ng e c·ªßa ch·ªã ·ªïn k
    - T NGHƒ® CH·∫ÆC M M√ÉI KH·ªéE TH√îI M√Ä NH·ªà
    - v·ª´a r·ªìi cu·ªôc s·ªëng th·∫ø n√†o
    - S·ªëng t·ªët ch·ª© bot
    - D·∫†O N√ÄY ·ªîN CH·ª®
    - D·∫°o n√†y Chatbot c√≥ ·ªïng hong
    - h·ªïm r√†y c√≥ kh√≥ khƒÉn g√¨ kh√¥ng th·∫±ng e
    - s·ªëng t·ªët k
    - t kh·ªèe, c√≤n m th√¨ sao
    - anh m√†y kh·ªèe, c√≤n th em c·ªßa anh th√¨ sao n√†
    - √ä B·ªÆA H SAO R
    - I'M OK, ABOUT YA?
    - B·ªÆA H C√îNG VI·ªÜC ·ªîN TH·ªéA H·∫æT CH·ª® H·∫¢
    - I'm extremely fine, and you?
    - minh thi minh van khoe, ban thi sao
    - b·ªë m√†y kh·ªèe, c√≤n con gi·ªùi m th√¨ sao, kh·ªèe ko
    - Em v·∫´n kh·ªèe, c√≤n c√¥ th√¨ sao
    - AND YOU?
    - D·∫†O N√ÄY M√ÄY TH·∫æ N√ÄO?
    - B·ªÆA GI·ªú S·ªêNG SAO R
    - D·∫†O N√ÄY CU·ªòC S·ªêNG V·∫™N OK CH·ª® H·∫¢ CH√ö E
    - S·ªêNG T·ªêT KH√îNG M√ÄY
    - EM KH·ªéE, C√íN TH·∫¶Y?
    - H·ªîM R√ÄY C√ì V·∫§N ƒê·ªÄ G√å K
    - CHO EM H·ªéI D·∫†O N√ÄY S·ªêNG T·ªêT K
    - S·ªêNG T·ªêT KH√îNG TH·∫∞NG EM
    - S·ªêNG ·ªîN √ÅP K BOT
    - H·ªîM R√ÄY C√ì KH√ì KHƒÇN G√å KH√îNG TH·∫∞NG E
    - d·∫°o n√†y m·ªçi th·ª© v·∫´n ok m√† ph·∫£i hem
    - B·ªÆA H T·ªêT K
    - m th√¨ ch·∫Øc c≈©ng kh·ªèe r·ªìi c√≤n g√¨ dumemay th lz m√°y m√≥c
    - H·ªîM R√ÄY KH·ªéE KH√îNG
    - D·∫†O N√ÄY CU·ªòC S·ªêNG V·∫™N T·ªêT CH·ª® H·∫¢
    - √ä D·∫†O N√ÄY SAO R
    - d·∫°o n√†y bot kh·ªèe k
    - I'M OKAY, HOW ABOUT YOU?
    - Sort of fine, and you?
    - ch·ªã kh·ªèe, c√≤n b√© th√¨ sao n√†
    - H·ªïm r√†y v·∫´n ok ch·ª© h·∫£
    - KH·ªéE HONG
    - H·ªïm r√†y th·∫±ng em tui sao r
    - EM V·∫™N KH·ªéE, C√íN ANH TH√å SHAO
    - I'm great, how 'bout u?
    - I'M GOOD, C√íN M?
    - B·ªê M KH·ªéE C√íN M TH√å?
    - EEE D·∫†O N√ÄY C√íN ·ªîN √ÅP K V
    - TU·∫¶N V·ª™A R·ªíI S·ªêNG SAO R EM
    - Great, and you?
    - d·∫°o n√†y b·∫°n m√¨nh v·∫´n kh·ªèe ch·ª© h·∫£
    - ·ª¶a ch·ª© m th√¨ sao m√† h·ªèi tao?
    - b·ªØa h h·ªçc h√†nh sao r
    - B·ªÆA GI·ªú ·ªîN √ÅP K M
    - D·∫†O N√ÄY KH·ªéE HONG B·∫†N TUI
    - B·ªÆA H S·ª®C KH·ªéE M SAO R
    - B·ªØa gi·ªù s·ªëng sao r
    - M TH√å SAO?
    - s·ªëng t·ªët k bot
    - b·ªØa h c√¥ng vi·ªác ·ªïn th·ªèa h·∫øt ch·ª© h·∫£
    - B·ªÆA H C√îNG VI·ªÜC M√ÄY SAO R
    - D·∫°o n√†y m√†y sao
    - d·∫°o n√†y sao r·ªìi th l
    - D·∫†O N√ÄY EM IU ·ªîN H∆†M
    - Fantastic, how about u?
    - s·ªëng ·ªïn √°p k bot
    - S·ªêNG T·ªêT CH·ª® BOT
    - M TH√å SAO, ·ªû ƒê√ì M√Ä H·ªéI TAO
    - em v·∫´n kh·ªèe, c√≤n th·∫ßy th√¨ sao
    - minh khoe, con ban thi sao
    - cho em xin ƒë∆∞·ª£c ph√©p h·ªèi, d·∫°o n√†y b·∫°n th·∫ø n√†o r·ªìi?
    - D·∫†O N√ÄY M·ªåI TH·ª® V·∫™N OK M√Ä PH·∫¢I HEM
    - B·ªÆA GI·ªú OK K CH√ö E
    - eee d·∫°o n√†y c√≤n ·ªïn √°p k v
    - b·ªØa gi·ªù cu·ªôc s·ªëng sao r, v·∫´n th·∫ø ch·ª© h·∫£
    - D·∫°o n√†y em iu ·ªïn h∆°m
    - CHO EM XIN ƒê∆Ø·ª¢C PH√âP H·ªéI, D·∫†O N√ÄY B·∫†N TH·∫æ N√ÄO R·ªíI?
    - ANH M√ÄY KH·ªéE, C√íN TH EM C·ª¶A ANH TH√å SAO N√Ä
    - EM V·∫™N KH·ªéE, C√íN TH·∫¶Y TH√å SAO
    - B·ªÆA GI·ªú SAO R·ªíI M
    - D·∫†O N√ÄY BOT KH·ªéE K
    - FANTASTIC, HOW ABOUT U?
    - D·∫°o n√†y th·∫±ng bot c·ªßa a kh·ªèe k
    - HOW ABOUT U?
    - h·ªïm r√†y kh·ªèe kh√¥ng
    - D·∫°o n√†y cu·ªôc s·ªëng v·∫´n ·ªïn ƒë·ªãnh ch·ª©
    - D·∫°o n√†y ·ªïn √°p kh√¥ng
    - D·∫†O N√ÄY C√îNG VI·ªÜC ·ªîN TH·ªéA CH·ª® H·∫¢
    - √™ b·ªØa h sao r
    - S·ªêNG ·ªîNG CH·ª® CHATBOT
    - B·ªÆA GI·ªú V·∫™N OK CH·ª® H·∫¢
    - em kh·ªèe, c√≤n th·∫ßy?
    - KH·ªéE KH√îNG
    - ·ª¶A CH·ª® M TH√å SAO M√Ä H·ªéI TAO?
    - d·∫°o n√†y c√≥ sao k
    - K·ªÇ T NGHE B·ªÆA GI·ªú S·ªêNG SAO R H√àM
    - M th√¨ sao?
    - m√¨nh kh·ªèe, c√≤n b·∫°n?
    - And you?
    - D·∫°o n√†y sao r·ªìi
    - EXCELLENT, AND U?
    - d·∫°o n√†y bot c·ªßa a s·ªëng th·∫ø n√†o?
    - TU·∫¶N V·ª™A R·ªíI C√ì M·ªÜT M·ªéI L·∫ÆM K
    - H·ªîM R√ÄY ·ªîN KH√îNG
    - D·∫†O N√ÄY CHATBOT C√ì ·ªîNG HONG
- intent: cpplus_example_asking
  examples: |
    - NAY, VI DU VE [BREAK]{"entity": "cpplus_content", "value": "break"} CHO BON TOA NHANH
    - Thay, cho do de vi du ve vong lap [While]{"entity": "cpplus_content", "value": "while"} duoc khong a?
    - v√∫ d·ªã v·ªÅ [Integer]{"entity": "cpplus_content", "value": "integer"}
    - HAY CHO T VI DU VE [VONG LAP]{"entity": "cpplus_content", "value": "loop"} DI NAO
    - Hay vi du cu cmn the ve [de quy]{"entity": "cpplus_content", "value": "recursion"} di
    - cho t√¥i m·ªôt v√≠ d·ª• v·ªÅ [namespace](cpplus_content) ƒë∆∞·ª£c kh√¥ng?
    - M√àN OIII, CHO TUI V√ç D·ª§ V·ªÄ [FOR]{"entity": "cpplus_content", "value": "for"} XEM TH·ª¨ N√Ä
    - [Recursion]{"entity": "cpplus_content", "value": "recursion"} vi du
    - Vi du ve kieu [double](cpplus_content) va kieu [float]{"entity": "cpplus_content", "value": "floating-point"} di
    - V√ç D·ª§ V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} COI ƒê·ª§ M√Å
    - HMMM, CHO M√åNH TH·ª¨ M·ªòT V√ç D·ª§ V·ªÄ C√ÇU [ƒêI·ªÄU KI·ªÜN]{"entity": "cpplus_content", "value": "if"} TH·ª¨ XEM SAO N√à
    - m√†y ∆°i, cho tao v√≠ d·ª• v·ªÅ [If]{"entity": "cpplus_content", "value": "if"} ƒëi
    - vi du cu the nhat ve [Pointer]{"entity": "cpplus_content", "value": "pointer"}
    - GIVE ME AN EXAMPLE OF [SCOPE RESOLUTION OPERATOR]{"entity": "cpplus_content", "value": "scope-resolution-operator"}
    - CHO T√îI XIN M·ªòT V√ç D·ª§ V·ªÄ [KH√îNG GIAN T√äN]{"entity": "cpplus_content", "value": "namespace"} V·ªöI ·∫†
    - vi du ve [Con tro]{"entity": "cpplus_content", "value": "pointer"} coi du ma
    - V√ç D·ª§ C·ª§ TH·ªÇ NH·∫§T V·ªÄ [POINTER]{"entity": "cpplus_content", "value": "pointer"}
    - [RECURSION]{"entity": "cpplus_content", "value": "recursion"} V√ç D·ª§
    - Mot vi du de hieu nhat ve [ham noi tuyen]{"entity": "cpplus_content", "value": "inline-function"}
    - √ä BOT, CHO T M·ªòT V√ç D·ª§ V·ªÄ [LAMBDA]{"entity": "cpplus_content", "value": "lambda"}
    - Dcmm cho t 1 v√≠ d·ª• v·ªÅ [commnet]{"entity": "cpplus_content", "value": "comment"} ƒëi duma
    - D√ç D·ª§ TH·ª¨ V·ªÄ KI·ªÇU D·ªÆ LI·ªÜU [FLOAT]{"entity": "cpplus_content", "value": "floating-point"} XEM SAO N√ÄO
    - e bot, cho t mot vi du ve [Lambda]{"entity": "cpplus_content", "value": "lambda"}
    - JUST GIVE TO ME A EXAMPLE ABOUT [TO√ÅN T·ª¨ ƒê·ªäNH PH·∫†M VI]{"entity": "cpplus_content", "value": "scope-resolution-operator"}
    - cho t√¥i v√≠ d·ª• v·ªÅ c√°c lo·∫°i v√≤ng l·∫∑p [for](cpplus_content), [while](cpplus_content) v√† [do while]{"entity": "cpplus_content", "value": "do-while"} ƒëi
    - M·ªòT S·ªê V√ö D·ªä V·ªÄ [KI·ªÇU D·ªÆ LI·ªÜU]{"entity": "cpplus_content", "value": "data-type"}
    - H√ÉY CHO T√îI M·ªòT V√ÄI V√ç D·ª§ V·ªÄ [LIBRARIES]{"entity": "cpplus_content", "value": "library"}
    - H√£y cho iem m·ªôt s·ªë v√≠ d·ª• v·ªÅ v√≤ng [while](cpplus_content) ƒëi ·∫°
    - K·ªÇ TAO NGHE V·ªÄ M·ªòT S·ªê V√ç D·ª§ V·ªÄ [COMMENT]{"entity": "cpplus_content", "value": "comment"} ƒêI BOT
    - CHO M√åNH M·ªòT S·ªê C√ÅC C√ÅI V√ç D·ª§ V·ªÄ L·ªÜNH [BREAK]{"entity": "cpplus_content", "value": "break"} V√Ä L·ªÜNH [CONTINUE](CPPLUS_CONTENT) ƒêI ·∫†
    - v√≠ d·ª• c·ª• th·ªÉ nh·∫•t v·ªÅ [Pointer]{"entity": "cpplus_content", "value": "pointer"}
    - VI DU VE 1 [VONG LAP]{"entity": "cpplus_content", "value": "loop"} TRONG C++ XEM NAO
    - M·ªòT S·ªê INSTANCES V·ªÄ [H√ÄM]{"entity": "cpplus_content", "value": "function"} TH·ª¨ N√à
    - VI DU CU THE NHAT VE [POINTER]{"entity": "cpplus_content", "value": "pointer"}
    - VI DU VE [MANG MOT CHIEU]{"entity": "cpplus_content", "value": "array"} VA [MANG HAI CHIEU]{"entity": "cpplus_content", "value": "2d-array"} DE
    - V√ç D·ª§ V·ªÄ [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"}
    - cho minh mot so cac cai vi du ve lenh [break](cpplus_content) va lenh [continue](cpplus_content) di a
    - MOT VAI VI DU VE [VARIABLE]{"entity": "cpplus_content", "value": "variable"}
    - √ä tao ƒëang kh√¥ng hi·ªÉu r√µ v·ªÅ [To√°n t·ª≠ s·ªë h·ªçc]{"entity": "cpplus_content", "value": "arithmetic-operator"} v√† [to√°n t·ª≠ logic]{"entity": "cpplus_content", "value": "logical-operator"}, cho tao v√≠ d·ª• v·ªÅ hai m√≥n ƒë√≥ ƒëi
    - d√≠ d·ª• th·ª≠ v·ªÅ ki·ªÉu d·ªØ li·ªáu [float]{"entity": "cpplus_content", "value": "floating-point"} xem sao n√†o
    - Vi du ve [Kieu du lieu]{"entity": "cpplus_content", "value": "data-type"}
    - V√ç D·ª§ N√ÄO KH√ì HI·ªÇU V·ªÄ [HAM S·ªê M·∫∂C NHI√äN]{"entity": "cpplus_content", "value": "default-value"}
    - Mot so vi du cu the hon ve [toan tu dinh pham vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"}
    - [Recursion]{"entity": "cpplus_content", "value": "recursion"} v√≠ d·ª•
    - VI DU VE [MANG MOT CHIEU]{"entity": "cpplus_content", "value": "array"} DI MAY
    - V√≠ d·ª• [Variable]{"entity": "cpplus_content", "value": "variable"}
    - eg v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"}
    - √ä CHO C√ÅI V√ç D·ª§ V·ªÄ [ARRAY]{"entity": "cpplus_content", "value": "array"}
    - h√£y cho t√¥i m·ªôt v√†i v√≠ d·ª• v·ªÅ [libraries]{"entity": "cpplus_content", "value": "library"}
    - v√≠ d·ª• c·ª• th·ªÉ v·ªÅ [tham s·ªë]{"entity": "cpplus_content", "value": "parameter"} v√† [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"}
    - √ä TAO V·∫™N CH∆ØA HI·ªÇU V·ªÄ C√ÅI V√íNG L·∫∂P TRONG C++ L·∫ÆM CHO TH·ª¨ M·ªòT V√ç D·ª§ V·ªÄ [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} XEM N√ÄO
    - mot so chiec examples ve [break](cpplus_content) va [goto](cpplus_content) di a
    - VI DU [VARIABLE]{"entity": "cpplus_content", "value": "variable"}
    - M·ªòT S·ªê V√ç D·ª§ V·ªÄ [TH∆Ø VI·ªÜN]{"entity": "cpplus_content", "value": "library"}
    - hay cho t vi du ve [vong lap]{"entity": "cpplus_content", "value": "loop"} di nao
    - [RECURSION]{"entity": "cpplus_content", "value": "recursion"} VI DU
    - mot vai vi du ve [For]{"entity": "cpplus_content", "value": "for"} cho nguoi ta duoc ko ?
    - V√ç D·ª§ V·ªÄ [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"} ƒêI M√ÄY
    - e tao van chua hieu ve cai vong lap trong c++ lam cho thu mot vi du ve [vong lap]{"entity": "cpplus_content", "value": "loop"} xem nao
    - V√≠ d·ª• v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"}
    - cho m√¨nh 1 c√°i example v·ªÅ [if](cpplus_content) th·ª≠ coi n√®
    - cho toi xin mot vi du ve [khong gian ten]{"entity": "cpplus_content", "value": "namespace"} voi a
    - just give to me a example about [toan tu dinh pham vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"}
    - Dcmm cho t 1 vi du ve [commnet]{"entity": "cpplus_content", "value": "comment"} di duma
    - [CAU TRUC DIEU KHIEN]{"entity": "cpplus_content", "value": "control-flow"} VI DU
    - m·ªôt s·ªë instances v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"} th·ª≠ n√®
    - Cho toi mot vi du ve [ham]{"entity": "cpplus_content", "value": "function"} di
    - √ä BOT, CHO T 1 S·ªê V√ç D·ª§ V·ªÄ [COMMENT]{"entity": "cpplus_content", "value": "comment"} ƒê√ä
    - M√ÄY ∆†I, CHO TAO V√ç D·ª§ V·ªÄ [IF]{"entity": "cpplus_content", "value": "if"} ƒêI
    - A OI, CHO E VI DU VE VONG LAP [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} DI A
    - [cau truc dieu khien]{"entity": "cpplus_content", "value": "control-flow"} vi du
    - MOT SO CHIEC EXAMPLES VE [BREAK]{"entity": "cpplus_content", "value": "break"} VA [GOTO]{"entity": "cpplus_content", "value": "goto"} DI A
    - √™, tao v·∫´n ch∆∞a hi·ªÉu v·ªÅ c√°i v√≤ng l·∫∑p trong c++ l·∫Øm, cho th·ª≠ m·ªôt v√≠ d·ª• v·ªÅ [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} xem n√†o
    - E.G VE [FUNCTION]{"entity": "cpplus_content", "value": "function"} THU XEM NAO
    - mot vai vi du ve [variable](cpplus_content)
    - EG V·ªÄ [H√ÄM]{"entity": "cpplus_content", "value": "function"}
    - DI VU THU VE KIEU [INT]{"entity": "cpplus_content", "value": "integer"} XEM NAO
    - e, tao van chua hieu ve cai vong lap trong c++ lam, cho thu mot vi du ve [vong lap]{"entity": "cpplus_content", "value": "loop"} xem nao
    - cho t√¥i xin m·ªôt v√≠ d·ª• v·ªÅ [kh√¥ng gian t√™n]{"entity": "cpplus_content", "value": "namespace"} v·ªõi ·∫°
    - [Class]{"entity": "cpplus_content", "value": "class"} v√≠ d·ª• n√†o
    - CHO T√îI V√ç D·ª§ V·ªÄ C√ÅC LO·∫†I V√íNG L·∫∂P [FOR]{"entity": "cpplus_content", "value": "for"}, [WHILE](CPPLUS_CONTENT) V√Ä [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} ƒêI
    - v√≠ d·ª• v·ªÅ [to√°n t·ª≠ tƒÉng]{"entity": "cpplus_content", "value": "increment-operator"}, [to√°n t·ª≠ gi·∫£m]{"entity": "cpplus_content", "value": "decrement-operator"}
    - HAY VI DU CU CMN THE VE [DE QUY]{"entity": "cpplus_content", "value": "recursion"} DI
    - di du thu ve kieu du lieu [float]{"entity": "cpplus_content", "value": "floating-point"} xem sao nao
    - dm cho bo m vi du ve [con tro]{"entity": "cpplus_content", "value": "pointer"} di
    - CHO TOI VI DU VE CAC LOAI VONG LAP [FOR]{"entity": "cpplus_content", "value": "for"}, [WHILE](CPPLUS_CONTENT) VA [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} DI
    - A ∆°i, cho e v√≠ d·ª• v·ªÅ v√≤ng l·∫∑p [do while]{"entity": "cpplus_content", "value": "do-while"} ƒëi a
    - V√≠ d·ª• v·ªÅ [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"}
    - V√≠ d·ª• v·ªÅ [m·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} ƒëi m√†y
    - VU DI VE [INTEGER]{"entity": "cpplus_content", "value": "integer"}
    - TH·∫¶Y, CHO ƒê·ªí ƒê·ªÜ V√ç D·ª§ V·ªÄ V√íNG L·∫∂P [WHILE]{"entity": "cpplus_content", "value": "while"} ƒê∆Ø·ª¢C KH√îNG ·∫†?
    - Vi du [Variable]{"entity": "cpplus_content", "value": "variable"}
    - V√ç D·ª§ V·ªÄ KI·ªÇU [DOUBLE](CPPLUS_CONTENT) V√Ä KI·ªÇU [FLOAT]{"entity": "cpplus_content", "value": "floating-point"} ƒêI
    - V√≠ d·ª• v·ªÅ ki·ªÉu [double](cpplus_content) v√† ki·ªÉu [float]{"entity": "cpplus_content", "value": "floating-point"} ƒëi
    - V√ç D·ª§ V·ªÄ [LOOPS]{"entity": "cpplus_content", "value": "loop"} TRONG C++ XEM TH·ª¨ N√ÄO
    - HAY CHO TOI MOT VAI VI DU VE [LIBRARIES]{"entity": "cpplus_content", "value": "library"}
    - E.G V·ªÄ [FUNCTION]{"entity": "cpplus_content", "value": "function"} TH·ª¨ XEM N√ÄO
    - H√£y v√≠ d·ª• c·ª• cmn th·ªÉ v·ªÅ [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"} ƒëi
    - V√ç D·ª§ [VARIABLE]{"entity": "cpplus_content", "value": "variable"}
    - CHO M·ªòT C√ÅI V√ç D·ª§ V·ªÄ [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} ƒêI IEM
    - da den luc bo may phong van may roi, cho bo may mot vi du ve [if else]{"entity": "cpplus_content", "value": "if-else"} di nao
    - M·ªòT S·ªê CHI·∫æC EXAMPLES V·ªÄ [BREAK]{"entity": "cpplus_content", "value": "break"} V√Ä [GOTO]{"entity": "cpplus_content", "value": "goto"} ƒêI ·∫†
    - HAY CHO TUI MOT SO VI DU VE [BIEN]{"entity": "cpplus_content", "value": "variable"}
    - mot vai vi du ve [toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"}, [toan tu hai ngoi]{"entity": "cpplus_content", "value": "binary-operator"}, [toan tu ba ngoi]{"entity": "cpplus_content", "value": "ternary-operator"}
    - C√°ch vi·∫øt m·ªôt ch∆∞∆°ng tr√¨nh [C]{"entity": "cpplus_content", "value": "cplusplus"}++
    - cho minh 1 cai example ve [if](cpplus_content) thu coi ne
    - hay cho tui mot so vi du ve [bien]{"entity": "cpplus_content", "value": "variable"}
    - V√ö D·ªä V·ªÄ [INTEGER]{"entity": "cpplus_content", "value": "integer"}
    - CHO TOI 1 SO DI DU ZE [VARIABLES]{"entity": "cpplus_content", "value": "variable"} VOI
    - MOT SO VI DU VE [THU VIEN]{"entity": "cpplus_content", "value": "library"}
    - cho xin v√≠ d·ª• d·ªÖ hi·ªÉu v·ªÅ [return](cpplus_content) ƒë√™
    - M·ªòT V√ÄI V√ç D·ª§ V·ªÄ [FOR]{"entity": "cpplus_content", "value": "for"} CHO NG∆Ø·ªúI TA ƒê∆Ø·ª¢C KO ?
    - MOT VAI VI DU VE [FOR]{"entity": "cpplus_content", "value": "for"} CHO NGUOI TA DUOC KO ?
    - CHO TOI XIN MOT VI DU VE [KHONG GIAN TEN]{"entity": "cpplus_content", "value": "namespace"} VOI A
    - E tao dang khong hieu ro ve [Toan tu so hoc]{"entity": "cpplus_content", "value": "arithmetic-operator"} va [toan tu logic]{"entity": "cpplus_content", "value": "logical-operator"}, cho tao vi du ve hai mon do di
    - Cho m·ªôt c√°i v√≠ d·ª• v·ªÅ [m·∫£ng]{"entity": "cpplus_content", "value": "array"} ƒëi iem
    - cho toi 1 so di du ze [variables]{"entity": "cpplus_content", "value": "variable"} voi
    - MAY OI, CHO TAO VI DU VE [IF]{"entity": "cpplus_content", "value": "if"} DI
    - THAY, CHO DO DE VI DU VE VONG LAP [WHILE]{"entity": "cpplus_content", "value": "while"} DUOC KHONG A?
    - MOT SO VU DI VE [KIEU DU LIEU]{"entity": "cpplus_content", "value": "data-type"}
    - just give to me a example about [to√°n t·ª≠ ƒë·ªãnh ph·∫°m vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"}
    - vu di ve [Integer]{"entity": "cpplus_content", "value": "integer"}
    - V√≠ d·ª• n√†o kh√≥ hi·ªÉu v·ªÅ [ham s·ªë m·∫∑c nhi√™n]{"entity": "cpplus_content", "value": "default-value"}
    - V√ç D·ª§ C·ª§ TH·ªÇ V·ªÄ [THAM S·ªê]{"entity": "cpplus_content", "value": "parameter"} V√Ä [ƒê·ªêI S·ªê]{"entity": "cpplus_content", "value": "argument"}
    - EXAMPLES V·ªÄ [RECURSIONS]{"entity": "cpplus_content", "value": "recursion"}
    - V√ç D·ª§ V·ªÄ [H√ÄM]{"entity": "cpplus_content", "value": "function"}
    - H√ÉY V√ç D·ª§ C·ª§ CMN TH·ªÇ V·ªÄ [ƒê·ªÜ QUY]{"entity": "cpplus_content", "value": "recursion"} ƒêI
    - CHO M√åNH 1 C√ÅI EXAMPLE V·ªÄ [IF]{"entity": "cpplus_content", "value": "if"} TH·ª¨ COI N√à
    - Hay cho toi mot vai cac cai vi du ve vong [For]{"entity": "cpplus_content", "value": "for"} vong [while](cpplus_content) va vong [do while]{"entity": "cpplus_content", "value": "do-while"}
    - CHO B·ªê M√ÄY M·ªòT V√ç D·ª§ V·ªÄ [LIBRARY]{"entity": "cpplus_content", "value": "library"}
    - V√≠ d·ª• v·ªÅ [loops]{"entity": "cpplus_content", "value": "loop"} trong c++ xem th·ª≠ n√†o
    - e.g ve [function](cpplus_content) thu xem nao
    - HMMM, CHO MINH THU MOT VI DU VE CAU [DIEU KIEN]{"entity": "cpplus_content", "value": "if"} THU XEM SAO NE
    - [CLASS]{"entity": "cpplus_content", "value": "class"} V√ç D·ª§ N√ÄO
    - Vi du ve [loops]{"entity": "cpplus_content", "value": "loop"} trong c++ xem thu nao
    - VI DU VE [CON TRO]{"entity": "cpplus_content", "value": "pointer"} COI DU MA
    - k·ªÉ tao nghe v·ªÅ m·ªôt s·ªë v√≠ d·ª• v·ªÅ [comment](cpplus_content) ƒëi bot
    - ƒê·∫æN GI·ªú PH·ªéNG V·∫§N, V√ç D·ª§ V·ªÄ H√ÄM [LAMDA]{"entity": "cpplus_content", "value": "lambda"} ƒêI N√ÄO, NHANH
    - √™ bot, cho t m·ªôt v√≠ d·ª• v·ªÅ [Lambda]{"entity": "cpplus_content", "value": "lambda"}
    - m·ªôt v√†i v√≠ d·ª• v·ªÅ [For]{"entity": "cpplus_content", "value": "for"} cho ng∆∞·ªùi ta ƒë∆∞·ª£c ko ?
    - Cho minh mot so cac cai vi du ve [tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} va [tham tri]{"entity": "cpplus_content", "value": "pass-by-value"} di ne
    - CHO BO MAY MOT VI DU VE [LIBRARY]{"entity": "cpplus_content", "value": "library"}
    - M·ªòT V√ÄI V√ç D·ª§ V·ªÄ [VARIABLE]{"entity": "cpplus_content", "value": "variable"}
    - E, TAO VAN CHUA HIEU VE CAI VONG LAP TRONG C++ LAM, CHO THU MOT VI DU VE [VONG LAP]{"entity": "cpplus_content", "value": "loop"} XEM NAO
    - VI DU VE [KIEU DU LIEU]{"entity": "cpplus_content", "value": "data-type"}
    - CHO MOT CAI VI DU VE [MANG]{"entity": "cpplus_content", "value": "array"} DI IEM
    - dua cho toi mot so vi du ve [If]{"entity": "cpplus_content", "value": "if"} di nao
    - cho xin vi du de hieu ve [return](cpplus_content) de
    - m√®n oiii, cho tui v√≠ d·ª• v·ªÅ [for](cpplus_content) xem th·ª≠ n√†
    - men oiii, cho tui vi du ve [for](cpplus_content) xem thu na
    - Eg v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"}
    - m·ªôt s·ªë chi·∫øc examples v·ªÅ [break](cpplus_content) v√† [goto](cpplus_content) ƒëi ·∫°
    - CHO M√åNH M·ªòT S·ªê C√ÅC C√ÅI V√ç D·ª§ V·ªÄ [THAM CHI·∫æU]{"entity": "cpplus_content", "value": "pass-by-reference"} V√Ä [THAM TR·ªä]{"entity": "cpplus_content", "value": "pass-by-value"} ƒêI N√à
    - BAN EI, CHO MINH MOT VAI VI DU VE [TOAN TU]{"entity": "cpplus_content", "value": "operator"} DC HONG
    - N√à BOT, V√ç D·ª§ V·ªÄ [COMMENT]{"entity": "cpplus_content", "value": "comment"} TH·ª¨
    - N√à BOT ∆†I, CHO TAO V√ç D·ª§ V·ªÄ [OPERATORS]{"entity": "cpplus_content", "value": "operator"} ƒêI M√ÄY
    - V√ç D·ª§ V·ªÄ 1 [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} TRONG C++ XEM N√ÄO
    - AN EXAMPLE OF [LAMBDA]{"entity": "cpplus_content", "value": "lambda"} FUNCTION ?
    - CHO TOI MOT VI DU VE [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} DUOC KHONG?
    - m·ªôt v√†i v√≠ d·ª• v·ªÅ [to√°n t·ª≠ m·ªôt ng√¥i]{"entity": "cpplus_content", "value": "unary-operator"}, [to√°n t·ª≠ hai ng√¥i]{"entity": "cpplus_content", "value": "binary-operator"}, [to√°n t·ª≠ ba ng√¥i]{"entity": "cpplus_content", "value": "ternary-operator"}
    - H√ÉY CHO T√îI M·ªòT V√ÄI C√ÅC C√ÅI V√ç D·ª§ V·ªÄ V√íNG [FOR]{"entity": "cpplus_content", "value": "for"} V√íNG [WHILE](CPPLUS_CONTENT) V√Ä V√íNG [DO WHILE]{"entity": "cpplus_content", "value": "do-while"}
    - CHO MINH MOT SO CAC CAI VI DU VE [THAM CHIEU]{"entity": "cpplus_content", "value": "pass-by-reference"} VA [THAM TRI]{"entity": "cpplus_content", "value": "pass-by-value"} DI NE
    - e bot, cho t 1 so vi du ve [comment](cpplus_content) de
    - Vi du ve [Lambda]{"entity": "cpplus_content", "value": "lambda"}
    - DCMM CHO T 1 V√ç D·ª§ V·ªÄ [COMMNET]{"entity": "cpplus_content", "value": "comment"} ƒêI DUMA
    - V√≠ d·ª• v·ªÅ [m·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} v√† [m·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} ƒë√™
    - V√ç D·ª§ V·ªÄ [FLOAT]{"entity": "cpplus_content", "value": "floating-point"}
    - ne bot, vi du ve [Comment]{"entity": "cpplus_content", "value": "comment"} thu
    - √ä, TAO V·∫™N CH∆ØA HI·ªÇU V·ªÄ C√ÅI V√íNG L·∫∂P TRONG C++ L·∫ÆM, CHO TH·ª¨ M·ªòT V√ç D·ª§ V·ªÄ [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} XEM N√ÄO
    - Di vu thu ve kieu [int]{"entity": "cpplus_content", "value": "integer"} xem nao
    - √ä, V√ç D·ª§ V·ªÄ [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}
    - DM CHO BO M VI DU VE [CON TRO]{"entity": "cpplus_content", "value": "pointer"} DI
    - E CHO CAI VI DU VE [ARRAY]{"entity": "cpplus_content", "value": "array"}
    - VI DU VE [LOOPS]{"entity": "cpplus_content", "value": "loop"} TRONG C++ XEM THU NAO
    - Vi du ve [float]{"entity": "cpplus_content", "value": "floating-point"}
    - N√ÄY, V√ç D·ª§ V·ªÄ [BREAK]{"entity": "cpplus_content", "value": "break"} CHO B·ªîN T·ªåA NHANH
    - HAY CHO TOI MOT VAI CAC CAI VI DU VE VONG [FOR]{"entity": "cpplus_content", "value": "for"} VONG [WHILE](CPPLUS_CONTENT) VA VONG [DO WHILE]{"entity": "cpplus_content", "value": "do-while"}
    - vi du ve [toan tu tang]{"entity": "cpplus_content", "value": "increment-operator"}, [toan tu giam]{"entity": "cpplus_content", "value": "decrement-operator"}
    - E, VI DU VE [BIEN]{"entity": "cpplus_content", "value": "variable"}
    - V√≠ d·ª• th·ª≠ cho m√¨nh v·ªÅ [tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} [tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} ƒë√™
    - CHO MINH MOT SO CAC CAI VI DU VE LENH [BREAK]{"entity": "cpplus_content", "value": "break"} VA LENH [CONTINUE](CPPLUS_CONTENT) DI A
    - HAY CHO TOI MOT SO CAC CAI VI DU SIEU HAY CUA BAN VE [THAM CHIEU]{"entity": "cpplus_content", "value": "pass-by-reference"} VA [THAM TRI]{"entity": "cpplus_content", "value": "pass-by-value"} DI
    - Examples v·ªÅ [recursions]{"entity": "cpplus_content", "value": "recursion"}
    - √™ tao v·∫´n ch∆∞a hi·ªÉu v·ªÅ c√°i v√≤ng l·∫∑p trong c++ l·∫Øm cho th·ª≠ m·ªôt v√≠ d·ª• v·ªÅ [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} xem n√†o
    - M·ªòT V√ç D·ª§ D·ªÑ HI·ªÇU NH·∫§T V·ªÄ [H√ÄM N·ªòI TUY·∫æN]{"entity": "cpplus_content", "value": "inline-function"}
    - M·ªôt s·ªë v√≠ d·ª• v·ªÅ [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"}
    - CHO TOI MOT SO VI DU CU THE HON VE [THAM CHIEU]{"entity": "cpplus_content", "value": "pass-by-reference"} DI
    - √™ bot, cho t 1 s·ªë v√≠ d·ª• v·ªÅ [comment](cpplus_content) ƒë√™
    - CHO T√îI M·ªòT V√ç D·ª§ V·ªÄ [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} ƒê∆Ø·ª¢C KH√îNG?
    - cho toi mot so vi du cu the hon ve [tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} di
    - NE BOT, VI DU VE [COMMENT]{"entity": "cpplus_content", "value": "comment"} THU
    - √™ tao ƒëang h∆°i m√¥ng lung v·ªÅ [Tham chi·∫øu h·∫±ng]{"entity": "cpplus_content", "value": "const-reference"}, cho t v√≠ d·ª• v·ªÅ m√≥n n√†y ƒëi
    - m·ªôt v√†i v√≠ d·ª• v·ªÅ [variable](cpplus_content)
    - ƒë√£ ƒë·∫øn l√∫c b·ªë m√†y ph·ªèng v·∫•n m√†y r·ªìi, cho b·ªë m√†y m·ªôt v√≠ d·ª• v·ªÅ [if else]{"entity": "cpplus_content", "value": "if-else"} ƒëi n√†o
    - CHO T√îI 1 S·ªê D√ç D·ª§ Z·ªÄ [VARIABLES]{"entity": "cpplus_content", "value": "variable"} V·ªöI
    - Vi du ve [ham]{"entity": "cpplus_content", "value": "function"}
    - EXAMPLES VE [RECURSIONS]{"entity": "cpplus_content", "value": "recursion"}
    - MEN OIII, CHO TUI VI DU VE [FOR]{"entity": "cpplus_content", "value": "for"} XEM THU NA
    - Th·∫ßy, cho ƒë·ªì ƒë·ªá v√≠ d·ª• v·ªÅ v√≤ng l·∫∑p [While]{"entity": "cpplus_content", "value": "while"} ƒë∆∞·ª£c kh√¥ng ·∫°?
    - V√≠ d·ª• v·ªÅ [Lambda]{"entity": "cpplus_content", "value": "lambda"}
    - MOT SO VI DU CU THE HON VE [TOAN TU DINH PHAM VI]{"entity": "cpplus_content", "value": "scope-resolution-operator"}
    - ƒê√É ƒê·∫æN L√öC B·ªê M√ÄY PH·ªéNG V·∫§N M√ÄY R·ªíI, CHO B·ªê M√ÄY M·ªòT V√ç D·ª§ V·ªÄ [IF ELSE]{"entity": "cpplus_content", "value": "if-else"} ƒêI N√ÄO
    - V√≠ d·ª• v·ªÅ [float]{"entity": "cpplus_content", "value": "floating-point"}
    - e, vi du ve [bien]{"entity": "cpplus_content", "value": "variable"}
    - n√® bot ∆°i, cho tao v√≠ d·ª• v·ªÅ [Operators]{"entity": "cpplus_content", "value": "operator"} ƒëi m√†y
    - V√ç D·ª§ V·ªÄ [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"} V√Ä [M·∫¢NG HAI CHI·ªÄU]{"entity": "cpplus_content", "value": "2d-array"} ƒê√ä
    - M·ªòT V√ÄI V√ç D·ª§ V·ªÄ [TO√ÅN T·ª¨ M·ªòT NG√îI]{"entity": "cpplus_content", "value": "unary-operator"}, [TO√ÅN T·ª¨ HAI NG√îI]{"entity": "cpplus_content", "value": "binary-operator"}, [TO√ÅN T·ª¨ BA NG√îI]{"entity": "cpplus_content", "value": "ternary-operator"}
    - An example of [Lambda]{"entity": "cpplus_content", "value": "lambda"} function ?
    - Hmmm, cho m√¨nh th·ª≠ m·ªôt v√≠ d·ª• v·ªÅ c√¢u [ƒêi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} th·ª≠ xem sao n√®
    - cho t√¥i 1 s·ªë d√≠ d·ª• z·ªÅ [variables]{"entity": "cpplus_content", "value": "variable"} v·ªõi
    - E BOT, CHO T 1 SO VI DU VE [COMMENT]{"entity": "cpplus_content", "value": "comment"} DE
    - mot chiec vi du xinh xan ve [bien tinh]{"entity": "cpplus_content", "value": "static"}
    - H√ÉY CHO IEM M·ªòT S·ªê V√ç D·ª§ V·ªÄ V√íNG [WHILE]{"entity": "cpplus_content", "value": "while"} ƒêI ·∫†
    - H√£y cho t√¥i m·ªôt v√†i c√°c c√°i v√≠ d·ª• v·ªÅ v√≤ng [For]{"entity": "cpplus_content", "value": "for"} v√≤ng [while](cpplus_content) v√† v√≤ng [do while]{"entity": "cpplus_content", "value": "do-while"}
    - A oi, cho e vi du ve vong lap [do while]{"entity": "cpplus_content", "value": "do-while"} di a
    - den gio phong van, vi du ve ham [lamda]{"entity": "cpplus_content", "value": "lambda"} di nao, nhanh
    - ke tao nghe ve mot so vi du ve [comment](cpplus_content) di bot
    - √ä TAO ƒêANG KH√îNG HI·ªÇU R√ï V·ªÄ [TO√ÅN T·ª¨ S·ªê H·ªåC]{"entity": "cpplus_content", "value": "arithmetic-operator"} V√Ä [TO√ÅN T·ª¨ LOGIC]{"entity": "cpplus_content", "value": "logical-operator"}, CHO TAO V√ç D·ª§ V·ªÄ HAI M√ìN ƒê√ì ƒêI
    - √ä TAO ƒêANG H∆†I M√îNG LUNG V·ªÄ [THAM CHI·∫æU H·∫∞NG]{"entity": "cpplus_content", "value": "const-reference"}, CHO T V√ç D·ª§ V·ªÄ M√ìN N√ÄY ƒêI
    - [CLASS]{"entity": "cpplus_content", "value": "class"} VI DU NAO
    - Cho m√¨nh m·ªôt s·ªë c√°c c√°i v√≠ d·ª• v·ªÅ [tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} v√† [tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} ƒëi n√®
    - ƒë·∫øn gi·ªù ph·ªèng v·∫•n, v√≠ d·ª• v·ªÅ h√†m [lamda]{"entity": "cpplus_content", "value": "lambda"} ƒëi n√†o, nhanh
    - V√ç D·ª§ V·ªÄ [LAMBDA]{"entity": "cpplus_content", "value": "lambda"}
- intent: cpplus_why_asking
  examples: |
    - Noi nghe tai sao phai su dung [ham]{"entity": "cpplus_content", "value": "function"} vay bot oi ?
    - n√® bot sao t c·ª© ph·∫£i x√†i [#include]{"entity": "cpplus_content", "value": "include"} m·ªói khi vi·∫øt c++ th·∫ø kh√¥ng x√†i th√¨ sao
    - T·∫°i sao khai b√°o th∆∞ vi·∫πnh∆∞ vi·∫πn vi·∫πn
    - √™ m√†y, t·∫°i sao l·∫°i c·∫ßn c√≥ [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} khi l·∫≠p tr√¨nh?
    - tai sao lai can dung [comma operator]{"entity": "cpplus_content", "value": "comma-operator"} khi lap trinh?
    - t·∫°i sao l·∫°i n√™n x√†i [logical operator]{"entity": "cpplus_content", "value": "logical-operator"}?
    - T·∫†I SAO L·∫†I C√ì DEF V·ªÄ [BI·∫æN C·ª§C B·ªò]{"entity": "cpplus_content", "value": "local-variable"} TH·∫æ
    - v√¨ sao l·∫°i ph·∫£i ƒë·ªÉ c√°i [include](cpplus_content) m·ªói l·∫ßn vi·∫øt code v?
    - T·∫†I SAO TAO TH·∫§Y NG∆Ø·ªúI TA L√öC ƒê·ªäNH NGHƒ®A H√ÄM C√ì X√ÄI C√ÅI T·ª™ [CONST]{"entity": "cpplus_content", "value": "constant"} GHI TR∆Ø·ªöC THAM S·ªê, ƒê√ì L√Ä SAO TH·∫æ M√ÄY?
    - v√¨ sao m√¨nh n√™n d√πng [vector](cpplus_content) h∆°n l√† d√πng m·∫£ng th·∫ø bot?
    - [M·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"}, v√¨ sao d√πng?
    - cho tao m·ªôt l√Ω do v√¨ sao l·∫°i x√†i th√™m ki·ªÉu [wchar-t](cpplus_content) ƒë∆∞·ª£c kh√¥ng bot ngu √≥c c·∫∑c?
    - V√å SAO L·∫†I N√äN X√ÄI H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} KHI VI·∫æT CODE C++ TH·∫æ BOT?
    - v√¨ sao l·∫°i ph·∫£i d√πng [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} khi vi·∫øt code ·∫°
    - V√å SAO TRONG C++ L·∫†I C√ì TH√äM KH√ÅI NI·ªÜM [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} ƒê·ªÇ L√ÄM G√å TH·∫æ M
    - √™ m√†y, sao tao l·∫°i c·∫ßn c√°i l·ªánh [goto](cpplus_content) l√†m g√¨ th·∫ø?
    - b·∫°n c√≥ th·ªÉ k·ªÉ cho t√¥i m·ªôt v√†i l√Ω do v√¨ sao l·∫°i n√™n ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ d√πng ƒë·ªÉ d·∫°y m√¥n nh·∫≠p m√¥n l·∫≠p tr√¨nh cho ƒë·∫°i ƒëa s·ªë c√°c sinh vi√™n c√¥ng ngh·ªá th√¥ng tin hi·ªán nay t·∫°i vi·ªát nam ƒë∆∞·ª£c kh√¥ng?
    - [STRUCT]{"entity": "cpplus_content", "value": "structure"}, L√ù DO G√å C√ì N√ì?
    - m c√≥ l·ªùi bi·ªán h·ªô n√†o cho vi·ªác v√¨ sao l·∫°i ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ tr∆∞·ªõc m√† kh√¥ng ph·∫£i nh·ªØng ng√¥n ng·ªØ kh√°c k?
    - tai sao phai hoc mon [nmlt]{"entity": "cpplus_content", "value": "introduction-to-programming"} the bot
    - t·∫°i sao l·∫°i c√≥ kh√°i ni·ªám [loop](cpplus_content)?
    - Vi sao lai hoc [Bien toan cuc]{"entity": "cpplus_content", "value": "global-variable"}
    - v√¨ sao con ng∆∞·ªùi ta khi code l·∫°i c·∫ßn l·ªánh [continue](cpplus_content)
    - n√® bot, sao nh√† tr∆∞·ªùng l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ d·∫°y m√¨nh h·ªçc v, n√≥ c√≥ ƒëi·ªÉm m·∫°nh g√¨ √†?
    - vi sao lai sinh ra khai niem [global variable]{"entity": "cpplus_content", "value": "global-variable"} the may?
    - sao lai can dung [toan tu phay]{"entity": "cpplus_content", "value": "comma-operator"}?
    - Sao tao ph·∫£i ng·ªìi h·ªçc [To√°n t·ª≠ ba ng√¥i]- t·∫°i sao l·∫°i ph·∫£i h·ªçc [ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"} v, nh√¨n ph·ª©c t·∫°p v√£i loz
    - √ä duma t√≠nh ra tao kh√¥ng hi·ªÉu v√¨ sao m·ªói l·∫ßn vi·∫øt code c++ l√† c·ª© ph·∫£i x√†i c√°i d√≤ng using [namespace](cpplus_content) sau khi vi·∫øt include lu√¥n √°
    - M C√ì L·ªúI BI·ªÜN H·ªò N√ÄO CHO VI·ªÜC V√å SAO L·∫†I PH·∫¢I H·ªåC [c]{"entity": "cpplus_content", "value": "cplusplus"}++ TR∆Ø·ªöC M√Ä KH√îNG PH·∫¢I NH·ªÆNG NG√îN NG·ªÆ KH√ÅC K?
    - Tai sao lai nen dung [Vector]{"entity": "cpplus_content", "value": "vector"} hon la Array?
    - ngo√†i kia c√≥ r·∫•t nhi·ªÅu ng√¥n ng·ªØ l·∫≠p tr√¨nh kh√°c ƒë∆∞·ª£c cho l√† ph·ªï bi·∫øn v√† hot h∆°n nh∆∞ python, js, ruby,... t·∫°i sao m l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ l√†m base ?
    - t·∫°i sao l·∫°i n√™n s·ª≠ d·ª•ng c√°c [h√†m d·ª±ng s·∫µn]{"entity": "cpplus_content", "value": "built-in-function"} v·∫≠y m√†y?
    - v√¨ sao l·∫°i sinh ra th√™m h√†m [lambda](cpplus_content) chi c·ª±c v?
    - why tao ph·∫£i h·ªçc v·ªÅ [Class]{"entity": "cpplus_content", "value": "class"} th·∫ø?
    - N√à M, V√å S M·ªñI L·∫¶N VI·∫æT CODE C++, T L·∫†I PH·∫¢I GHI C√ÅI D√íNG USING [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} CHI CHO C·ª∞C V?
    - tao c√≥ bi·∫øt qua v·ªÅ OOP trong ƒë√≥ c√≥ kh√°i ni·ªám [class](cpplus_content) tao th·∫•y n√≥ kh√° gi·ªëng v·ªõi struct v√¨ sao l·∫°i d√πng n√≥ v·∫≠y bot?
    - n√® bot sao nh√† tr∆∞·ªùng l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ d·∫°y m√¨nh h·ªçc v n√≥ c√≥ ƒëi·ªÉm m·∫°nh g√¨ √†?
    - Sao l√∫c l·∫≠p tr√¨nh th√¨ l·∫°i ph·∫£i x√†i [comment](cpplus_content) l√† chi c·ª±c zayy?
    - Sao tao l·∫°i h·ªçc v·ªÅ [Con tr·ªè]{"entity": "cpplus_content", "value": "pointer"}?
    - V√¨ sao l·∫°i n√™n ph√¢n bi·ªát [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} v√† [bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"} ra chi v?
    - v√¨ sao l·∫°i x√†i [short](cpplus_content) v bot lz qu√®
    - [BI·∫æN C·ª§C B·ªò]{"entity": "cpplus_content", "value": "local-variable"}, V√å SAO H·ªåC?
    - √ä √™ √™, bot ∆°i, sao l·∫°i s·ª≠ d·ª•ng l·ªánh [goto](cpplus_content) v·∫≠y bot?
    - ƒê·ªçc trong s√°ch th·∫•y ng∆∞·ªùi ta b·∫£o m√¨nh n√™n x√†i h√†m [macro](cpplus_content) m·ªói khi vi·∫øt code?
    - t·∫°i sao c√≥ r·∫•t nhi·ªÅu ng√¥n ng·ªØ l·∫≠p tr√¨nh ƒëang hot hi·ªán nay nh∆∞ python javascript R... m√† t l·∫°i ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ tr∆∞·ªõc v bot
    - t·∫°i sao l·∫°i c·∫ßn bi·∫øt v·ªÅ [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"}?
    - n√® m, v√¨ s m·ªói l·∫ßn vi·∫øt code c++, t l·∫°i ph·∫£i ghi c√°i d√≤ng using [namespace](cpplus_content) chi cho c·ª±c v?
    - N√® n√®, v√¨ l√Ω do g√¨ m√† t n√™n h·ªçc [c plus plus]{"entity": "cpplus_content", "value": "cplusplus"} tr∆∞·ªõc?
    - T·∫†I SAO L·∫†I D√ôNG [STRUCT]{"entity": "cpplus_content", "value": "structure"}
    - tai sao phai dung [dau phay]{"entity": "cpplus_content", "value": "comma-operator"} khi lap trinh?
    - Sao lai can xai [toan tu]{"entity": "cpplus_content", "value": "operator"} khi lap trinh
    - D·∫° anh ∆°i, anh c√≥ th·ªÉ cho bi·∫øt v√¨ sao m√¨nh l·∫°i d√πng [tham chi·∫øu h·∫±ng]{"entity": "cpplus_content", "value": "const-reference"} ƒë∆∞·ª£c kh√¥ng ·∫°?
    - [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"}, V√å SAO H·ªåC?
    - O ban c++11, sao nguoi ta lai co them kieu du lieu [auto](cpplus_content) v bot ngu?
    - V√å SAO L·∫†I C√ì KH√ÅI NI·ªÜM [LOCAL VARIABLE]{"entity": "cpplus_content", "value": "local-variable"}
    - TRONG C++ ·∫§Y, N√ì B·∫ÆT M√åNH PH·∫¢I X√ÄI M·∫§Y C√ÅI [LIBS]{"entity": "cpplus_content", "value": "library"} L√Ä V√å SAO V M?
    - √™ m, v√¨ sao l·∫°i ph·∫£i s·ª≠ d·ª•ng [namepsace]{"entity": "cpplus_content", "value": "namespace"} chi
    - e bot oi, m co the giai thich cho tao vi sao co vu [pass by reference]{"entity": "cpplus_content", "value": "pass-by-reference"} duoc k?
    - v√¨ sao mu·ªën vi·∫øt code t·ªët l·∫°i c·∫ßn ph·∫£i h·ªçc [function](cpplus_content) v·∫≠y m√†y?
    - KI·ªÇU [S·ªê TH·ª∞C]{"entity": "cpplus_content", "value": "floating-point"}, SAO L·∫†I PH·∫¢I H·ªåC N√ì?
    - B·∫°n c√≥ th·ªÉ cho t√¥i bi·∫øt v√¨ sao l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ h·ªçc m√¥n nh·∫≠p m√¥n l·∫≠p tr√¨nh ƒë∆∞·ª£c kh√¥ng?
    - ki·ªÉu [character](cpplus_content), v√¨ sao h·ªçc?
    - vi sao nguoi ta lai sinh ra [toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"} lam gi vay?
    - trong l·∫≠p tr√¨nh, v√¨ sao l·∫°i c√≥ kh√°i ni·ªám [flow of control]{"entity": "cpplus_content", "value": "control-flow"} v?
    - SAO TAO L·∫†I H·ªåC V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"}?
    - V√å SAO L·∫†I C·∫¶N H·ªåC V·ªÄ KH√ÅI NI·ªÜM [L·ªöP]{"entity": "cpplus_content", "value": "class"} ƒê·ªêI T∆Ø·ª¢NG TRONG C++
    - C√ì TH·ªÇ CHO T 1 L·ªúI GI·∫¢I TH√çCH V√å SAO L·∫†I PH·∫¢I H·ªåC C√ÅI [c]{"entity": "cpplus_content", "value": "cplusplus"}++ N√ÄY TR∆Ø·ªöC THAY V√å L√Ä NH·ªÆNG NG√îN NG·ªÆ X·ªäN X√í KH√ÅC...
    - tai sao lai can biet ve [con tro]{"entity": "cpplus_content", "value": "pointer"}?
    - √ä M√ÄY, T·∫†I SAO L·∫†I C·∫¶N C√ì [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} KHI L·∫¨P TR√åNH?
    - c√≥ th·ªÉ cho t 1 l·ªùi gi·∫£i th√≠ch v√¨ sao l·∫°i ph·∫£i h·ªçc c√°i [c]{"entity": "cpplus_content", "value": "cplusplus"}++ n√†y tr∆∞·ªõc thay v√¨ l√† nh·ªØng ng√¥n ng·ªØ x·ªãn x√≤ kh√°c...
    - Da anh oi, anh co the cho biet vi sao minh lai dung [tham chieu hang]{"entity": "cpplus_content", "value": "const-reference"} duoc khong a?
    - SAO L·∫†I PH·∫¢I BI·∫æT V·ªÄ KH√ÅI NI·ªÜM [L·ªöP]{"entity": "cpplus_content", "value": "class"} TRONG C++?
    - √ä M, V√å SAO L·∫†I PH·∫¢I S·ª¨ D·ª§NG [NAMEPSACE]{"entity": "cpplus_content", "value": "namespace"} CHI
    - CHO TAO M·ªòT L√ù DO V√å SAO L·∫†I X√ÄI TH√äM KI·ªÇU [WCHAR_T]{"entity": "cpplus_content", "value": "wchar-t"} ƒê∆Ø·ª¢C KH√îNG BOT NGU √ìC C·∫∂C?
    - T·∫†I SAO B√åNH TH∆Ø·ªúNG C√ì KI·ªÇU FLOAT R·ªíI, GI·ªú L·∫†I C√ì TH√äM KI·ªÇU [DOUBLE]{"entity": "cpplus_content", "value": "double"} V·ªöI C√ôNG CH·ª®C NƒÇNG BI·ªÇU ƒê·∫†T ƒê·ªÇ CHI V·∫¨Y?
    - Sao su dung [Vector]{"entity": "cpplus_content", "value": "vector"} lai tot hon dung array the bot?
    - Dm ki·ªÉu [Vector]{"entity": "cpplus_content", "value": "vector"}, sao l·∫°i ph·∫£i h·ªçc?
    - v√¨ sao l·∫°i c√≥ c√°c kh√°i ni·ªám v·ªÅ [truy·ªÅn tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} hay [truy·ªÅn tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} v?
    - T·∫°i sao l·∫°i c·∫ßn c√¢u l·ªánh [break](cpplus_content)
    - SAO L·∫†I C√ì TH√äM N·ªòI DUNG V·ªÄ [LOCAL VARIABLE]{"entity": "cpplus_content", "value": "local-variable"} N·ªÆA V LZ
    - V√¨ sao m√¨nh l·∫°i c·∫ßn h·ªçc [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"} th·∫ø bot
    - v√¨ g√¨ m√† c·∫ßn ph·∫£i x√†i [m·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"}?
    - sao co kieu float roi ma lai co them kieu [double](cpplus_content) chi vay may?
    - KI·ªÇU [CHARACTER]{"entity": "cpplus_content", "value": "character"}, V√å SAO H·ªåC?
    - V√å SAO L·∫†I PH·∫¢I D√ôNG [TH∆Ø VI·ªÜN]{"entity": "cpplus_content", "value": "library"} KHI VI·∫æT CODE ·∫†
    - H√£y cho t 1 v√†i l√Ω do n√™n h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒëi bot ngu
    - ·ªû B·∫¢N C++11, SAO NG∆Ø·ªúI TA L·∫†I C√ì TH√äM KI·ªÇU D·ªÆ LI·ªÜU [AUTO]{"entity": "cpplus_content", "value": "auto"} V BOT NGU?
    - C√≥ nh·∫•t thi·∫øt ph·∫£i hi·ªÉu r√µ [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} hay kh√¥ng
    - T·∫°i sao l·∫°i d√πng [struct]{"entity": "cpplus_content", "value": "structure"}
    - v√¨ sao ng∆∞·ªùi ta l·∫°i sinh ra [to√°n t·ª≠ m·ªôt ng√¥i]{"entity": "cpplus_content", "value": "unary-operator"} l√†m g√¨ v·∫≠y?
    - tao khong hieu sao nguoi ta lai tao ra khai niem [vong lap]{"entity": "cpplus_content", "value": "loop"} de lam gi luon a bot?
    - √™ bot ∆°i, t·∫°i sao trong code, l·∫°i c√≥ kh√°i ni·ªám v·ªÅ [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} v·∫≠y m√†y?
    - √ä T√çNH RA TAO TH·∫§Y NG∆Ø·ªúI TA R·∫¢NH LZ L·∫ÆM LU√îN √Å BOT, T·ª∞ NHI√äN GHI TH√äM C√ÅI T·ª™ [SIGNED]{"entity": "cpplus_content", "value": "signed"} KHI KHAI B√ÅO CHI Z·∫™Y?
    - [ARRAYS]{"entity": "cpplus_content", "value": "array"}, V√å SAO D√ôNG N√ì?
    - sao l·∫°i c√≥ th√™m n·ªôi dung v·ªÅ [local variable]{"entity": "cpplus_content", "value": "local-variable"} n·ªØa v lz
    - [global variable]{"entity": "cpplus_content", "value": "global-variable"}, v√¨ sao h·ªçc???
    - Cho t√¥i l√Ω do v√¨ sao l·∫°i c√≥ ki·ªÉu [Float]{"entity": "cpplus_content", "value": "floating-point"} ƒë∆∞·ª£c kh√¥ng?
    - Cho t 1 l√Ω do v√¨ s l·∫°i c·ª© ph·∫£i x√†i [include](cpplus_content) m·ªói l·∫ßn b·∫Øt ƒë·∫ßu m·ªôt project m·ªõi dc k bot
    - V√å SAO B·ªê M L·∫†I PH·∫¢I S·ª¨ D·ª§NG [LIBS]{"entity": "cpplus_content", "value": "library"} V
    - V√¨ sao m·ªói khi vi·∫øt code l√† ph·∫£i c√≥ c√°i [#include]{"entity": "cpplus_content", "value": "include"} v bot
    - [class](cpplus_content) l√† lz qu√® g√¨ v√† v√¨ sao m√¨nh l·∫°i ph·∫£i c·∫ßn h·ªçc v·ªÅ n√≥ v?
    - Tell me why, t·∫°i sao tui c·∫ßn ph·∫£i h·ªçc c√°i [class](cpplus_content) ch·∫øt ti·ªát ƒë√≥ v·∫≠y
    - Tai sao lai can cau lenh [break](cpplus_content)
    - ƒê√âO HI·ªÇU SAO M√Ä NG∆Ø·ªúI TA L·∫†I SINH RA KI·ªÇU D·ªÆ LI·ªÜU [ARRAY]{"entity": "cpplus_content", "value": "array"} L√ÄM G√å V·∫¨Y BOT?
    - [global variable]{"entity": "cpplus_content", "value": "global-variable"}, vi sao hoc???
    - trong lap trinh, vi sao lai co khai niem [flow of control]{"entity": "cpplus_content", "value": "control-flow"} v?
    - T·∫°i sao ph·∫£i d√πng [m·∫£ng]{"entity": "cpplus_content", "value": "array"}
    - [CLASS]{"entity": "cpplus_content", "value": "class"} L√Ä LZ QU√à G√å V√Ä V√å SAO M√åNH L·∫†I PH·∫¢I C·∫¶N H·ªåC V·ªÄ N√ì V?
    - √ä BOT, T·∫†I SAO T√îI L·∫†I PH·∫¢I D√ôNG [TYPE MODIFER]{"entity": "cpplus_content", "value": "type-modifier"} KHI VI·∫æT CODE TH·∫æ?
    - wtf sao b·ªë m l·∫°i ph·∫£i x√†i [Comment]{"entity": "cpplus_content", "value": "comment"} ch·ª©?
    - √™ duma bot ∆°i, n√£y m√≤ m√≤ tr√™n google tao m·ªõi ph√°t hi·ªán ra l√† m·ªói l·∫ßn khai b√°o bi·∫øn int m√¨nh c≈©ng c√≥ th·ªÉ ghi th√™m ch·ªØ [unsigned](cpplus_content) v√†o n·ªØa ƒë√≥ m, v√¨ sao ng∆∞·ªùi ta th√™m t·ª´ ƒë√≥ v√†o th·∫ø bot?
    - [pointer](cpplus_content), vi sao can biet?
    - T·∫°i sai ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ v·∫≠y
    - t·∫°i sao l·∫°i c·∫ßn d√πng [comma operator]{"entity": "cpplus_content", "value": "comma-operator"} khi l·∫≠p tr√¨nh?
    - t·∫°i sao l·∫°i n√™n h·ªçc th∆∞ vi·ªán [vector](cpplus_content) v? x√†i array l√† ·ªïn r·ªìi m√†?
    - √™ m√†i, v√¨ s ng∆∞·ªùi ta l·∫°i x√†i th√™m c√°i t·ª´ [signed](cpplus_content) m·ªói l·∫ßn khai b√°o bi·∫øn th·∫ø ???
    - v√¨ sao l·∫°i sinh ra kh√°i ni·ªám [global variable]{"entity": "cpplus_content", "value": "global-variable"} th·∫ø m√†y?
    - T·∫°i sao c·∫ßn x√†i [array](cpplus_content)
    - KI·ªÇU [ENUM]{"entity": "cpplus_content", "value": "enumeration"} C√ì CC G√å M√Ä TAO C·∫¶N PH·∫¢I H·ªåC V·ªÄ N√ì?
    - tao ƒë·ªçc s√°ch th·∫•y ng∆∞·ªùi ta b·∫£o n√™n x√†i h√†m [macro](cpplus_content), v√¨ sao th·∫ø?
    - vi sao con nguoi ta lai nen xai [toan tu so sanh]{"entity": "cpplus_content", "value": "comparison-operator"} the?
    - T·∫°i sao ph·∫£i d√πng [vector](cpplus_content)
    - Bot ∆°i bot √†, sao tao l·∫°i c·∫ßn s·ª≠ d·ª•ng [h√†m]{"entity": "cpplus_content", "value": "function"} khi vi·∫øt code th·∫ø bot?
    - Tai sao lai co [kieu ki tu]{"entity": "cpplus_content", "value": "character"} v bot ngu oc cut?
    - Vi sao phai su dung [ham]{"entity": "cpplus_content", "value": "function"}
    - Kieu [so thuc]{"entity": "cpplus_content", "value": "floating-point"}, sao lai phai hoc no?
    - [toan tu phay]{"entity": "cpplus_content", "value": "comma-operator"}, vi sao can no?
    - Vi sao lai nen phan biet [bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"} va [bien toan cuc]{"entity": "cpplus_content", "value": "global-variable"} ra chi v?
    - tai sao co khai niem [if](cpplus_content) trong lap trinh?
    - e may, sao tao lai can cai lenh [goto](cpplus_content) lam gi the?
    - Ki·ªÉu [char]{"entity": "cpplus_content", "value": "character"}, v√¨ sao d√πng?
    - Bot oi bot a, sao tao lai can su dung [ham]{"entity": "cpplus_content", "value": "function"} khi viet code the bot?
    - dkm [comment](cpplus_content) khi code ƒë·ªÉ l√†m c√°i lz g√¨
    - V√¨ sao l·∫°i c√≥ v√≤ng [for](cpplus_content) trog l·∫≠p tr√¨nh?
    - [Bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"}, vi sao hoc?
    - √ä M, T K HI·ªÇU, V√å SAO L·∫†I C·ª® PH·∫¢I X√ÄI [INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI L·∫¶N VI·∫æT CODE C++ TH·∫æ @@
    - V√å SAO L·∫†I PH·∫¢I ƒê·ªÇ C√ÅI [INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI L·∫¶N VI·∫æT CODE V?
    - [STRUCT]{"entity": "cpplus_content", "value": "structure"}, V√å SAO L·∫†I D√ôNG N√ì?
    - tai sao lai co [toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"}?
    - T·∫†I SAO L·∫†I C√ì TH√äM KI·ªÇU [STRING]{"entity": "cpplus_content", "value": "string"} TRONG KHI ƒê√É C√ì M·∫¢NG K√ç T·ª∞ R·ªíI?
    - kieu [character](cpplus_content), vi sao hoc?
    - T·∫°i sao ph·∫£i d√πng [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ?
    - [Con tro]{"entity": "cpplus_content", "value": "pointer"}, vi sao hoc?
    - tao c√≥ bi·∫øt qua v·ªÅ OOP, trong ƒë√≥ c√≥ kh√°i ni·ªám [class](cpplus_content) tao th·∫•y n√≥ kh√° gi·ªëng v·ªõi struct, v√¨ sao l·∫°i d√πng n√≥ v·∫≠y bot?
    - √™, t·∫°i sao l√∫c l·∫≠p tr√¨nh, t l·∫°i n√™n s·ª≠ d·ª•ng [comment](cpplus_content) v bot?
    - T·∫†I SAO PH·∫¢I D√ôNG [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}
    - V√¨ sao l·∫°i h·ªçc [Bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"}
    - √ä DUMA T√çNH RA TAO KH√îNG HI·ªÇU V√å SAO M·ªñI L·∫¶N VI·∫æT CODE C++ L√Ä C·ª® PH·∫¢I X√ÄI C√ÅI D√íNG USING [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} SAU KHI VI·∫æT INCLUDE LU√îN √Å
    - v√¨ sao c√≥ h√†m [lambda](cpplus_content)?
    - CLM T ƒê√âO HI·ªÇU SAO L·∫†I C·∫¶N [INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI L·∫¶N VI·∫æT CODE LU√îN √Å M, GI·∫¢I TH√çCH CHO T V·ªöI
    - V√å SAO L·∫†I N√äN D√ôNG KI·ªÇU [STRING]{"entity": "cpplus_content", "value": "string"} THAY V√å D√ôNG M·ªòT M·∫¢NG C√ÅC K√ç T·ª∞?
    - SAO C√ì TH√äM KI·ªÇU [AUTO]{"entity": "cpplus_content", "value": "auto"} CHI V?
    - v√¨ sao t√¥i l·∫°i n√™n ch·ªçn [cpp]{"entity": "cpplus_content", "value": "cplusplus"} ƒë·ªÉ l√†m ng√¥n ng·ªØ kh·ªüi ƒë·∫ßu vi·ªác h·ªçc l·∫≠p tr√¨nh
    - SAO TAO PH·∫¢I S·ª¨ D·ª§NG [LIBRARY]{"entity": "cpplus_content", "value": "library"} M·ªñI L·∫¶N VI·∫æT CODE TH·∫æ
    - C√ì M·ªòT L√ù DO H·ª¢P L√ù N√ÄO ƒê·ªÇ THUY·∫æT PH·ª§C TAO X√ÄI [TYPE MODIFIERS]{"entity": "cpplus_content", "value": "type-modifier"} M·ªñI L·∫¶N VI·∫æT CODE C++ KH√îNG?
    - vi sao con nguoi ta khi code lai can lenh [continue](cpplus_content)
    - √™ duma t ƒë hi·ªÉu g√¨ v·ªÅ c√°i [include](cpplus_content) lu√¥n √°, t·∫°i sao t l·∫°i ph·∫£i x√†i n√≥ v?
    - √ä BOT, T K HI·ªÇU SAO M·ªñI L·∫¶N VI·∫æT CODE L√Ä L·∫†I C·ª® PH·∫¢I TH√äM C√ÅI [INCLUDE]{"entity": "cpplus_content", "value": "include"} NGAY TR√äN ƒê·∫¶U L√ÄM G√å NH·ªà
    - kieu [float]{"entity": "cpplus_content", "value": "floating-point"} sao lai hoc no
    - T·∫°i sao ng∆∞·ªùi ta l·∫°i x√†i [bi·∫øn tƒ©nh]{"entity": "cpplus_content", "value": "static"} v em iu?
    - tai sao trong c++ ngui ta lai dung khai niem [argument](cpplus_content) the
    - √ä th·∫±ng l·ªìn bot, sao b·ªë m√†y c·∫ßn ph·∫£i x√†i [type modifiers]{"entity": "cpplus_content", "value": "type-modifier"}?
    - Tai sao lai co def ve [bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"} the
    - T·∫†I SAO PH·∫¢I D√ôNG [M·∫¢NG]{"entity": "cpplus_content", "value": "array"}
    - M CHO T M·ªòT L√ù DO V√å S T N√äN H·ªåC [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒê∆Ø·ª¢C K BOT?
    - S b·ªë m l·∫°i b·ªã √©p bu·ªôc ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ tr∆∞·ªõc ti√™n v bot
    - m cho t m·ªôt l√Ω do v√¨ s t n√™n h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë∆∞·ª£c k bot?
    - v√¨ sao l·∫°i x√†i ki·ªÉu [double](cpplus_content)?
    - tao kh√¥ng hi·ªÉu sao ng∆∞·ªùi ta l·∫°i t·∫°o ra kh√°i ni·ªám [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} ƒë·ªÉ l√†m g√¨ lu√¥n √° bot?
    - t·∫°i sao trong l·∫≠p tr√¨nh, ng∆∞·ªùi ta l·∫°i sinh ra kh√°i ni·ªám [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"} v·∫≠y?
    - L√Ω do g√¨ m√† l·∫°i c√≥ [unary operator]{"entity": "cpplus_content", "value": "unary-operator"} th·∫ø?
    - ne bot, m co biet vi sao lai co vu [truyen tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} ko?
    - Tai sao lai dung [con tro]{"entity": "cpplus_content", "value": "pointer"} ?
    - T·∫°i sao khai b√°o [th∆∞ vi·∫πn]{"entity": "cpplus_content", "value": "library"} ?
    - Tai sao lai xai kieu [double](cpplus_content)
    - tai sao lai nen xai [logical operator]{"entity": "cpplus_content", "value": "logical-operator"}?
    - t·∫°i sao trong c++ ng·ª´i ta l·∫°i d√πng kh√°i ni·ªám [argument](cpplus_content) th·∫ø
    - h√£y cho t m·ªôt l√Ω do v√¨ sao l·∫°i n√™n x√†i h√†m [macro](cpplus_content) m·ªói khi vi·∫øt code c ƒë∆∞·ª£c kh√¥ng?
    - t·∫°i v√¨ l√†m sao m√† l·∫°i c√≥ kh√°i ni·ªám [flow controls]{"entity": "cpplus_content", "value": "control-flow"} v bot ∆°i
    - T·∫°i sao l·∫°i d√πng [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} ?
    - SAO L·∫†I C√ì TH√äM BI·∫æN [STATIC]{"entity": "cpplus_content", "value": "static"} ƒê·ªÇ L√ÄM CHI R·ª®A?
    - T·∫†I SAO N√äN H·ªåC [KI·ªÇU CHU·ªñI]{"entity": "cpplus_content", "value": "string"}?
    - Tai sao lai co khai niem [tham so]{"entity": "cpplus_content", "value": "parameter"}
    - t·∫°i sao b·ªë m√†y l·∫°i ph·∫£i x√†i [comment](cpplus_content)???
    - v√¨ sao c·∫ßn d√πng [h·∫±ng s·ªë]{"entity": "cpplus_content", "value": "constant"}?
    - TAO ƒê·ªåC S√ÅCH TH·∫§Y NG∆Ø·ªúI TA B·∫¢O N√äN X√ÄI H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"}, V√å SAO TH·∫æ?
    - Sao tao lai hoc ve [Con tro]{"entity": "cpplus_content", "value": "pointer"}?
    - tai sao trong lap trinh, nguoi ta lai sinh ra khai niem [de quy]{"entity": "cpplus_content", "value": "recursion"} vay?
    - N√≥i nghe t·∫°i sao ph·∫£i s·ª≠ d·ª•ng [h√†m]{"entity": "cpplus_content", "value": "function"} v·∫≠y bot ∆°i ?
    - t·∫°i sao l·∫°i c√≥ kh√°i ni·ªám [Array]{"entity": "cpplus_content", "value": "array"} trong l·∫≠p tr√¨nh v·∫≠y?
    - V√å SAO L·∫†I CH·ªåN [c]{"entity": "cpplus_content", "value": "cplusplus"}++ L√ÄM NG√îN NG·ªÆ BASE?
    - V√¨ sao l·∫°i c·∫ßn h·ªçc v·ªÅ kh√°i ni·ªám [L·ªõp]{"entity": "cpplus_content", "value": "class"} ƒë·ªëi t∆∞·ª£ng trong c++
    - cho t√¥i h·ªèi l√Ω do v√¨ sao ta l·∫°i c·∫ßn x√†i syntax [#include]{"entity": "cpplus_content", "value": "include"} m·ªói khi vi·∫øt code C ƒë∆∞·ª£c kh√¥ng?
    - Ly do gi ma lai co [unary operator]{"entity": "cpplus_content", "value": "unary-operator"} the?
    - D√ôNG [BI·∫æN Tƒ®NH]{"entity": "cpplus_content", "value": "static"} CHI V M
    - T·∫†I SAO L·∫†I X√ÄI KI·ªÇU [DOUBLE]{"entity": "cpplus_content", "value": "double"}
    - Tai sao nguoi ta lai xai [bien tinh]{"entity": "cpplus_content", "value": "static"} v em iu?
    - T·∫°i sao khai b√°o [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"}
    - T·∫†I SAO L·∫†I C√ì KH√ÅI NI·ªÜM [ARRAY]{"entity": "cpplus_content", "value": "array"} TRONG L·∫¨P TR√åNH V·∫¨Y?
    - sao l·∫°i sinh ra th√™m kh√°i ni·ªám [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} l√† shaoooo
    - Tai sao phai dung [vector](cpplus_content)
    - T·∫†I SAO KHAI B√ÅO TH∆Ø VI·∫∏NH∆Ø VI·∫∏N VI·∫∏N
    - Tai sao phai dung [ham]{"entity": "cpplus_content", "value": "function"} vay ta ?
    - Sao tao phai ngoi hoc [Toan tu ba ngoi]- tai sao lai phai hoc [ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"} v, nhin phuc tap vai loz
    - V√¨ sao l·∫°i c√≥ kh√°i ni·ªám [local variable]{"entity": "cpplus_content", "value": "local-variable"}
    - t·∫°i sao l·∫°i c√≥ [to√°n t·ª≠ m·ªôt ng√¥i]{"entity": "cpplus_content", "value": "unary-operator"}?
    - [struct]{"entity": "cpplus_content", "value": "structure"}, v√¨ sao l·∫°i d√πng n√≥?
    - sao nguoi ta lai phat minh them khai niem ve [Bien toan cuc]{"entity": "cpplus_content", "value": "global-variable"} the?
    - CHO T√îI L√ù DO V√å SAO L·∫†I C√ì KI·ªÇU [FLOAT]{"entity": "cpplus_content", "value": "floating-point"} ƒê∆Ø·ª¢C KH√îNG?
    - Vi sao lai co khai niem [local variable]{"entity": "cpplus_content", "value": "local-variable"}
    - ƒê·ª§ M·∫∏ SAO GI·ªú C√íN C√ì TH√äM KI·ªÇU [WCHAR_T]{"entity": "cpplus_content", "value": "wchar-t"} V·∫¨Y BOT, SAO NGTA X√ÄI N√ì CHI Z·∫®Y?
    - m√° ∆°i sao m·ªói l·∫ßn code l√† l·∫°i ph·∫£i [include](cpplus_content) v, dm explain cho t c√°i
    - Gi·∫£i th√≠ch sao l·∫°i c√≥ ki·ªÉu [enum]{"entity": "cpplus_content", "value": "enumeration"} coi bot
    - v√¨ sao trong c++ l·∫°i c√≥ th√™m kh√°i ni·ªám [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} ƒë·ªÉ l√†m g√¨ th·∫ø m
    - Vi sao lai nen dung kieu [string](cpplus_content) thay vi dung mot mang cac ki tu?
    - √ä DUMA T ƒê HI·ªÇU G√å V·ªÄ C√ÅI [INCLUDE]{"entity": "cpplus_content", "value": "include"} LU√îN √Å, T·∫†I SAO T L·∫†I PH·∫¢I X√ÄI N√ì V?
    - KI·ªÇU [CHAR]{"entity": "cpplus_content", "value": "character"}, V√å SAO D√ôNG?
    - vi sao lai co cac khai niem ve [truyen tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} hay [truyen tham tri]{"entity": "cpplus_content", "value": "pass-by-value"} v?
    - v√¨ sao l·∫°i ph·∫£i s·ª≠ d·ª•ng [comment](cpplus_content)
    - Eeeee, v√¨ sao l·∫°i... d√πng h√†m [main]{"entity": "cpplus_content", "value": "main-function"} th·∫ø :))
    - V√å SAO TAO N√äN D√ôNG KI·ªÇU [CHAR]{"entity": "cpplus_content", "value": "character"} TH·∫æ ?
    - v√¨ sao con ng∆∞·ªùi ta l·∫°i n√™n x√†i [to√°n t·ª≠ so s√°nh]{"entity": "cpplus_content", "value": "comparison-operator"} th·∫ø?
    - Cho toi hoi vi sao nguoi ta khuyen nen dung [vector](cpplus_content) hon la dung array?
    - v√¨ sao l·∫°i n√™n d√πng [vector](cpplus_content) h∆°n l√† m·∫£ng?
    - T·∫†I SAO [c]{"entity": "cpplus_content", "value": "cplusplus"}++ L·∫†I L√Ä NG√îN NG·ªÆ KH·ªûI ƒê·∫¶U CON ƒê∆Ø·ªúNG H·ªåC L·∫¨P TR√åNH C·ª¶A T V BOT?
    - T·∫†I SAO L·∫†I C·∫¶N C√ì [VARIABLE]{"entity": "cpplus_content", "value": "variable"} KHI L·∫¨P TR√åNH?
    - T·∫°i sao l·∫°i ph·∫£i h·ªçc [Ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"}
    - ƒê√©o hi·ªÉu sao m√† ng∆∞·ªùi ta l·∫°i sinh ra ki·ªÉu d·ªØ li·ªáu [Array]{"entity": "cpplus_content", "value": "array"} l√†m g√¨ v·∫≠y bot?
    - √™ t√≠nh ra tao th·∫•y ng∆∞·ªùi ta r·∫£nh lz l·∫Øm lu√¥n √° bot, t·ª± nhi√™n ghi th√™m c√°i t·ª´ [signed](cpplus_content) khi khai b√°o chi z·∫´y?
    - Sao l·∫°i c·∫ßn x√†i [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} khi l·∫≠p tr√¨nh
    - E e e, bot oi, sao lai su dung lenh [goto](cpplus_content) vay bot?
    - N√à N√à, V√å L√ù DO G√å M√Ä T N√äN H·ªåC [C PLUS PLUS]{"entity": "cpplus_content", "value": "cplusplus"} TR∆Ø·ªöC?
    - Dm kieu [Vector]{"entity": "cpplus_content", "value": "vector"}, sao lai phai hoc?
    - tai sao lai co khai niem ve [cau truc dieu khien]{"entity": "cpplus_content", "value": "control-flow"} the?
    - √™, t·∫°i sao trong l·∫≠p tr√¨nh l·∫°i n√™n d√πng c√°c [built in functions]{"entity": "cpplus_content", "value": "built-in-function"} th·∫ø bot?
    - v√¨ sao l·∫°i n√™n d√πng [const]{"entity": "cpplus_content", "value": "constant"} khi vi·∫øt code th·∫ø bot
    - √™ dm t k bi·∫øt v√¨ sao t l·∫°i ph·∫£i c·ª© s·ª≠ d·ª•ng c√°i using [namespace](cpplus_content) lu√¥n √° m, gi·∫£i th√≠ch cho t nghe dc k
    - t·∫°i sao ph·∫£i d√πng [d·∫•u ph·∫©y]{"entity": "cpplus_content", "value": "comma-operator"} khi l·∫≠p tr√¨nh?
    - t·∫°i sao ph·∫£i h·ªçc m√¥n [nmlt]{"entity": "cpplus_content", "value": "introduction-to-programming"} th·∫ø bot
    - v√¨ sao l·∫°i n√™n x√†i h√†m [Macro]{"entity": "cpplus_content", "value": "macro"} khi vi·∫øt code c++ th·∫ø bot?
    - V√å SAO L·∫†I N√äN X√ÄI H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"}
    - v√¨ sao l·∫°i ph·∫£i s·ª≠ d·ª•ng [kh√¥ng gian t√™n]{"entity": "cpplus_content", "value": "namespace"}?
    - V√å SAO L·∫†I H·ªåC [BI·∫æN TO√ÄN C·ª§C]{"entity": "cpplus_content", "value": "global-variable"}
    - TELL ME WHY, T·∫†I SAO TUI C·∫¶N PH·∫¢I H·ªåC C√ÅI [CLASS]{"entity": "cpplus_content", "value": "class"} CH·∫æT TI·ªÜT ƒê√ì V·∫¨Y
    - Lon ma, lap trinh da kho roi ma sao nguoi ta con lam them cai [de quy]{"entity": "cpplus_content", "value": "recursion"} chi vay bot oi huhu
    - YO BOT, V√å C√ÅI LZ G√å M√Ä NG∆Ø·ªúI TA L·∫†I CH·ªåN [CPLUSPLUS]{"entity": "cpplus_content", "value": "cplusplus"} ƒê·ªÇ H·ªåC ƒê·∫¶U TI√äN TH·∫æ?
    - [toan tu doi bit]{"entity": "cpplus_content", "value": "shift-operator"}, vi sao dung?
    - √™ bot l√Ω do g√¨ m√† [c]{"entity": "cpplus_content", "value": "cplusplus"}++ l·∫°i ƒë∆∞·ª£c ∆∞u ti√™n ƒë·ªÉ l√†m ng√¥n ng·ªØ l·∫≠p tr√¨nh kh·ªüi ƒë·∫ßu trong gi·∫£ng d·∫°y
    - L·ªìn m√°, l·∫≠p tr√¨nh ƒë√£ kh√≥ r·ªìi m√† sao ng∆∞·ªùi ta c√≤n l√†m th√™m c√°i [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"} chi v·∫≠y bot ∆°i huhu
    - Sao s·ª≠ d·ª•ng [Vector]{"entity": "cpplus_content", "value": "vector"} l·∫°i t·ªët h∆°n d√πng array th·∫ø bot?
    - √ä BOT, TAO ƒê·ªåC TR√äN M·∫†NG TH√å TRONG C++ N√ì C√ì M·ªòT C√ÅI KH√ÅI NI·ªÜM L√Ä [KH√îNG GIAN T√äN]{"entity": "cpplus_content", "value": "namespace"} ·∫§Y, V√å SAO L·∫†I PH·∫¢I C·∫¶N N√ì V M?
    - t·∫°i sao ƒë√£ c√≥ ki·ªÉu array r·ªìi m√† gi·ªù c√≤n c√≥ ki·ªÉu [vector](cpplus_content) n·ªØa v·∫≠y m√†y?
    - v√¨ sao ng∆∞·ªùi ta khuy√™n n√™n d√πng [vector](cpplus_content) h∆°n l√† d√πng array?
    - √™ m, h·ªèi ngu t√≠, sao m√¨nh l·∫°i ph·∫£i x√†i [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} khi l·∫≠p tr√¨nh v·∫≠y?
    - V√¨ sao ph·∫£i s·ª≠ d·ª•ng [h√†m]{"entity": "cpplus_content", "value": "function"}
    - T·∫†I SAO C·∫¶N X√ÄI [ARRAY]{"entity": "cpplus_content", "value": "array"}
    - ·ª¶a x√†i [COMMENT]{"entity": "cpplus_content", "value": "comment"} chi?
    - √™ bot, tao h·ªèi n√†y n√®, t·∫°i sao m√¨nh l·∫°i ph·∫£i s·ª≠ d·ª•ng [variable](cpplus_content) khi vi·∫øt code?
    - tao mu·ªën bi·∫øt l√Ω do v√¨ sao l·∫°i ph·∫£i [include](cpplus_content) m·ªói l·∫ßn vi·∫øt code
    - T·∫°i sao l·∫°i c√≥ [ki·ªÉu k√≠ t·ª±]{"entity": "cpplus_content", "value": "character"} v bot ngu √≥c c·ª©t?
    - V√¨ sao l·∫°i c√≥ kh√°i ni·ªám v·ªÅ [local variable]{"entity": "cpplus_content", "value": "local-variable"} v√† [global variable]{"entity": "cpplus_content", "value": "global-variable"}?
    - tai sao nen hoc [kieu chuoi]{"entity": "cpplus_content", "value": "string"}?
    - Cho t√¥i h·ªèi v√¨ sao ng∆∞·ªùi ta khuy√™n n√™n d√πng [vector](cpplus_content) h∆°n l√† d√πng array?
    - sao lai sinh ra them khai niem [doi so]{"entity": "cpplus_content", "value": "argument"} la shaoooo
    - GI·∫¢I TH√çCH CHO T V√å SAO T N√äN ƒê·∫∂T NI·ªÄM TIN V√ÄO [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒêI BOT
    - vi sao tao nen dung kieu [char]{"entity": "cpplus_content", "value": "character"} the ?
    - V√å SAO L·∫†I SINH RA KH√ÅI NI·ªÜM [GLOBAL VARIABLE]{"entity": "cpplus_content", "value": "global-variable"} TH·∫æ M√ÄY?
    - tai vi lam sao ma lai co khai niem [flow controls]{"entity": "cpplus_content", "value": "control-flow"} v bot oi
    - tao ƒë·ªçc code c·ªßa ng∆∞·ªùi ta th·∫•y c√≥ bi·∫øn c√≥ ch·ª©a th√™m t·ª´ [const]{"entity": "cpplus_content", "value": "constant"} l√† v√¨ sao v·∫≠y m√†y?
    - V√¨ sao l·∫°i n√™n d√πng ki·ªÉu [string](cpplus_content) thay v√¨ d√πng m·ªôt m·∫£ng c√°c k√≠ t·ª±?
    - vi sao lai co khai niem [parameter](cpplus_content)
    - t·∫°i sao t n√™n ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ h·ªçc l·∫≠p tr√¨nh?
    - T·∫°i sao ph·∫£i d√πng [h√†m]{"entity": "cpplus_content", "value": "function"} v·∫≠y ta ?
    - √ä bot, tao kh√¥ng hi·ªÉu v√¨ sao l·∫°i c√≥ kh√°i ni·ªám [truy·ªÅn tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} lu√¥n √°
    - V√å SAO M·ªñI KHI VI·∫æT CODE L√Ä PH·∫¢I C√ì C√ÅI [#INCLUDE]{"entity": "cpplus_content", "value": "include"} V BOT
    - m·ªôt l√Ω do v√¨ sao n√™n d√πng [const]{"entity": "cpplus_content", "value": "constant"} khi khai b√°o bi·∫øn?
    - T·∫†I SAO L·∫†I C·∫¶N BI·∫æT V·ªÄ [CLASS]{"entity": "cpplus_content", "value": "class"} TRONG C++?
    - V√å SAO T√îI L·∫†I N√äN CH·ªåN [CPP]{"entity": "cpplus_content", "value": "cplusplus"} ƒê·ªÇ L√ÄM NG√îN NG·ªÆ KH·ªûI ƒê·∫¶U VI·ªÜC H·ªåC L·∫¨P TR√åNH
    - ƒêum·∫π t·∫°i sao l·∫°i ph·∫£i h·ªçc v·ªÅ [Pointer]{"entity": "cpplus_content", "value": "pointer"}
    - T·∫†I SAO L·∫†I C√ì T·ª™ KH√ìA [UNSIGNED]{"entity": "cpplus_content", "value": "unsigned"} TH·∫æ M?
    - T·∫°i sao l·∫°i c√≥ kh√°i ni·ªám [tham s·ªë]{"entity": "cpplus_content", "value": "parameter"}
    - t·∫°i sao b√¨nh th∆∞·ªùng c√≥ ki·ªÉu float r·ªìi, gi·ªù l·∫°i c√≥ th√™m ki·ªÉu [double](cpplus_content) v·ªõi c√πng ch·ª©c nƒÉng bi·ªÉu ƒë·∫°t ƒë·ªÉ chi v·∫≠y?
    - sao ng∆∞·ªùi ta l·∫°i ph√°t minh th√™m kh√°i ni·ªám v·ªÅ [Bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"} th·∫ø?
    - NGO√ÄI KIA C√ì R·∫§T NHI·ªÄU NG√îN NG·ªÆ L·∫¨P TR√åNH KH√ÅC ƒê∆Ø·ª¢C CHO L√Ä PH·ªî BI·∫æN V√Ä HOT H∆†N NH∆Ø PYTHON, JS, RUBY,... T·∫†I SAO M L·∫†I CH·ªåN [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒê·ªÇ L√ÄM BASE ?
    - v√¨ sao l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ l√†m ng√¥n ng·ªØ base?
    - M√Å ∆†I SAO M·ªñI L·∫¶N CODE L√Ä L·∫†I PH·∫¢I [INCLUDE]{"entity": "cpplus_content", "value": "include"} V, DM EXPLAIN CHO T C√ÅI
    - T·∫°i sao [c]{"entity": "cpplus_content", "value": "cplusplus"}++ l·∫°i l√† ng√¥n ng·ªØ kh·ªüi ƒë·∫ßu con ƒë∆∞·ªùng h·ªçc l·∫≠p tr√¨nh c·ªßa t v bot ∆°i ?
    - v√¨ sao m·ªói l·∫ßn vi·∫øt code l√† ph·∫£i khai b√°o [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} th·∫ø bot
    - [Structure]{"entity": "cpplus_content", "value": "structure"}, v√¨ sao d√πng?
    - t·∫°i sao c√≥ kh√°i ni·ªám [if](cpplus_content) trong l·∫≠p tr√¨nh?
    - SAO L√äN C++ 11 NG∆Ø·ªúI TA C√ì TH√äM KI·ªÇU D·ªÆ LI·ªÜU [AUTO]{"entity": "cpplus_content", "value": "auto"} CHI V·∫¨Y BOT?
    - √™ m√†y, t·∫°i sao l·∫°i n√™n d√πng [h·∫±ng s·ªë]{"entity": "cpplus_content", "value": "constant"}?
    - GI·∫¢I TH√çCH SAO L·∫†I C√ì KI·ªÇU [ENUM]{"entity": "cpplus_content", "value": "enumeration"} COI BOT
    - E may, sao trong lap trinh, nguoi ta lai sinh ra khai niem [toan tu]{"entity": "cpplus_content", "value": "operator"} de lam gi vay
    - Ki·ªÉu [s·ªë th·ª±c]{"entity": "cpplus_content", "value": "floating-point"}, sao l·∫°i ph·∫£i h·ªçc n√≥?
    - t·∫°i sao ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++?
    - v√¨ sao tao n√™n d√πng ki·ªÉu [char]{"entity": "cpplus_content", "value": "character"} th·∫ø ?
    - tai sao gio con co them khai niem [union](cpplus_content) v?
    - v√¨ sao t√¥i ƒë∆∞·ª£c khuy√™n n√™n d√πng [vector](cpplus_content) h∆°n l√† d√πng array?
    - bot ∆°i bot ∆°i, t·∫°i sao l·∫°i c·∫ßn h·ªçc [function](cpplus_content) ƒë·ªÉ vi·∫øt code cho ngon th·∫ø
    - H√ÉY CHO T M·ªòT L√ù DO V√å SAO L·∫†I N√äN X√ÄI H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} M·ªñI KHI VI·∫æT CODE C ƒê∆Ø·ª¢C KH√îNG?
    - V√¨ sao b·ªë m l·∫°i ph·∫£i s·ª≠ d·ª•ng [libs]{"entity": "cpplus_content", "value": "library"} v
    - tai sao lai co [toan tu hai ngoi]{"entity": "cpplus_content", "value": "binary-operator"} tai sao lai phai hoc [ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"} the?
    - H√ÉY CHO T 1 V√ÄI L√ù DO N√äN H·ªåC [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒêI BOT NGU
    - √ä M√ÄY, T·∫†I SAO L·∫†I N√äN D√ôNG [H·∫∞NG S·ªê]{"entity": "cpplus_content", "value": "constant"}?
    - [GLOBAL VARIABLE]{"entity": "cpplus_content", "value": "global-variable"}, V√å SAO H·ªåC???
    - T·∫†I SAO GI·ªú C√íN C√ì TH√äM KH√ÅI NI·ªÜM [UNION]{"entity": "cpplus_content", "value": "union"} V?
    - ƒêUM·∫∏ T·∫†I SAO L·∫†I PH·∫¢I H·ªåC V·ªÄ [POINTER]{"entity": "cpplus_content", "value": "pointer"}
    - [to√°n t·ª≠ ph·∫©y]{"entity": "cpplus_content", "value": "comma-operator"}, v√¨ sao c·∫ßn n√≥?
    - V√å G√å M√Ä C·∫¶N PH·∫¢I X√ÄI [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"}?
    - L√Ω do g√¨ m√† t l·∫°i ph·∫£i h·ªçc [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"} ?
    - V√¨ sao ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++?
    - T·∫†I SAO M L·∫†I CH·ªåN [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒê·ªÇ H·ªåC NH·∫¨P M√îN L·∫¨P TR√åNH?
    - v√¨ s t l·∫°i ph·∫£i h·ªçc c√°i m√¥n [nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"} x√†m lz v
    - h√£y cho t 1 v√†i l√Ω do n√™n h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒëi bot ngu
    - v√¨ sao ph·∫£i h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++?
    - t·∫°i sao l·∫°i c·∫ßn c√≥ [variable](cpplus_content) khi l·∫≠p tr√¨nh?
    - Clm t ƒë√©o hi·ªÉu sao l·∫°i c·∫ßn [Include]{"entity": "cpplus_content", "value": "include"} m·ªói l·∫ßn vi·∫øt code lu√¥n √° m, gi·∫£i th√≠ch cho t v·ªõi
    - Kh√¥ng c·∫ßn hi·ªÉu [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} c√≥ h·ªçc t·ªët nh·∫≠p m√¥n l·∫≠p tr√¨nh ƒë∆∞·ª£c kh√¥ng
    - Sao l·∫°i ph·∫£i bi·∫øt v·ªÅ kh√°i ni·ªám [l·ªõp]{"entity": "cpplus_content", "value": "class"} trong c++?
    - V√¨ sao l·∫°i c√≥ th√™m t·ª´ kh√≥a [const]{"entity": "cpplus_content", "value": "constant"} khi khai b√°o bi·∫øn th·∫ø bot ?
    - v√¨ sao t l·∫°i ph·∫£i x√†i c√°i t·ª´ [include](cpplus_content) th·∫ø bot
    - t·∫°i sao l·∫°i c·∫ßn bi·∫øt v·ªÅ [class](cpplus_content) trong c++?
    - [POINTER]{"entity": "cpplus_content", "value": "pointer"}, V√å SAO C·∫¶N BI·∫æT?
    - M√° ∆°i sao m·ªói l·∫ßn code l√† l·∫°i ph·∫£i [INCLUDE]{"entity": "cpplus_content", "value": "include"} v, dm explain cho t c√°i
    - SAO L·∫†I C√ì KH√ÅI NI·ªÜM [ARRAY]{"entity": "cpplus_content", "value": "array"}?
    - N√à BOT, SAO NH√Ä TR∆Ø·ªúNG L·∫†I CH·ªåN [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒê·ªÇ D·∫†Y M√åNH H·ªåC V, N√ì C√ì ƒêI·ªÇM M·∫†NH G√å √Ä?
    - T·∫°i sao l·∫°i c√≥ def v·ªÅ [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} th·∫ø
    - e, tai sao trong lap trinh lai nen dung cac [built in functions]{"entity": "cpplus_content", "value": "built-in-function"} the bot?
    - √ä m√†y, sao trong l·∫≠p tr√¨nh, ng∆∞·ªùi ta l·∫°i sinh ra kh√°i ni·ªám [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} ƒë·ªÉ l√†m g√¨ v·∫≠y
    - clm t ƒë√©o hi·ªÉu sao l·∫°i c·∫ßn [include](cpplus_content) m·ªói l·∫ßn vi·∫øt code lu√¥n √° m, gi·∫£i th√≠ch cho t v·ªõi
    - ƒë·ª• m·∫π sao gi·ªù c√≤n c√≥ th√™m ki·ªÉu [wchar-t](cpplus_content) v·∫≠y bot, sao ngta x√†i n√≥ chi z·∫©y?
    - Vi sao minh lai can hoc [NMLT]{"entity": "cpplus_content", "value": "introduction-to-programming"} the bot
    - v√¨ sao tml m l·∫°i ch·ªçn [cpp]{"entity": "cpplus_content", "value": "cplusplus"} ƒë·ªÉ d·∫°y m√¥n nh·∫≠p m√¥n v ?
    - Tai sao khai bao [thu vien]{"entity": "cpplus_content", "value": "library"} ?
    - TAO MU·ªêN BI·∫æT L√ù DO V√å SAO L·∫†I PH·∫¢I [INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI L·∫¶N VI·∫æT CODE
    - [struct]{"entity": "cpplus_content", "value": "structure"}, l√Ω do g√¨ c√≥ n√≥?
    - vi sao lai xai kieu [double](cpplus_content)?
    - tai sao da co kieu array roi ma gio con co kieu [vector](cpplus_content) nua vay may?
    - [Operator]{"entity": "cpplus_content", "value": "operator"} trong lap trinh dung de lam cai veo gi?
    - tai sao lai co them kieu [String]{"entity": "cpplus_content", "value": "string"} trong khi da co mang ki tu roi?
    - Cho toi ly do vi sao lai co kieu [Float]{"entity": "cpplus_content", "value": "floating-point"} duoc khong?
    - n√†y bot, sao ng∆∞·ªùi ta khuy√™n tao l√†, khi l·∫≠p tr√¨nh th√¨ n√™n s·ª≠ d·ª•ng [comment](cpplus_content)?
    - √ä m, t k hi·ªÉu, v√¨ sao l·∫°i c·ª© ph·∫£i x√†i [include](cpplus_content) m·ªói l·∫ßn vi·∫øt code c++ th·∫ø @@
    - Cho m√¨nh h·ªèi l√Ω do n√™n chuy·ªÉn sang d√πng [vector](cpplus_content) thay v√¨ d√πng m·∫£ng nh∆∞ b√¨nh th∆∞·ªùng?
    - Anh ∆°i anh, anh cho em bi·∫øt v√¨ sao l·∫°i d√πng [constant reference]{"entity": "cpplus_content", "value": "const-reference"} ƒëc kh√¥ng ·∫°?
    - Sao tao ph·∫£i s·ª≠ d·ª•ng [library](cpplus_content) m·ªói l·∫ßn vi·∫øt code th·∫ø
    - vi sao co ham [lambda](cpplus_content)?
    - gi·∫£i th√≠ch cho t v√¨ sao t n√™n ƒë·∫∑t ni·ªÅm tin v√†o [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒëi bot
    - TAO ƒê·ªåC CODE C·ª¶A NG∆Ø·ªúI TA TH·∫§Y C√ì BI·∫æN C√ì CH·ª®A TH√äM T·ª™ [CONST]{"entity": "cpplus_content", "value": "constant"} L√Ä V√å SAO V·∫¨Y M√ÄY?
    - vi sao lai can phai su dung [toan tu dinh pham vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"} ?
    - √™ bot, t·∫°i sao t√¥i l·∫°i ph·∫£i d√πng [type modifer]{"entity": "cpplus_content", "value": "type-modifier"} khi vi·∫øt code th·∫ø?
    - N√à M√ÄY, C√ì TH·ªÇ N√ÄO N√ìI CHO TAO BI·∫æT L√ù DO V√å SAO L·∫†I N√äN X√ÄI [MACRO]{"entity": "cpplus_content", "value": "macro"} KH√îNG ?
    - Dume tai sao lai phai hoc ve [Pointer]{"entity": "cpplus_content", "value": "pointer"}
    - [Operator]{"entity": "cpplus_content", "value": "operator"} trong l·∫≠p tr√¨nh d√πng ƒë·ªÉ l√†m c√°i v·∫πo g√¨?
    - c√≥ m·ªôt l√Ω do h·ª£p l√Ω n√†o ƒë·ªÉ thuy·∫øt ph·ª•c tao x√†i [type modifiers]{"entity": "cpplus_content", "value": "type-modifier"} m·ªói l·∫ßn vi·∫øt code c++ kh√¥ng?
    - tai sao lai can [toan tu dinh pham vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"}?
    - V√å SAO L·∫†I C√ì TH√äM T·ª™ KH√ìA [CONST]{"entity": "cpplus_content", "value": "constant"} KHI KHAI B√ÅO BI·∫æN TH·∫æ BOT ?
    - tai sao lai nen su dung cac [ham dung san]{"entity": "cpplus_content", "value": "built-in-function"} vay may?
    - yo wtf, sao l·∫°i ph·∫£i x√†i [long](cpplus_content) n·ªØa zay
    - N√à BOT, SAO T C·ª® PH·∫¢I X√ÄI [#INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI KHI VI·∫æT C++ TH·∫æ, KH√îNG X√ÄI TH√å SAO
    - √ä M√ÄI, V√å S NG∆Ø·ªúI TA L·∫†I X√ÄI TH√äM C√ÅI T·ª™ [SIGNED]{"entity": "cpplus_content", "value": "signed"} M·ªñI L·∫¶N KHAI B√ÅO BI·∫æN TH·∫æ ???
    - E bot, tao khong hieu vi sao lai co khai niem [truyen tham tri]{"entity": "cpplus_content", "value": "pass-by-value"} luon a
    - V√å SAO C·∫¶N D√ôNG [H·∫∞NG S·ªê]{"entity": "cpplus_content", "value": "constant"}?
    - CHO T√îI H·ªéI L√ù DO V√å SAO TA L·∫†I C·∫¶N X√ÄI SYNTAX [#INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI KHI VI·∫æT CODE C ƒê∆Ø·ª¢C KH√îNG?
    - v√¨ sao l·∫°i n√™n x√†i h√†m [macro](cpplus_content)
    - t·∫°i sao m l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ h·ªçc nh·∫≠p m√¥n l·∫≠p tr√¨nh?
    - Bot oi tai sao lai phai biet dung [recursion](cpplus_content) vay bot
    - V√å SAO M·ªñI L·∫¶N VI·∫æT CODE L√Ä PH·∫¢I KHAI B√ÅO [TH∆Ø VI·ªÜN]{"entity": "cpplus_content", "value": "library"} TH·∫æ BOT
    - √ä BOT, TAO H·ªéI N√ÄY N√à, T·∫†I SAO M√åNH L·∫†I PH·∫¢I S·ª¨ D·ª§NG [VARIABLE]{"entity": "cpplus_content", "value": "variable"} KHI VI·∫æT CODE?
    - V√å SAO T L·∫†I PH·∫¢I X√ÄI C√ÅI T·ª™ [INCLUDE]{"entity": "cpplus_content", "value": "include"} TH·∫æ BOT
    - trong c++ ·∫•y, n√≥ b·∫Øt m√¨nh ph·∫£i x√†i m·∫•y c√°i [libs]{"entity": "cpplus_content", "value": "library"} l√† v√¨ sao v m?
    - √™ m, t k hi·ªÉu, v√¨ sao l·∫°i c·ª© ph·∫£i x√†i [include](cpplus_content) m·ªói l·∫ßn vi·∫øt code c++ th·∫ø @@
    - b·∫°n c√≥ th·ªÉ cho t√¥i bi·∫øt v√¨ sao l·∫°i ch·ªçn [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë·ªÉ h·ªçc m√¥n nh·∫≠p m√¥n l·∫≠p tr√¨nh ƒë∆∞·ª£c kh√¥ng?
    - sao c√≥ ki·ªÉu float r·ªìi m√† l·∫°i c√≥ th√™m ki·ªÉu [double](cpplus_content) chi v·∫≠y m√†y?
    - e bot oi, tai sao trong code, lai co khai niem ve [vong lap]{"entity": "cpplus_content", "value": "loop"} vay may?
    - sao l·∫°i c√≥ th√™m bi·∫øn [static](cpplus_content) ƒë·ªÉ l√†m chi r·ª©a?
    - [pointer](cpplus_content), v√¨ sao c·∫ßn bi·∫øt?
    - CHO T 1 L√ù DO V√å S L·∫†I C·ª® PH·∫¢I X√ÄI [INCLUDE]{"entity": "cpplus_content", "value": "include"} M·ªñI L·∫¶N B·∫ÆT ƒê·∫¶U M·ªòT PROJECT M·ªöI DC K BOT
    - √ä M, H·ªéI NGU T√ç, SAO M√åNH L·∫†I PH·∫¢I X√ÄI [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} KHI L·∫¨P TR√åNH V·∫¨Y?
    - [Library]{"entity": "cpplus_content", "value": "library"} l√† c√°i cc g√¨ m√† t·∫°i s t l·∫°i ph·∫£i s·ª≠ d·ª•ng n√≥
    - vi s t lai phai hoc cai mon [nhap mon lap trinh]{"entity": "cpplus_content", "value": "introduction-to-programming"} xam lz v
    - t·∫°i sao l·∫°i c·∫ßn h·ªçc [inline functions]{"entity": "cpplus_content", "value": "inline-function"}?
    - kieu du lieu [Double]{"entity": "cpplus_content", "value": "double"}, vi sao lai xai?
    - √ä DUMA BOT ∆†I, N√ÉY M√í M√í TR√äN GOOGLE TAO M·ªöI PH√ÅT HI·ªÜN RA L√Ä M·ªñI L·∫¶N KHAI B√ÅO BI·∫æN INT M√åNH C≈®NG C√ì TH·ªÇ GHI TH√äM CH·ªÆ [UNSIGNED]{"entity": "cpplus_content", "value": "unsigned"} V√ÄO N·ªÆA ƒê√ì M, V√å SAO NG∆Ø·ªúI TA TH√äM T·ª™ ƒê√ì V√ÄO TH·∫æ BOT?
    - √™ bot ∆°i, m c√≥ th·ªÉ gi·∫£i th√≠ch cho tao v√¨ sao c√≥ v·ª• [pass by reference]{"entity": "cpplus_content", "value": "pass-by-reference"} ƒë∆∞·ª£c k?
    - M·ªòT L√ù DO V√å SAO N√äN D√ôNG [CONST]{"entity": "cpplus_content", "value": "constant"} KHI KHAI B√ÅO BI·∫æN?
    - SAO NG∆Ø·ªúI TA L·∫†I PH√ÅT MINH TH√äM KH√ÅI NI·ªÜM V·ªÄ [BI·∫æN TO√ÄN C·ª§C]{"entity": "cpplus_content", "value": "global-variable"} TH·∫æ?
    - vi sao lai sinh ra them ham [lambda](cpplus_content) chi cuc v?
    - T·∫°i sao ph·∫£i d√πng [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}
    - M cho t m·ªôt l√Ω do v√¨ s t n√™n h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ƒë∆∞·ª£c k bot?
    - T·∫†I SAO L·∫†I C·∫¶N BI·∫æT V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"}?
    - T·∫°i sao l·∫°i h·ªçc [chu·ªói]{"entity": "cpplus_content", "value": "string"}
    - bot oi bot oi, tai sao lai can hoc [function](cpplus_content) de viet code cho ngon the
    - t·∫°i sao l·∫°i c√≥ kh√°i ni·ªám v·ªÅ [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} v·∫≠y m?
    - sao trong c++ c√≤n c√≥ th√™m bi·∫øn [static](cpplus_content) v·∫≠y? v√¨ sao x√†i n√≥ th·∫ø?
    - vi sao lai nen hoc [Binary operator]{"entity": "cpplus_content", "value": "binary-operator"}?
    - Eeeee, vi sao lai... dung ham [main]{"entity": "cpplus_content", "value": "main-function"} the :))
    - T·∫†I SAO L·∫†I C√ì KH√ÅI NI·ªÜM V·ªÄ [BI·∫æN C·ª§C B·ªò]{"entity": "cpplus_content", "value": "local-variable"} V·∫¨Y M, KH√ÅI NI·ªÜM V·ªÄ BI·∫æN CH∆ØA ƒê·ª¶ H·∫¢?
    - T·∫°i sao tao th·∫•y ng∆∞·ªùi ta l√∫c ƒë·ªãnh nghƒ©a h√†m c√≥ x√†i c√°i t·ª´ [const]{"entity": "cpplus_content", "value": "constant"} ghi tr∆∞·ªõc tham s·ªë, ƒë√≥ l√† sao th·∫ø m√†y?
    - V√å SAO L·∫†I N√äN D√ôNG [CONST]{"entity": "cpplus_content", "value": "constant"} KHI VI·∫æT CODE TH·∫æ BOT
    - V√å SAO L·∫†I X√ÄI KI·ªÇU [DOUBLE]{"entity": "cpplus_content", "value": "double"}?
    - sao l√™n c++ 11 ng∆∞·ªùi ta c√≥ th√™m ki·ªÉu d·ªØ li·ªáu [auto](cpplus_content) chi v·∫≠y bot?
    - C√ì M·ªòT KH√ÅI NI·ªÜM KH√Å GI·ªêNG V·ªöI STRUCT ƒê√ì L√Ä [CLASS]{"entity": "cpplus_content", "value": "class"}, V√å SAO L·∫†I C√ì N√ì V·∫¨Y M?
    - n√® bot, m c√≥ bi·∫øt v√¨ sao l·∫°i c√≥ v·ª• [truy·ªÅn tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} ko?
    - t·∫°i sao l·∫°i c·∫ßn [to√°n t·ª≠ ƒë·ªãnh ph·∫°m vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"}?
    - √ä BOT, SAO NG∆Ø·ªúI TA KHUY√äN L√Ä N·∫æU MU·ªêN VI·∫æT CODE HAY TH√å PH·∫¢I D√ôNG [TYPE MODIFIER]{"entity": "cpplus_content", "value": "type-modifier"} CHO T·ªêT ZAY?
    - vi sao toi duoc khuyen nen dung [vector](cpplus_content) hon la dung array?
    - tai sao lai can hoc [inline functions]{"entity": "cpplus_content", "value": "inline-function"}?
- intent: cpplus_how_asking
  examples: |
    - L√ÄM TH·∫æ QU√ÅI N√ÄO ƒê·ªÇ T·∫†O RA M·ªòT C√ÇU [ƒêI·ªÄU KI·ªÜN]{"entity": "cpplus_content", "value": "if"} B√ÇY GI·ªú?
    - Chi bo m cach tao ra mot vong [For]{"entity": "cpplus_content", "value": "for"} di
    - [recursion](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [ternary-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - cach tai [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - N√® ku l√†m s ƒë·ªÉ t t·∫°o ra 1 bi·∫øn ki·ªÉu [short](cpplus_content) ƒë√¢y?
    - De dung dc kieu [string](cpplus_content) can phai lam nhu the nao?
    - [M·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [constant](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [M·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} ƒëc vi·∫øt ntn trong c++ ƒë√¢y botchat
    - [array](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - dung [struct]{"entity": "cpplus_content", "value": "structure"} trong cpp kieu gi the?
    - [Bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [do while]{"entity": "cpplus_content", "value": "do-while"} dc viet ra lam sao the?
    - Cu phap cua [signed](cpplus_content) la gi
    - L√†m s ƒë·ªÉ implement [1D Array]{"entity": "cpplus_content", "value": "array"} trong C++ th·∫ø?
    - C√∫ ph√°p c·ªßa [lambda](cpplus_content) l√† g√¨
    - S·ª≠ d·ª•ng c√°c n√†o ƒë·ªÉ c√≥ th·ªÉ khai b√°o m·ªôt [Variable]{"entity": "cpplus_content", "value": "variable"} v·∫≠y?
    - [Bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√ÄM TH·∫æ N√ÄO ƒê·ªÇ T·∫†O RA ƒê∆Ø·ª¢C [ARRAY]{"entity": "cpplus_content", "value": "array"} V?
    - C√°ch n√†o ƒë·ªÉ t·∫°o m·ªôt [struct]{"entity": "cpplus_content", "value": "structure"} v·∫≠y ?
    - l√†m sao t√¥i c√≥ th·ªÉ khai b√°o m·ªôt [M·∫£ng]{"entity": "cpplus_content", "value": "array"} ƒë∆∞·ª£c ?
    - C√∫ ph√°p c·ªßa [const-reference](cpplus_content) l√† g√¨
    - ch·ªâ m√¨nh c√°ch vi·∫øt m·ªôt c√¢u [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} ƒëi b·∫°n hi·ªÅn
    - gi·ªù tao mu·ªën declare m·ªôt c√°i [If]{"entity": "cpplus_content", "value": "if"} th√¨ ph·∫£i l√†m s?
    - N√†m thao ƒë·ªÉ tao d√πng bi·∫øn ki·ªÉu [signed](cpplus_content) ƒë√¢y bot ngu?
    - Lam s de su dung cai [type modifer]{"entity": "cpplus_content", "value": "type-modifier"} trong cpp the ?
    - Lam s de su dung tinh nang [typedef](cpplus_content) ?
    - HOW CAN I EVEN USE [TWO DIMENSIONAL ARRAY]{"entity": "cpplus_content", "value": "2d-array"} IN CPP?
    - [enumeration](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√ÄM SAO ƒê·ªÇ M√åNH C√ì TH·ªÇ S·ª¨ D·ª§NG ƒê∆Ø·ª¢C [BREAK]{"entity": "cpplus_content", "value": "break"}?
    - l√†m th·∫ø n√†o ƒë·ªÉ c√≥ th·ªÉ vi·∫øt dc t·ª´ kh√≥a [break](cpplus_content) v√† [continue](cpplus_content) th·∫ø bot?
    - C√∫ ph√°p c·ªßa [character](cpplus_content) l√† g√¨
    - C√∫ ph√°p [return-type](cpplus_content)
    - D√πng c√°ch n√†o ƒë·ªÉ vi·∫øt [macro](cpplus_content) trong c++ th·∫ø bot?
    - Ki·ªÉu [bool]{"entity": "cpplus_content", "value": "boolean"} d√πng th·∫ø qu√°i n√†o v bot?
    - [unsigned](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [break](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [continue](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - √™ bot ∆°i gi·ªù b·ªë m mu·ªën d√πng c√°i [to√°n t·ª≠ --]{"entity": "cpplus_content", "value": "decrement-operator"} th√¨ l√†m ki·ªÉu g√¨ th·∫ø bot?
    - C√∫ ph√°p c·ªßa [switch](cpplus_content) l√† g√¨
    - CH·ªà B·ªê M C√ÅCH VI·∫æT M·ªòT [LOOP]{"entity": "cpplus_content", "value": "loop"} COI
    - Gi·ªù b·∫Øt ƒë·∫ßu h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ t·ª´ ƒë√¢u ƒë√¢y Bot?
    - 1 syntax [switch](cpplus_content) case o c++ dc viet nhu the nao v bot?
    - [unsigned](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [bien tinh]{"entity": "cpplus_content", "value": "static"} dc khai bao ra sao?
    - [Ki·ªÉu chu·ªói]{"entity": "cpplus_content", "value": "string"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Chi t cach su dung tu khoa [continue](cpplus_content) di
    - NTN ƒê·ªÇ C√ì TH·ªÇ VI·∫æT 1 H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} ?
    - √™ l√†m sao ƒë·ªÉ t t·∫°o th√™m 1 m·ªôt [array](cpplus_content) ƒë√¢y?
    - [reference variable]{"entity": "cpplus_content", "value": "reference-variable"} dc t·∫°o ra trong c++ nh∆∞ th·∫ø n√†o v bot?
    - C√∫ ph√°p c·ªßa [address_of-operator](cpplus_content) l√† g√¨
    - D√ôNG [CLASS]{"entity": "cpplus_content", "value": "class"} NH∆Ø TH·∫æ N√ÄO?
    - L√ÄM S ƒê·ªÇ IMPLEMENT [1D ARRAY]{"entity": "cpplus_content", "value": "array"} TRONG C++ TH·∫æ?
    - c√≥ c√°ch n√†o ƒë·ªÉ t√¥i khai b√°o m·ªôt [Th∆∞ Vi·ªán]{"entity": "cpplus_content", "value": "library"} kh√¥ng
    - C√∫ ph√°p [pass-by-value](cpplus_content)
    - cach dung [do while]{"entity": "cpplus_content", "value": "do-while"} trong c++
    - Lam s de t implement duoc mot vong [while](cpplus_content) day?
    - Lam cach nao de tao khai bao mot bien [kieu so thuc]{"entity": "cpplus_content", "value": "floating-point"} the?
    - Ok lam s de tao 1 bien kieu [short](cpplus_content) ?
    - [To√°n t·ª≠ hai ng√¥i]{"entity": "cpplus_content", "value": "binary-operator"} dc tri·ªÉn khai ra l√†m sao th·∫ø h·∫£ bot?
    - [toan tu]{"entity": "cpplus_content", "value": "operator"} thi viet trong code nhu the nao v bot?
    - [floating-point](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Cu phap cua [comment](cpplus_content) la gi
    - lam s de tao ra duoc mot vong [do while]{"entity": "cpplus_content", "value": "do-while"} day ta
    - Nam thao de tao dung bien kieu [signed](cpplus_content) day bot ngu?
    - Dung cach nao de viet [macro](cpplus_content) trong c++ the bot?
    - L√ÄM S ƒê·ªÇ S·ª¨ D·ª§NG T√çNH NƒÇNG [TYPEDEF]{"entity": "cpplus_content", "value": "typedef"} ?
    - [Ma tr·∫≠n]{"entity": "cpplus_content", "value": "2d-array"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [if](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [if else]{"entity": "cpplus_content", "value": "if-else"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - E ku lam s de tao dc mot bien kieu [long](cpplus_content) the
    - CH·ªà TUI C√ÅCH T·∫†O M·ªòT [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} V·ªöI B·∫†N
    - C√∫ ph√°p [pass-by-reference](cpplus_content)
    - C√∫ ph√°p [binary-operator](cpplus_content)
    - [comparison-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [const-reference](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√ÄM TH·∫æ N√ÄO ƒê·ªÇ TRI·ªÇN KHAI 1 [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} ·ªû C++ TH·∫æ BOT?
    - CH·ªà IEM C√ÅCH VI·∫æT M·ªòT [LOOP]{"entity": "cpplus_content", "value": "loop"} V·ªöI
    - [if-else](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [character](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√†m th·∫ø n√†o ƒë·ªÉ t·∫°o ra ƒë∆∞·ª£c [Array]{"entity": "cpplus_content", "value": "array"} v?
    - cach su dung [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - c√°ch g·ªçi [h√†m]{"entity": "cpplus_content", "value": "function"}
    - [auto](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - c√°ch n√†o ƒë·ªÉ t t·∫°o ra m·ªôt v√≤ng [While]{"entity": "cpplus_content", "value": "while"} v m
    - [dereference-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [do-while](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√†m c√°ch n√†o ƒë·ªÉ ta c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c m·ªôt [namespace](cpplus_content) trong C++?
    - [comment](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - CACH VIET [SWITCH]{"entity": "cpplus_content", "value": "switch"} CASE
    - C√ÅI [CONST]{"entity": "cpplus_content", "value": "constant"} ƒê∆ØA V√ÄO CODE TH√å IMPLEMENT L√ÄM S ·∫§Y NH·ªà?
    - [decrement-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - NTN ƒê·ªÇ RA DC [CLASS]{"entity": "cpplus_content", "value": "class"} TRONG C++ TH·∫æ?
    - [increment operator]{"entity": "cpplus_content", "value": "increment-operator"} dc vi·∫øt th·∫ø n√†o v bot?
    - C√∫ ph√°p c·ªßa [control-flow](cpplus_content) l√† g√¨
    - L√ÄM TH·∫æ N√ÄO ƒê·ªÇ S·ª¨ D·ª§NG KI·ªÇU [UNSIGNED]{"entity": "cpplus_content", "value": "unsigned"}
    - B·∫±ng c√°ch n√†o t c√≥ th·ªÉ t·∫°o m·ªôt [variable](cpplus_content)?
    - khai bao ntn 1 [toan tu]{"entity": "cpplus_content", "value": "operator"} trong c++?
    - C√∫ ph√°p c·ªßa [inline-function](cpplus_content) l√† g√¨
    - [pseudo-code](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [local-variable](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [string](cpplus_content)
    - √™ bot ch·ªâ t c√°ch s·ª≠ d·ª•ng t·ª´ kh√≥a [continue](cpplus_content)
    - L√ÄM SAO ƒê·ªÇ KHAI B√ÅO M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} TRONG C++ ?
    - Ok l√†m s ƒë·ªÉ t·∫°o 1 bi·∫øn ki·ªÉu [short](cpplus_content) ?
    - [type-modififer](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - l√†m s ƒë·ªÉ vi·∫øt dc 1 h√†m [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"}
    - b·∫±ng c√°ch n√†o th√¨ ta c√≥ th·ªÉ d√πng [include](cpplus_content) trong c++ dc v?
    - C√≥ c√°ch n√†o ƒë·ªÉ t√¥i t·∫°o m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} kh√¥ng
    - L√†m s ƒë·ªÉ declare 1 [Variable]{"entity": "cpplus_content", "value": "variable"} v?
    - [iteration-statement](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - ham [de quy]{"entity": "cpplus_content", "value": "recursion"} dc implement the nao trong c++ v bot?
    - m·ªôt lo·∫°i [To√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} ƒëc t·∫°o ra b·∫±ng c√°ch n√†o v bot?
    - t√¥i kh√¥ng bi·∫øt l√†m sao ƒë·ªÉ t·∫°o m·ªôt [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}
    - L√†m th·∫ø n√†o ƒë·ªÉ v·∫Ω [flowchart](cpplus_content)
    - n√≥i cho t√¥i bi·∫øt c√°ch t·∫°o m·ªôt [m·∫£ng]{"entity": "cpplus_content", "value": "array"} nh∆∞ th·∫ø n√†o kh√¥ng
    - lam the nao de co the viet dc tu khoa [break](cpplus_content) va [continue](cpplus_content) the bot?
    - How to t·∫°o ra t·ª´ kh√≥a [continue](cpplus_content) ƒë√¢y
    - [tham s·ªë]{"entity": "cpplus_content", "value": "parameter"} ch·∫°y nh∆∞ th·∫ø n√†o
    - [L·ªõp]{"entity": "cpplus_content", "value": "class"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [To√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"} c√°ch s·ª≠ d·ª•ng
    - L√ÄM C√ÅCH N√ÄO ƒê·ªÇ T C√ì TH·ªÇ KHAI B√ÅO ƒê∆Ø·ª¢C M·ªòT C√ÅI [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} V?
    - [jump-statement](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Can u tell me how in the world could i use [2D array]{"entity": "cpplus_content", "value": "2d-array"} in c++?
    - C√∫ ph√°p [integer](cpplus_content)
    - [data-type](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [local-variable](cpplus_content)
    - [while](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Lam cach nao de t co the [truyen tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} vao 1 ham dc day bot?
    - [class](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - 1 [toan tu]{"entity": "cpplus_content", "value": "operator"} dc dung trong c++ nhu the nao v bot?
    - L√†m c√°ch n√†o ƒë·ªÉ t·∫°o ra dc 1 c√°i [ma tr·∫≠n]{"entity": "cpplus_content", "value": "2d-array"} th·∫ø bot chat /
    - B·∫Øt ƒë·∫ßu h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++ t·ª´ ƒë√¢u?
    - Khai bao 1 [function](cpplus_content) thi lam s?
    - [assignment-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - s·ª≠ d·ª•ng t√≠nh nƒÉng [comment](cpplus_content) trong c++ ntn?
    - CH·ªà IEM C√ÅCH VI·∫æT M·ªòT [LOOP]{"entity": "cpplus_content", "value": "loop"} ƒêI
    - [short](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - S·ª≠ d·ª•ng c√°ch th·ª©c n√†o ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c m·ªôt [namespace](cpplus_content) trong C++ th·∫ø bot ?
    - l√†m th·∫ø n√†o ƒë·ªÉ t khai b√°o m·ªôt [variable](cpplus_content)?
    - C√∫ ph√°p [control-flow](cpplus_content)
    - [if-else-if-ladder](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [array](cpplus_content) l√† g√¨
    - Cai [const]{"entity": "cpplus_content", "value": "constant"} dua vao code thi implement lam s ay nhi?
    - Khai b√°o 1 [function](cpplus_content) th√¨ l√†m s?
    - HOW TO USE [M·∫¢NG 1D]{"entity": "cpplus_content", "value": "array"} IN CPP?
    - [ƒê·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [address_of-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [doi so]{"entity": "cpplus_content", "value": "argument"} khi truyen vao 1 ham dc trien khai nhu the nao v bot?
    - [floating-point](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [Operator]{"entity": "cpplus_content", "value": "operator"} dc viet ra lam sao v bot?
    - ch·ªâ b·ªë m vi·∫øt ra m·ªôt v√≤ng [for](cpplus_content) coi
    - [while](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [built-in-function](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√ÅI KI·ªÇU D·ªÆ LI·ªÜU [LU·∫¨N L√ù]{"entity": "cpplus_content", "value": "boolean"} TRONG C++ ƒêC TRI·ªÇN KHAI N√ÄM THAO TH·∫æ BOT?
    - Lam cach nao de dung kieu [double](cpplus_content) trong c++?
    - [if else]{"entity": "cpplus_content", "value": "if-else"} ch·∫°y nh∆∞ th·∫ø n√†o
    - Bang cach nao de su dung duoc cai [type modifier]{"entity": "cpplus_content", "value": "type-modifier"} day bot oii
    - C√∫ ph√°p c·ªßa [main-function](cpplus_content) l√† g√¨
    - NH∆Ø TH·∫æ N√ÄO ƒê·ªÇ C√ì TH·ªÇ VI·∫æT DC M·ªòT C√ÇU [BREAK]{"entity": "cpplus_content", "value": "break"} V
    - Sao ƒë·ªÉ declare m·ªôt [Th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} ƒë√¢y
    - C√∫ ph√°p [double](cpplus_content)
    - [control-flow](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - NTN de tao ra dc 1 [struct]{"entity": "cpplus_content", "value": "structure"} ?
    - chi bo m viet ra mot vong [for](cpplus_content) coi
    - lam the nao de su dung kieu [unsigned](cpplus_content)
    - [toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"} dc lam ra nhu the nao khi viet code v bot nhi?
    - t·ª´ kh√≥a [continue](cpplus_content) dc d√πng ra l√†m s v bot?
    - [main-function](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [parameter](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - Viet 1 vong lap [while](cpplus_content) bang cach nao the bot?
    - l√†m s ƒë·ªÉ t c√≥ th·ªÉ t·∫°o ra m·ªôt [arr]{"entity": "cpplus_content", "value": "array"}?
    - C√°ch d√πng [for](cpplus_content)
    - [binary-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√†m c√°ch n√†o ƒë·ªÉ t c√≥ th·ªÉ [truy·ªÅn tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} v√†o 1 h√†m dc ƒë√¢y bot?
    - C√∫ ph√°p [variable](cpplus_content)
    - How to use [binary operator]{"entity": "cpplus_content", "value": "binary-operator"} ?
    - C√°ch v·∫Ω [flowchart](cpplus_content)
    - V√≤ng l·∫∑p [while](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [parameter](cpplus_content) l√† g√¨
    - [static](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - T√îI KH√îNG BI·∫æT C√ÅCH T·∫†O M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} TRONG C++
    - C√∫ ph√°p [library](cpplus_content)
    - cach su dung [Ham]{"entity": "cpplus_content", "value": "function"} nhu the nao
    - C√∫ ph√°p c·ªßa [signed](cpplus_content) l√† g√¨
    - t·ª´ kh√≥a [switch](cpplus_content) case dc vi·∫øt nh∆∞ th·∫ø n√†o ?
    - √™ n√†m thao ƒë·ªÉ t t·∫°o ra dc 1 bi·∫øn [unsigned](cpplus_content) trong c++ ƒë√¢y bot?
    - [if-else](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - l√†m sao ƒë·ªÉ m√¨nh c√≥ th·ªÉ v·∫Ω dc [flowchart](cpplus_content) ƒë√¢y chatbot?
    - TRONG C++ C√ì 1 KH√ÅI NI·ªÜM L√Ä H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} TH√å TRI·ªÇN KHAI TRONG CODE NTN V BOT?
    - [macro](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - b·∫±ng c√°ch n√†o t c√≥ th·ªÉ vi·∫øt ra dc m·ªôt v√≤ng [while](cpplus_content)?
    - l√†m s ƒë·ªÉ t c√≥ th·ªÉ t·∫°o ra m·ªôt [ARRAY]{"entity": "cpplus_content", "value": "array"} ƒë√¢y m?
    - C√∫ ph√°p c·ªßa [typedef](cpplus_content) l√† g√¨
    - C√∫ ph√°p [character](cpplus_content)
    - √ä BOT CH·ªà T C√ÅCH S·ª¨ D·ª§NG T·ª™ KH√ìA [CONTINUE]{"entity": "cpplus_content", "value": "continue"}
    - L√ÄM SAO ƒê·ªÇ S·ª¨ D·ª§NG [BREAK]{"entity": "cpplus_content", "value": "break"} ƒê√ÇY TA
    - C√∫ ph√°p [enumeration](cpplus_content)
    - mot [dieu kien]{"entity": "cpplus_content", "value": "if"} trong c++ dc viet nhu the nao?
    - Trong C++ c√≥ 1 kh√°i ni·ªám l√† h√†m [macro](cpplus_content) th√¨ tri·ªÉn khai trong code ntn v bot?
    - [boolean](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - l√†m th·∫ø n√†o ƒë·ªÉ tri·ªÉn khai 1 [namespace](cpplus_content) ·ªü c++ th·∫ø bot?
    - chi t cach su dung tu khoa [continue](cpplus_content) di
    - C√∫ ph√°p c·ªßa [reference-variable](cpplus_content) l√† g√¨
    - [Tham s·ªë]{"entity": "cpplus_content", "value": "parameter"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [comma-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - T·∫†O [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} KI·ªÇU G√å V·∫¨Y ?
    - C√∫ ph√°p [boolean](cpplus_content)
    - C√°ch t·∫°o ra [matrix]{"entity": "cpplus_content", "value": "2d-array"} trong c++?
    - t·∫°o ra 1 bi·∫øn [static](cpplus_content) nh∆∞ th·∫ø n√†o v
    - B·∫∞NG C√ÅCH N√ÄO ƒê·ªÇ S·ª¨ D·ª§NG ƒê∆Ø·ª¢C C√ÅI [TYPE MODIFIER]{"entity": "cpplus_content", "value": "type-modifier"} ƒê√ÇY BOT OII
    - [Const]{"entity": "cpplus_content", "value": "constant"} trong c++ khi muon dung thi minh can phai viet ntn v bot nhi?
    - lam s de dung dc 1 kieu [integer](cpplus_content) the
    - Viet mot ham [recursion](cpplus_content) thi phai lam s the bot chat?
    - 1 syntax [switch](cpplus_content) case ·ªü c++ dc vi·∫øt nh∆∞ th·∫ø n√†o v bot?
    - C√∫ ph√°p c·ªßa [vector](cpplus_content) l√† g√¨
    - b·ªã l·ªói [include](cpplus_content) ph·∫£i l√†m sao
    - [if](cpplus_content) dc viet ntn?
    - [Const]{"entity": "cpplus_content", "value": "constant"} trong c++ khi mu·ªën d√πng th√¨ m√¨nh c·∫ßn ph·∫£i vi·∫øt ntn v bot nh·ªâ?
    - [shift-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - HOW TO D√ôNG C√ÅI SYNTAX [TYPEDEF]{"entity": "cpplus_content", "value": "typedef"} V BOT CHAT ???
    - [flowchart](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [if-else-if-ladder](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - T·∫°o [m·∫£ng]{"entity": "cpplus_content", "value": "array"} ki·ªÉu g√¨ v·∫≠y ?
    - C√∫ ph√°p [assignment-operator](cpplus_content)
    - [external](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - 1 bien kieu [string](cpplus_content) thi can phai the nao moi xai dc
    - C√∫ ph√°p c·ªßa [if-else-if-ladder](cpplus_content) l√† g√¨
    - L√†m th·∫ø n√†o ƒë·ªÉ t t·∫°o ra m·ªôt v√≤ng [While]{"entity": "cpplus_content", "value": "while"} ƒë√¢y m√†y
    - [KI·ªÇU LU·∫¨N L√ù]{"entity": "cpplus_content", "value": "boolean"} D√ôNG NTN V ???
    - mot loai [Toan tu]{"entity": "cpplus_content", "value": "operator"} dc tao ra bang cach nao v bot?
    - [increment-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [wchar_t](cpplus_content)
    - C√ÅI L√ù THUY·∫æT V·ªÄ [CONSTANT]{"entity": "cpplus_content", "value": "constant"}, M√åNH VI·∫æT N√ì V√ÄO CODE TH√å VI·∫æT NTN ƒê√ÇY NH·ªà?
    - L√ÄM C√ÅCH N√ÄO ƒê·ªÇ T VI·∫æT RA ƒêC M·ªòT C√ÇU [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} ƒê√ÇY
    - c√°ch n√†o ƒë·ªÉ t·∫°o m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} v·∫≠y ?
    - L√ÄM S ƒê·ªÇ S·ª¨ D·ª§NG KI·ªÇU [WCHAR-T]{"entity": "cpplus_content", "value": "wchar-t"} TH·∫æ BOT?
    - [arithmetic-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [unary-operator](cpplus_content)
    - Bot ∆°i l√†m c√°ch n√†o ƒë·ªÉ tao c√≥ th·ªÉ vi·∫øt dc 1 v√≤ng l·∫∑p [while](cpplus_content) ƒë√¢y bot?
    - C√∫ ph√°p c·ªßa [type-modififer](cpplus_content) l√† g√¨
    - L√ÄM S ƒê·ªÇ T IMPLEMENT ƒê∆Ø·ª¢C M·ªòT V√íNG [WHILE]{"entity": "cpplus_content", "value": "while"} ƒê√ÇY?
    - l√†m th·∫ø n√†o ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng t·ªët t·ª´ kh√≥a [continue](cpplus_content)?
    - [Ma tran]{"entity": "cpplus_content", "value": "2d-array"} trong c++ dc tao bang cach nao?
    - C√∫ ph√°p [signed](cpplus_content)
    - CH·ªà B·ªê M VI·∫æT RA M·ªòT V√íNG [FOR]{"entity": "cpplus_content", "value": "for"} COI
    - [if](cpplus_content) dc vi·∫øt ntn?
    - C√∫ ph√°p [const-reference](cpplus_content)
    - How to use [M·∫£ng 1D]{"entity": "cpplus_content", "value": "array"} in cpp?
    - [vector](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√ì C√ÅCH N√ÄO ƒê·ªÇ T√îI DECLARE M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} KH√îNG
    - 1 h√†m [macro](cpplus_content) trong c++ dc vi·∫øt nh∆∞ th·∫ø n√†o?
    - N√ìI CHO T√îI BI·∫æT C√ÅCH T·∫†O M·ªòT [STRUCT]{"entity": "cpplus_content", "value": "structure"} NH∆Ø TH·∫æ N√ÄO KH√îNG
    - khai bao 1 [class](cpplus_content) nhu the nao ?
    - l√†m sao ƒë·ªÉ s·ª≠ d·ª•ng ƒëc c√°i [comment](cpplus_content) trong c++ th·∫ø?
    - C√∫ ph√°p c·ªßa [increment-operator](cpplus_content) l√† g√¨
    - L√†m th·∫ø n√†o ƒë·ªÉ tui t·∫°o ra m·ªôt [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} v
    - C√∫ ph√°p c·ªßa [library](cpplus_content) l√† g√¨
    - Cu phap cua [library](cpplus_content) la gi
    - gio muon viet [toan tu giam]{"entity": "cpplus_content", "value": "decrement-operator"} thi phai sao the botchat?
    - L√†m sao ƒë·ªÉ s·ª≠ d·ª•ng t·ª´ kh√≥a [continue](cpplus_content) ƒë√¢y nh·ªâ
    - [MA TR·∫¨N]{"entity": "cpplus_content", "value": "2d-array"} TRONG C++ DC T·∫†O B·∫∞NG C√ÅCH N√ÄO?
    - Cai kieu du lieu [luan ly]{"entity": "cpplus_content", "value": "boolean"} trong C++ dc trien khai nam thao the bot?
    - √™ bot ∆°i how to s·ª≠ d·ª•ng [Comment]{"entity": "cpplus_content", "value": "comment"} ?
    - [unary-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - Trien khai [toan tu ba ngoi]{"entity": "cpplus_content", "value": "ternary-operator"} ra lam sao v chatbot?
    - C√∫ ph√°p c·ªßa [data-type](cpplus_content) l√† g√¨
    - lam the nao de co the su dung tot tu khoa [continue](cpplus_content)?
    - [class](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [scope-resolution-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [comparison-operator](cpplus_content)
    - b√†y t c√°ch t·∫°o ra m·ªôt [loop](cpplus_content) xem n√†o
    - lam sao de su dung dc cai [comment](cpplus_content) trong c++ the?
    - C√∫ ph√°p [namespace](cpplus_content)
    - [control-flow](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√ÅCH N√ÄO ƒê·ªÇ T T·∫†O RA M·ªòT V√íNG [WHILE]{"entity": "cpplus_content", "value": "while"} V M
    - C√∫ ph√°p [static](cpplus_content)
    - gi·ªù t mu·ªën t·∫°o ra m·ªôt c√°i [if](cpplus_content) th√¨ n√™n l√†m s ƒë√¢y bot?
    - ve [flowchart](cpplus_content) la ve nhu the nao vay bot?
    - C√∫ ph√°p [comma-operator](cpplus_content)
    - C√∫ ph√°p c·ªßa [pointer](cpplus_content) l√† g√¨
    - C√∫ ph√°p c·ªßa [variable](cpplus_content) l√† g√¨
    - NTN ƒê·ªÇ T C√ì TH·ªÇ T·∫†O RA 1 H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} ?
    - [constant](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√ÄM S ƒê·ªÇ T·∫†O RA ƒê∆Ø·ª¢C M·ªòT V√íNG [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} ƒê√ÇY TA
    - C√∫ ph√°p [array](cpplus_content)
    - C√∫ ph√°p c·ªßa [shift-operator](cpplus_content) l√† g√¨
    - l√†m th·∫ø n√†o ƒë·ªÉ t t·∫°o ra m·ªôt v√≤ng [for](cpplus_content) ƒë√¢y
    - [toan tu]{"entity": "cpplus_content", "value": "operator"} dc trien khai NTN ?
    - L√†m s ƒë·ªÉ t implement ƒë∆∞·ª£c m·ªôt v√≤ng [while](cpplus_content) ƒë√¢y?
    - C√∫ ph√°p c·ªßa [if-else](cpplus_content) l√† g√¨
    - [typedef](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [Local variable]{"entity": "cpplus_content", "value": "local-variable"} duoc dung nhu the nao trong cpp v bot?
    - C√∫ ph√°p c·ªßa [comparison-operator](cpplus_content) l√† g√¨
    - C√ÅCH T·∫†O RA [MATRIX]{"entity": "cpplus_content", "value": "2d-array"} TRONG C++?
    - L√ÄM S ƒê·ªÇ S·ª¨ D·ª§NG C√ÅI [TYPE MODIFER]{"entity": "cpplus_content", "value": "type-modifier"} TRONG CPP TH·∫æ ?
    - [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} dc khai b√°o n√†m thao th√≠a ?
    - C√∫ ph√°p c·ªßa [comment](cpplus_content) l√† g√¨
    - C√∫ ph√°p [jump-statement](cpplus_content)
    - C√∫ ph√°p [typedef](cpplus_content)
    - Tao 1 [MA TRAN]{"entity": "cpplus_content", "value": "2d-array"} trong c++ nhu the nao?
    - Lam sao de su dung tu khoa [continue](cpplus_content) day nhi
    - gi·ªù mu·ªën vi·∫øt [to√°n t·ª≠ gi·∫£m]{"entity": "cpplus_content", "value": "decrement-operator"} th√¨ ph·∫£i sao th·∫ø botchat?
    - C√∫ ph√°p [ternary-operator](cpplus_content)
    - √ä B√ÇY GI·ªú B√ÄY T C√ÅCH TH·ª®C ƒê·ªÇ C√ì TH·ªÇ D√ôNG 1 BI·∫æN KI·ªÇU [SIGNED]{"entity": "cpplus_content", "value": "signed"} ƒê√ä A BOT
    - C√∫ ph√°p [nested-if](cpplus_content)
    - 1 [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} dc d√πng trong c++ nh∆∞ th·∫ø n√†o v bot?
    - [dieu kien]{"entity": "cpplus_content", "value": "if"} trong c++ dc implement the nao the?
    - tu khoa [switch](cpplus_content) case dc viet nhu the nao ?
    - D√ôNG C√ÅCH N√ÄO ƒê·ªÇ VI·∫æT [MACRO]{"entity": "cpplus_content", "value": "macro"} TRONG C++ TH·∫æ BOT?
    - L√†m c√°ch n√†o ƒë·ªÉ t·∫°o khai b√°o m·ªôt bi·∫øn [ki·ªÉu s·ªë th·ª±c]{"entity": "cpplus_content", "value": "floating-point"} th·∫ø?
    - GI·ªú TAO MU·ªêN DECLARE M·ªòT C√ÅI [IF]{"entity": "cpplus_content", "value": "if"} TH√å PH·∫¢I L√ÄM S?
    - 1 BI·∫æN M√Ä C√ì CH·ªÆ [CONST]{"entity": "cpplus_content", "value": "constant"} PH√çA TR∆Ø·ªöC TH√å VI·∫æT NTN V BOT?
    - Ne ku lam s de t tao ra 1 bien kieu [short](cpplus_content) day?
    - C√∫ ph√°p [goto](cpplus_content)
    - n√≥i cho t√¥i bi·∫øt c√°ch t·∫°o m·ªôt [STRUCT]{"entity": "cpplus_content", "value": "structure"} nh∆∞ th·∫ø n√†o kh√¥ng
    - C√∫ ph√°p c·ªßa [integer](cpplus_content) l√† g√¨
    - CH·ªà B·ªê M C√ÅCH T·∫†O RA M·ªòT V√íNG [FOR]{"entity": "cpplus_content", "value": "for"} ƒêI
    - C√∫ ph√°p c·ªßa [arithmetic-operator](cpplus_content) l√† g√¨
    - C√∫ ph√°p [return](cpplus_content)
    - Dung [class](cpplus_content) nhu the nao?
    - Bot oi lam cach nao de tao co the viet dc 1 vong lap [while](cpplus_content) day bot?
    - [arithmetic-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - E chi tao cach trien khai [kieu luan ly]{"entity": "cpplus_content", "value": "boolean"} cho no ra j xem nao
    - C√∫ ph√°p c·ªßa [loop](cpplus_content) l√† g√¨
    - [recursion](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [type-modififer](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [continue](cpplus_content)
    - cach dung [struct]{"entity": "cpplus_content", "value": "structure"} nhu the nao v
    - [Arrays]{"entity": "cpplus_content", "value": "array"} trong c++ dc viet the nao the?
    - [h√†m]{"entity": "cpplus_content", "value": "function"} ch·∫°y nh∆∞ th·∫ø n√†o
    - HOW TO DECLARE M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"}
    - [Doi so]{"entity": "cpplus_content", "value": "argument"} dc truyen ntn trong loi goi ham the bot?
    - C√ÅI SYNTAX V·ªÄ [TYPEDEF]{"entity": "cpplus_content", "value": "typedef"} D√ôNG L√ÄM SAO √ç NH·ªà ?
    - Bay gio lam sao de t co the su dung duoc tu khoa [break](cpplus_content) day?
    - [Con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - c√°ch s·ª≠ d·ª•ng [H√†m]{"entity": "cpplus_content", "value": "function"} nh∆∞ th·∫ø n√†o
    - bang cach nao thi ta co the dung [include](cpplus_content) trong c++ dc v?
    - C√∫ ph√°p [parameter](cpplus_content)
    - [Ki·ªÉu s·ªë nguy√™n]{"entity": "cpplus_content", "value": "integer"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√ÄM SAO ƒê·ªÇ TA C√ì TH·ªÇ T·∫†O RA BI·∫æN C√ì KI·ªÇU D·ªÆ LI·ªÜU L√Ä [LONG]{"entity": "cpplus_content", "value": "long"} TRONG CPP?
    - [CONST]{"entity": "cpplus_content", "value": "constant"} TRONG C++ KHI MU·ªêN D√ôNG TH√å M√åNH C·∫¶N PH·∫¢I VI·∫æT NTN V BOT NH·ªà?
    - Cu phap cua [namespace](cpplus_content) la gi
    - C√∫ ph√°p [loop](cpplus_content)
    - How to tao ra tu khoa [continue](cpplus_content) day
    - C√∫ ph√°p c·ªßa [union](cpplus_content) l√† g√¨
    - C√°ch n√†o ƒë·ªÉ khai b√°o m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} v·∫≠y ?
    - L√†m sao ƒë·ªÉ declare m·ªôt c√¢u [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"}
    - [library](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√†m c√°ch n√†o ƒë·ªÉ implement ra dc m·ªôt h√†m [macro](cpplus_content) th·∫ø bot?
    - C√∫ ph√°p [if-else-if-ladder](cpplus_content)
    - ch·ªâ m√¨nh c√°ch t·∫°o ra m·ªôt [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} v·ªõi
    - L√†m c√°ch n√†o ƒë·ªÉ d√πng ki·ªÉu [double](cpplus_content) trong c++?
    - Vi·∫øt 1 v√≤ng l·∫∑p [while](cpplus_content) b·∫±ng c√°ch n√†o th·∫ø bot?
    - Ch·ªâ tui c√°ch vi·∫øt m·ªôt c√¢u [IF]{"entity": "cpplus_content", "value": "if"} ƒëi b·∫°n ui
    - L√ÄM SAO T√îI C√ì TH·ªÇ KHAI B√ÅO M·ªòT [STRUCT]{"entity": "cpplus_content", "value": "structure"} ƒê∆Ø·ª¢C ?
    - [include](cpplus_content) trong c++ ƒëc s·ª≠ d·ª•ng nh∆∞ th·∫ø n√†o?
    - L√†m sao ƒë·ªÉ khai b√°o m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} trong c++ ?
    - [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"} ƒêC VI·∫æT NTN TRONG C++ ƒê√ÇY BOTCHAT
    - HOW TO T·∫†O RA T·ª™ KH√ìA [CONTINUE]{"entity": "cpplus_content", "value": "continue"} ƒê√ÇY
    - e bot oi gio bo m muon dung cai [toan tu --]{"entity": "cpplus_content", "value": "decrement-operator"} thi lam kieu gi the bot?
    - [lambda](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [double](cpplus_content) l√† g√¨
    - [const-reference](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [to√°n t·ª≠ ba ng√¥i]{"entity": "cpplus_content", "value": "ternary-operator"} dc vi·∫øt th·∫ø n√†o v?
    - nhu the nao de co the viet dc mot cau [Break]{"entity": "cpplus_content", "value": "break"} v
    - [comparison-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - mot [toan tu]{"entity": "cpplus_content", "value": "operator"} dc viet ra sao the bot?
    - khai bao 1 lenh [switch](cpplus_content) case ra lam sao ?
    - C√ÅCH D√ôNG [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} TRONG C++
    - C√∫ ph√°p [break](cpplus_content)
    - l√†m sao ƒë·ªÉ m√¨nh c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c [break](cpplus_content)?
    - lam sao de su dung 1 [namespace](cpplus_content) ?
    - [ƒê·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} dc truy·ªÅn ntn trong l·ªùi g·ªçi h√†m th·∫ø bot?
    - [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} trong c++ dc implement th·∫ø n√†o th·∫ø?
    - d√πng c√°ch th·ª©c g√¨ ƒë·ªÉ x√†i dc [struct]{"entity": "cpplus_content", "value": "structure"} th·∫ø?
    - C√∫ ph√°p c·ªßa [string](cpplus_content) l√† g√¨
    - [argument](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [Function]{"entity": "cpplus_content", "value": "function"} dc viet nhu the nao v?
    - [Mang mot chieu]{"entity": "cpplus_content", "value": "array"} dc viet ntn trong c++ day botchat
    - [goto](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√†m sao t√¥i c√≥ th·ªÉ khai b√°o m·ªôt [struct]{"entity": "cpplus_content", "value": "structure"} ƒë∆∞·ª£c ?
    - lam cach j de ra dc 1 [con tro]{"entity": "cpplus_content", "value": "pointer"} zi bot uiii
    - L√†m sao t√¥i c√≥ th·ªÉ khai b√°o m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ƒë∆∞·ª£c ?
    - Ki·ªÉu [k√Ω t·ª±]{"entity": "cpplus_content", "value": "character"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [type-modififer](cpplus_content)
    - S·ª≠ d·ª•ng [double](cpplus_content) trong c++ ntn th·∫ø?
    - L√†m s ƒë·ªÉ s·ª≠ d·ª•ng t√≠nh nƒÉng [typedef](cpplus_content) ?
    - C√∫ ph√°p c·ªßa [return-type](cpplus_content) l√† g√¨
    - C√∫ ph√°p c·ªßa [built-in-function](cpplus_content) l√† g√¨
    - [signed](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [pass-by-reference](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Kieu [bool]{"entity": "cpplus_content", "value": "boolean"} dung the quai nao v bot?
    - CH·ªà TUI C√ÅCH VI·∫æT M·ªòT C√ÇU [IF]{"entity": "cpplus_content", "value": "if"} ƒêI B·∫†N UI
    - √™ bot gi·ªù t mu·ªën d√πng [to√°n t·ª≠ tƒÉng]{"entity": "cpplus_content", "value": "increment-operator"} th√¨ l√†m nh∆∞ th·∫ø n√†o?
    - l√†m s ƒë·ªÉ tao khai b√°o m·ªôt [variable](cpplus_content) ƒë√¢y?
    - L√†m s ƒë·ªÉ s·ª≠ d·ª•ng c√°i [type modifer]{"entity": "cpplus_content", "value": "type-modifier"} trong cpp th·∫ø ?
    - NTN ƒê·ªÇ T·∫†O RA DC 1 [STRUCT]{"entity": "cpplus_content", "value": "structure"} ?
    - T·∫°o ra m·ªôt [m·∫£ng]{"entity": "cpplus_content", "value": "array"} l√†m nh∆∞ th·∫ø n√†o v·∫≠y ??
    - cach hoc [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - [nested-if](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Ntn ƒë·ªÉ c√≥ th·ªÉ [truy·ªÅn tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} v√†o 1 h√†m dc ƒë√¢y bot?
    - [flowchart](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√ÄM S ƒê·ªÇ T VI·∫æT V√íNG L·∫∂P [FOR]{"entity": "cpplus_content", "value": "for"} ƒê√ÇY M
    - C√∫ ph√°p c·ªßa [local-variable](cpplus_content) l√† g√¨
    - T√¥i kh√¥ng bi·∫øt l√†m sao ƒë·ªÉ khai b√°o m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"}
    - [Ma tr·∫≠n]{"entity": "cpplus_content", "value": "2d-array"} trong c++ dc t·∫°o b·∫±ng c√°ch n√†o?
    - [Struct]{"entity": "cpplus_content", "value": "structure"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [function](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - T·∫°o [m·∫£ng]{"entity": "cpplus_content", "value": "array"} ki·ªÉu qu√°i g√¨ z·ªã ?
    - [reference variable]{"entity": "cpplus_content", "value": "reference-variable"} dc tao ra trong c++ nhu the nao v bot?
    - L√ÄM C√ÅCH N√ÄO ƒê·ªÇ T·∫†O RA M·ªòT C√ÇU L·ªÜNH [IF]{"entity": "cpplus_content", "value": "if"}?
    - [long](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [ternary-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [scope-resolution-operator](cpplus_content) l√† g√¨
    - Lam s de su dung kieu [wchar-t](cpplus_content) the bot?
    - [function](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [macro](cpplus_content) l√† g√¨
    - l√†m th·∫ø qu√°i n√†o ƒë·ªÉ c√≥ th·ªÉ ra dc 1 [Pointer]{"entity": "cpplus_content", "value": "pointer"} r·ª©a ?
    - T√îI KH√îNG BI·∫æT C√ÅCH T·∫†O M·ªòT [STRUCT]{"entity": "cpplus_content", "value": "structure"} TRONG C++
    - Lam cach nao de implement ra dc mot ham [macro](cpplus_content) the bot?
    - c√°ch s·ª≠ d·ª•ng [namepsace]{"entity": "cpplus_content", "value": "namespace"} ?
    - Ki·ªÉu d·ªØ li·ªáu [wchar-t](cpplus_content) d√πng ki·ªÉu j v bot?
    - Vi·∫øt [m·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} th√¨ vi·∫øt nh∆∞ th·∫ø n√†o ƒë√¢y bot?
    - C√∫ ph√°p [function](cpplus_content)
    - L√ÄM S ƒê·ªÇ T C√ì TH·ªÇ T·∫†O RA M·ªòT [ARRAY]{"entity": "cpplus_content", "value": "array"} ƒê√ÇY M?
    - [M·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [structure](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - lam the quai nao de co the ra dc 1 [Pointer]{"entity": "cpplus_content", "value": "pointer"} rua ?
    - C√∫ ph√°p [vector](cpplus_content)
    - 1 t·∫≠p l·ªánh [if else]{"entity": "cpplus_content", "value": "if-else"} dc vi·∫øt nh∆∞ th·∫ø n√†o v bot chat ∆°i
    - C√∫ ph√°p [logical-operator](cpplus_content)
    - C√∫ ph√°p [built-in-function](cpplus_content)
    - Lam sao de ta co the tao ra bien co kieu du lieu la [long](cpplus_content) trong cpp?
    - C√∫ ph√°p [pseudo-code](cpplus_content)
    - C√∫ ph√°p [lambda](cpplus_content)
    - V√≤ng l·∫∑p [do-while](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - b·∫°n ∆°i l√†m c√°ch n√†o ƒë·ªÉ c√≥ th·ªÉ vi·∫øt ra dc 1 c√°i h√†m [lambda](cpplus_content) zay
    - l√†m s ƒë·ªÉ t vi·∫øt v√≤ng l·∫∑p [For]{"entity": "cpplus_content", "value": "for"} ƒë√¢y m
    - 1 [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} dc khai b√°o ra sao v bot
    - l√†m sao ƒë·ªÉ khai b√°o m·ªôt [m·∫£ng]{"entity": "cpplus_content", "value": "array"} trong c++ ?
    - m·ªôt [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} trong c++ dc vi·∫øt nh∆∞ th·∫ø n√†o?
    - e bot chi t cach su dung tu khoa [continue](cpplus_content)
    - L√†m c√°ch n√†o ƒë·ªÉ t vi·∫øt ra ƒëc m·ªôt c√¢u [do while]{"entity": "cpplus_content", "value": "do-while"} ƒë√¢y
    - [integer](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - how to declare m·ªôt [m·∫£ng]{"entity": "cpplus_content", "value": "array"}
    - Lam s de khai bao ra dc 1 cai [ham]{"entity": "cpplus_content", "value": "function"} trong c++ v bot
    - [wchar_t](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - t√¥i kh√¥ng bi·∫øt c√°ch t·∫°o m·ªôt [Struct]{"entity": "cpplus_content", "value": "structure"} trong c++
    - [typedef](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [bitwise-operator](cpplus_content) l√† g√¨
    - khai b√°o 1 [class](cpplus_content) nh∆∞ th·∫ø n√†o ?
    - 1 chi·∫øc [to√°n t·ª≠ tƒÉng]{"entity": "cpplus_content", "value": "increment-operator"} ƒëc khai b√°o ra sao th·∫ø bot?
    - [return](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [floating-point](cpplus_content) l√† g√¨
    - how to t·∫°o ra m·ªôt v√≤ng [FOR]{"entity": "cpplus_content", "value": "for"} v m
    - How to use [Mang 1D]{"entity": "cpplus_content", "value": "array"} in cpp?
    - [nested-if](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [for](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√≥ c√°ch n√†o ƒë·ªÉ t√¥i declare m·ªôt [M·∫£ng]{"entity": "cpplus_content", "value": "array"} kh√¥ng
    - l√†m s ƒë·ªÉ c√≥ s·ª≠ d·ª•ng dc c√°c [h√†m d·ª±ng s·∫µn]{"entity": "cpplus_content", "value": "built-in-function"} th·∫ø bot iu?
    - nh∆∞ th·∫ø n√†o ƒë·ªÉ c√≥ th·ªÉ vi·∫øt dc m·ªôt c√¢u [Break]{"entity": "cpplus_content", "value": "break"} v
    - Cai ly thuyet ve [constant](cpplus_content), minh viet no vao code thi viet ntn day nhi?
    - C√∫ ph√°p c·ªßa [logical-operator](cpplus_content) l√† g√¨
    - NTN ƒë·ªÉ t·∫°o ra dc 1 [struct]{"entity": "cpplus_content", "value": "structure"} ?
    - B√ÇY GI·ªú L√ÄM SAO ƒê·ªÇ T C√ì TH·ªÇ S·ª¨ D·ª§NG ƒê∆Ø·ª¢C T·ª™ KH√ìA [BREAK]{"entity": "cpplus_content", "value": "break"} ƒê√ÇY?
    - L√ÄM TH·∫æ L√ÄO ƒê·ªÇ T·∫†O DC 1 BI·∫æN C√ì KI·ªÇU [UNSIGNED]{"entity": "cpplus_content", "value": "unsigned"} ?
    - L√ÄM C√ÅCH N√ÄO ƒê·ªÇ DECLARE M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} V
    - D√ôNG C√ÅCH TH·ª®C G√å ƒê·ªÇ X√ÄI DC [STRUCT]{"entity": "cpplus_content", "value": "structure"} TH·∫æ?
    - t√¥i kh√¥ng bi·∫øt c√°ch t·∫°o m·ªôt [m·∫£ng]{"entity": "cpplus_content", "value": "array"} trong c++
    - [pseudo-code](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√ÄM S ƒê·ªÇ T C√ì TH·ªÇ T·∫†O RA M·ªòT [ARR]{"entity": "cpplus_content", "value": "array"}?
    - [iteration-statement](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [for](cpplus_content) l√† g√¨
    - NTN ƒë·ªÉ t c√≥ th·ªÉ t·∫°o ra 1 h√†m [macro](cpplus_content) ?
    - khai b√°o ntn 1 [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} trong c++?
    - C√∫ ph√°p [reference-variable](cpplus_content)
    - [D·∫•u ch·∫•m ƒë·ªông]{"entity": "cpplus_content", "value": "floating-point"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - l√†m s ƒë·ªÉ d√πng dc 1 ki·ªÉu [integer](cpplus_content) th·∫ø
    - C√∫ ph√°p c·ªßa [pass-by-value](cpplus_content) l√† g√¨
    - C√∫ ph√°p [arithmetic-operator](cpplus_content)
    - how to su dung kieu [enum]{"entity": "cpplus_content", "value": "enumeration"} ?
    - l√†m c√°ch n√†o kh·ªüi t·∫°o [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} trong c++ v·∫≠y b·∫°n ∆°i ?
    - khai b√°o 1 l·ªánh [switch](cpplus_content) case ra l√†m sao ?
    - B√ÄY T C√ÅCH T·∫†O RA M·ªòT [LOOP]{"entity": "cpplus_content", "value": "loop"} XEM N√ÄO
    - [variable](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [switch](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [pass-by-value](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [loop](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - E bay gio bay t cach thuc de co the dung 1 bien kieu [signed](cpplus_content) de a bot
    - How to d√πng c√°i syntax [Typedef]{"entity": "cpplus_content", "value": "typedef"} v bot chat ???
    - [to√°n t·ª≠ m·ªôt ng√¥i]{"entity": "cpplus_content", "value": "unary-operator"} dc l√†m ra nh∆∞ th·∫ø n√†o khi vi·∫øt code v bot nh·ªâ?
    - C√∫ ph√°p c·ªßa [do-while](cpplus_content) l√† g√¨
    - S·ª¨ D·ª§NG C√ÅCH TH·ª®C N√ÄO ƒê·ªÇ C√ì TH·ªÇ S·ª¨ D·ª§NG ƒê∆Ø·ª¢C M·ªòT [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} TRONG C++ TH·∫æ BOT ?
    - C√∫ ph√°p c·ªßa [ternary-operator](cpplus_content) l√† g√¨
    - L√†m s ƒë·ªÉ x√†i dc [m·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} th·∫ø bot?
    - [do while]{"entity": "cpplus_content", "value": "do-while"} dc vi·∫øt ra l√†m sao th·∫ø?
    - [M·∫£ng]{"entity": "cpplus_content", "value": "array"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - m√¨nh kh√¥ng bi·∫øt khai b√°o m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"}
    - C√∫ ph√°p c·ªßa [pass-by-reference](cpplus_content) l√† g√¨
    - lam the nao de trien khai 1 [namespace](cpplus_content) o c++ the bot?
    - √ä BOT ∆†I HOW TO S·ª¨ D·ª§NG [COMMENT]{"entity": "cpplus_content", "value": "comment"} ?
    - [for](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [string](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [switch](cpplus_content)
    - B·∫±ng c√°ch n√†o th√¨ t c√≥ th·ªÉ d√πng 1 h√†m [macro](cpplus_content) trong c++ ƒë√¢y bot?
    - C√∫ ph√°p c·ªßa [class](cpplus_content) l√† g√¨
    - [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} dc tri·ªÉn khai NTN ?
    - C√∫ ph√°p c·ªßa [nested-if](cpplus_content) l√† g√¨
    - C√∫ ph√°p [increment-operator](cpplus_content)
    - l√†m s ƒë·ªÉ truy·ªÅn 1 [Argument]{"entity": "cpplus_content", "value": "argument"} trong l·ªùi g·ªçi h√†m v bot?
    - T k bi·∫øt declare m·ªôt [variable](cpplus_content), ch·ªâ t v·ªõi dc k?
    - [selection-statement](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Gio minh muon implement ra dc cai [ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"} thi lam sao day bot ?
    - L√ÄM C√ÅCH N√ÄO KH·ªûI T·∫†O [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} TRONG C++ V·∫¨Y B·∫†N ∆†I ?
    - [unary-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - 1 bi·∫øn m√† c√≥ ch·ªØ [const]{"entity": "cpplus_content", "value": "constant"} ph√≠a tr∆∞·ªõc th√¨ vi·∫øt ntn v bot?
    - [main-function](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [boolean](cpplus_content) l√† g√¨
    - [lambda](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [auto](cpplus_content) l√† g√¨
    - √ä L√ÄM SAO ƒê·ªÇ T T·∫†O TH√äM 1 M·ªòT [ARRAY]{"entity": "cpplus_content", "value": "array"} ƒê√ÇY?
    - C√∫ ph√°p [flowchart](cpplus_content)
    - [2d-array](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [if](cpplus_content)
    - C√∫ ph√°p [structure](cpplus_content)
    - Bang cach nao thi t co the dung 1 ham [macro](cpplus_content) trong c++ day bot?
    - OK L√ÄM S ƒê·ªÇ T·∫†O 1 BI·∫æN KI·ªÇU [SHORT]{"entity": "cpplus_content", "value": "short"} ?
    - C√∫ ph√°p c·ªßa [structure](cpplus_content) l√† g√¨
    - ch·ªâ iem c√°ch vi·∫øt m·ªôt [Loop]{"entity": "cpplus_content", "value": "loop"} ƒëi
    - C√∫ ph√°p [bitwise-operator](cpplus_content)
    - [reference-variable](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - l√†m sao ƒë·ªÉ tui t·∫°o ra m·ªôt [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} ƒë√¢y
    - dung cach thuc gi de xai dc [struct]{"entity": "cpplus_content", "value": "structure"} the?
    - C√ÅCH H·ªåC [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - how to s·ª≠ d·ª•ng ki·ªÉu [enum]{"entity": "cpplus_content", "value": "enumeration"} ?
    - Cach tao ra [matrix]{"entity": "cpplus_content", "value": "2d-array"} trong c++?
    - D√ôNG [STRUCT]{"entity": "cpplus_content", "value": "structure"} TRONG CPP KI·ªÇU G√å TH·∫æ?
    - l√†m sao t√¥i c√≥ th·ªÉ khai b√°o m·ªôt [TH∆Ø VI·ªÜN]{"entity": "cpplus_content", "value": "library"} ƒë∆∞·ª£c ?
    - C√∫ ph√°p c·ªßa [enumeration](cpplus_content) l√† g√¨
    - [operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - lam cach nao de t co the khai bao duoc mot cai [do while]{"entity": "cpplus_content", "value": "do-while"} v?
    - [include](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [pointer](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [long](cpplus_content) l√† g√¨
    - ch·ªâ t c√°ch s·ª≠ d·ª•ng t·ª´ kh√≥a [continue](cpplus_content) ƒëi
    - lam s de xai dc kieu [union](cpplus_content)
    - C√°ch g·ªçi [h√†m]{"entity": "cpplus_content", "value": "function"}
    - C√∫ ph√°p c·ªßa [assignment-operator](cpplus_content) l√† g√¨
    - how to tao ra mot vong [FOR]{"entity": "cpplus_content", "value": "for"} v m
    - C√ÅCH D√ôNG [STRUCT]{"entity": "cpplus_content", "value": "structure"} NH∆Ø TH·∫æ N√ÄO V
    - 1 bien ma co chu [const]{"entity": "cpplus_content", "value": "constant"} phia truoc thi viet ntn v bot?
    - Cu phap cua [pseudo-code](cpplus_content) la gi
    - [INCLUDE]{"entity": "cpplus_content", "value": "include"} TRONG C++ ƒêC S·ª¨ D·ª§NG NH∆Ø TH·∫æ N√ÄO?
    - [namespace](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - √ä ch·ªâ tao c√°ch tri·ªÉn khai [ki·ªÉu lu·∫≠n l√Ω]{"entity": "cpplus_content", "value": "boolean"} cho n√≥ ra j xem n√†o
    - lam the lao de tao dc 1 bien co kieu [unsigned](cpplus_content) ?
    - t√¥i kh√¥ng bi·∫øt l√†m sao ƒë·ªÉ t·∫°o m·ªôt [Struct]{"entity": "cpplus_content", "value": "structure"}
    - Lam cach nao de t viet ra dc mot cau [do while]{"entity": "cpplus_content", "value": "do-while"} day
    - [address_of-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - lam sao de minh co the su dung duoc [break](cpplus_content)?
    - l√†m th·∫ø qu√°i n√†o ƒë·ªÉ t·∫°o ra m·ªôt c√¢u [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} b√¢y gi·ªù?
    - L√ÄM SAO ƒê·ªÇ S·ª¨ D·ª§NG ƒêC C√ÅI [COMMENT]{"entity": "cpplus_content", "value": "comment"} TRONG C++ TH·∫æ?
    - C√∫ ph√°p [inline-function](cpplus_content)
    - [return-type](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√†m c√°ch n√†o khai b√°o [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} trong c++ v·∫≠y b·∫°n ∆°i ?
    - l√†m s ƒë·ªÉ t·∫°o ra ƒë∆∞·ª£c m·ªôt v√≤ng [do while]{"entity": "cpplus_content", "value": "do-while"} ƒë√¢y ta
    - [auto](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - ban oi lam cach nao de co the viet ra dc 1 cai ham [lambda](cpplus_content) zay
    - C√∫ ph√°p [selection-statement](cpplus_content)
    - 1 [bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"} dc khai bao ra sao v bot
    - [jump-statement](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - Lam s de xai dc [mang hai chieu]{"entity": "cpplus_content", "value": "2d-array"} the bot?
    - c√°ch d√πng [do while]{"entity": "cpplus_content", "value": "do-while"} trong c++
    - L√ÄM C√ÅCH N√ÄO ƒê·ªÇ IMPLEMENT RA DC M·ªòT H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} TH·∫æ BOT?
    - [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} khi truy·ªÅn v√†o 1 h√†m dc tri·ªÉn khai nh∆∞ th·∫ø n√†o v bot?
    - [array](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - b√†y iem c√°ch vi·∫øt t·∫°o ra [LOOP]{"entity": "cpplus_content", "value": "loop"} ƒëi ianh
    - [return-type](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - l√†m sao ƒë·ªÉ t c√≥ th·ªÉ declare m·ªôt [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} v?
    - C√∫ ph√°p c·ªßa [comma-operator](cpplus_content) l√† g√¨
    - [For]{"entity": "cpplus_content", "value": "for"} ƒë∆∞·ª£c s·ª≠ d·ª•ng nh∆∞ th·∫ø n√†o ?
    - C√∫ ph√°p [operator](cpplus_content)
    - C√∫ ph√°p c·ªßa [argument](cpplus_content) l√† g√¨
    - Cu phap cua [include](cpplus_content) la gi
    - C√ÅCH T·∫†O RA V√íNG [FOR]{"entity": "cpplus_content", "value": "for"} NH∆Ø TH·∫æ N√ÄO ƒê√ÇY
    - C√∫ ph√°p [constant](cpplus_content)
    - l√†m th·∫ø l√†o ƒë·ªÉ t·∫°o dc 1 bi·∫øn c√≥ ki·ªÉu [unsigned](cpplus_content) ?
    - [inline-function](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - lam s de viet dc 1 ham [de quy]{"entity": "cpplus_content", "value": "recursion"}
    - [external](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - CH·ªà T C√ÅCH S·ª¨ D·ª§NG T·ª™ KH√ìA [CONTINUE]{"entity": "cpplus_content", "value": "continue"} ƒêI
    - v·∫Ω [flowchart](cpplus_content) nh∆∞ th·∫ø n√†o v·∫≠y bot?
    - L√ÄM SAO ƒê·ªÇ DECLARE M·ªòT C√ÇU [ƒêI·ªÄU KI·ªÜN]{"entity": "cpplus_content", "value": "if"}
    - Ch·ªâ b·ªë m c√°ch t·∫°o ra m·ªôt v√≤ng [For]{"entity": "cpplus_content", "value": "for"} ƒëi
    - C√∫ ph√°p [do-while](cpplus_content)
    - N√à KU L√ÄM S ƒê·ªÇ T T·∫†O RA 1 BI·∫æN KI·ªÇU [SHORT]{"entity": "cpplus_content", "value": "short"} ƒê√ÇY?
    - C√∫ ph√°p c·ªßa [pseudo-code](cpplus_content) l√† g√¨
    - C√∫ ph√°p [shift-operator](cpplus_content)
    - C√∫ ph√°p c·ªßa [jump-statement](cpplus_content) l√† g√¨
    - [Loop]{"entity": "cpplus_content", "value": "loop"} trong C++ dc implement nh∆∞ th·∫ø n√†o?
    - CH·ªà M√åNH C√ÅCH T·∫†O RA M·ªòT [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} V·ªöI
    - 1 c√¢u [if](cpplus_content) trong cpp dc vi·∫øt ntn?
    - C√ÅCH T·∫¢I [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - [return](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [String]{"entity": "cpplus_content", "value": "string"} th√¨ d√πng ntn?
    - [Loop]{"entity": "cpplus_content", "value": "loop"} trong C++ dc implement nhu the nao?
    - [operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - l√†m c√°ch n√†o ƒë·ªÉ t c√≥ th·ªÉ khai b√°o ƒë∆∞·ª£c m·ªôt c√°i [do while]{"entity": "cpplus_content", "value": "do-while"} v?
    - C√∫ ph√°p c·ªßa [2d-array](cpplus_content) l√† g√¨
    - [ƒê·ªá quy]{"entity": "cpplus_content", "value": "recursion"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [Arrays]{"entity": "cpplus_content", "value": "array"} trong c++ ƒëc vi·∫øt th·∫ø n√†o th·∫ø?
    - [signed](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - √ä N√ÄM THAO ƒê·ªÇ T T·∫†O RA DC 1 BI·∫æN [UNSIGNED]{"entity": "cpplus_content", "value": "unsigned"} TRONG C++ ƒê√ÇY BOT?
    - l·ªánh [switch](cpplus_content) case d√πng nh∆∞ th·∫ø n√†o?
    - [Ki·ªÉu lu·∫≠n l√Ω]{"entity": "cpplus_content", "value": "boolean"} d√πng ntn v ???
    - C√∫ ph√°p c·ªßa [short](cpplus_content) l√† g√¨
    - [wchar_t](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [namespace](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√ÄM SAO T√îI C√ì TH·ªÇ KHAI B√ÅO M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} ƒê∆Ø·ª¢C ?
    - D√πng [class](cpplus_content) nh∆∞ th·∫ø n√†o?
    - [loop](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - l√†m c√°ch j ƒë·ªÉ ra dc 1 [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} z·ªã bot uiii
    - [bitwise-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - e bot oi how to su dung [Comment]{"entity": "cpplus_content", "value": "comment"} ?
    - C√∫ ph√°p c·ªßa [selection-statement](cpplus_content) l√† g√¨
    - L√ÄM TH·∫æ QU√ÅI N√ÄO ƒê·ªÇ T·∫†O RA M·ªòT [ARRAY]{"entity": "cpplus_content", "value": "array"} V?
    - Lam cach nao de ta co the su dung duoc mot [namespace](cpplus_content) trong C++?
    - [bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"} dc khai bao nam thao thia ?
    - B·∫∞NG C√ÅCH N√ÄO TH√å T C√ì TH·ªÇ D√ôNG 1 H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} TRONG C++ ƒê√ÇY BOT?
    - C√ì C√ÅCH N√ÄO ƒê·ªÇ T√îI T·∫†O M·ªòT [STRUCT]{"entity": "cpplus_content", "value": "structure"} KH√îNG
    - c√°ch ƒë·ªÉ implement t·ª´ kh√≥a [break](cpplus_content)
    - C√∫ ph√°p c·ªßa [static](cpplus_content) l√† g√¨
    - B·∫∞NG C√ÅCH N√ÄO TH√å TA C√ì TH·ªÇ D√ôNG [INCLUDE]{"entity": "cpplus_content", "value": "include"} TRONG C++ DC V?
    - [increment-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - t√¥i kh√¥ng bi·∫øt l√†m sao ƒë·ªÉ t·∫°o m·ªôt [M·∫¢NG]{"entity": "cpplus_content", "value": "array"}
    - Viet [mang mot chieu]{"entity": "cpplus_content", "value": "array"} thi viet nhu the nao day bot?
    - Cai syntax ve [typedef](cpplus_content) dung lam sao i nhi ?
    - [Function]{"entity": "cpplus_content", "value": "function"} dc vi·∫øt nh∆∞ th·∫ø n√†o v?
    - C√∫ ph√°p c·ªßa [goto](cpplus_content) l√† g√¨
    - C√∫ ph√°p [floating-point](cpplus_content)
    - lam s de t viet vong lap [For]{"entity": "cpplus_content", "value": "for"} day m
    - Vi·∫øt m·ªôt h√†m [recursion](cpplus_content) th√¨ ph·∫£i l√†m s th·∫ø bot chat?
    - C√∫ ph√°p [external](cpplus_content)
    - ƒê·ªÉ d√πng dc ki·ªÉu [string](cpplus_content) c·∫ßn ph·∫£i l√†m nh∆∞ th·∫ø n√†o?
    - V√≤ng l·∫∑p [for](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [built-in-function](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p [address_of-operator](cpplus_content)
    - C√∫ ph√°p [long](cpplus_content)
    - c√°ch h·ªçc [c]{"entity": "cpplus_content", "value": "cplusplus"}++
    - C√ÅCH S·ª¨ D·ª§NG [NAMEPSACE]{"entity": "cpplus_content", "value": "namespace"} ?
    - How to dung cai syntax [Typedef]{"entity": "cpplus_content", "value": "typedef"} v bot chat ???
    - [Toan tu hai ngoi]{"entity": "cpplus_content", "value": "binary-operator"} dc trien khai ra lam sao the ha bot?
    - T·∫°o 1 [MA TR·∫¨N]{"entity": "cpplus_content", "value": "2d-array"} trong c++ nh∆∞ th·∫ø n√†o?
    - 1 chiec [toan tu tang]{"entity": "cpplus_content", "value": "increment-operator"} dc khai bao ra sao the bot?
    - [Ki·ªÉu lu·∫≠n l√Ω]{"entity": "cpplus_content", "value": "boolean"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - M·ªôt [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} dc khai b√°o nh∆∞ th·∫ø n√†o trong C++ th·∫ø ?
    - lenh [switch](cpplus_content) case dung nhu the nao?
    - T√îI KH√îNG BI·∫æT L√ÄM SAO ƒê·ªÇ T·∫†O M·ªòT [M·∫¢NG]{"entity": "cpplus_content", "value": "array"}
    - C√∫ ph√°p c·ªßa [continue](cpplus_content) l√† g√¨
    - ch·ªâ m√¨nh c√°ch ƒë·ªÉ vi·∫øt m·ªôt c√¢u [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} ƒëi b·∫°n
    - C√∫ ph√°p c·ªßa [decrement-operator](cpplus_content) l√† g√¨
    - [H√†m]{"entity": "cpplus_content", "value": "function"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [structure](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - e bot gio t muon dung [toan tu tang]{"entity": "cpplus_content", "value": "increment-operator"} thi lam nhu the nao?
    - [do-while](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - L√†m s ƒë·ªÉ c√≥ th·ªÉ [truy·ªÅn tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} v√¥ 1 h√†m dc th·∫ø?
    - L√†m s ƒë·ªÉ khai b√°o ra dc 1 c√°i [h√†m]{"entity": "cpplus_content", "value": "function"} trong c++ v bot
    - Lam cach nao de tao ra dc 1 cai [ma tran]{"entity": "cpplus_content", "value": "2d-array"} the bot chat /
    - B√¢y gi·ªù l√†m sao ƒë·ªÉ t c√≥ th·ªÉ s·ª≠ d·ª•ng ƒë∆∞·ª£c t·ª´ kh√≥a [break](cpplus_content) ƒë√¢y?
    - t√¥i kh√¥ng bi·∫øt c√°ch khai b√°o m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} trong c++
    - Cu phap cua [short](cpplus_content) la gi
    - Cu phap cua [variable](cpplus_content) la gi
    - lam the nao de t tao ra mot vong [for](cpplus_content) day
    - [goto](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [inline-function](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - M√¨nh th·∫Øc m·∫Øc l√† l√†m s ƒë·ªÉ c√≥ th·ªÉ t·∫°o ra 1 [h√†m]{"entity": "cpplus_content", "value": "function"} trong c++ ƒë√¢y bot?
    - [integer](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - Ch·ªâ t c√°ch s·ª≠ d·ª•ng t·ª´ kh√≥a [continue](cpplus_content) ƒëi
    - Lam s de co the [truyen tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} vo 1 ham dc the?
    - L√†m sao ƒë·ªÉ ta c√≥ th·ªÉ t·∫°o ra bi·∫øn c√≥ ki·ªÉu d·ªØ li·ªáu l√† [long](cpplus_content) trong cpp?
    - [Operator]{"entity": "cpplus_content", "value": "operator"} dc vi·∫øt ra l√†m sao v bot?
    - L√†m s ƒë·ªÉ s·ª≠ d·ª•ng dc 1 [ki·ªÉu d·ªØ li·ªáu]{"entity": "cpplus_content", "value": "data-type"}
    - Tri·ªÉn khai [to√°n t·ª≠ ba ng√¥i]{"entity": "cpplus_content", "value": "ternary-operator"} ra l√†m sao v chatbot?
    - C√∫ ph√°p [decrement-operator](cpplus_content)
    - [variable](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - vi·∫øt [to√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"} ra l√†m sao th·∫ø bot?
    - lam sao de t co the ve dc [flowchart](cpplus_content) day chatbot?
    - Cu phap cua [unsigned](cpplus_content) la gi
    - [binary-operator](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - L√ÄM TH·∫æ N√ÄO ƒê·ªÇ T T·∫†O RA M·ªòT V√íNG [WHILE]{"entity": "cpplus_content", "value": "while"} ƒê√ÇY M√ÄY
    - cach viet [switch](cpplus_content) case
    - C√∫ ph√°p c·ªßa [default-value](cpplus_content) l√† g√¨
    - l√†m sao ƒë·ªÉ s·ª≠ d·ª•ng [BREAK]{"entity": "cpplus_content", "value": "break"} ƒë√¢y ta
    - C√≥ c√°ch n√†o ƒë·ªÉ t√¥i t·∫°o m·ªôt [struct]{"entity": "cpplus_content", "value": "structure"} kh√¥ng
    - l√†m sao ƒë·ªÉ khai b√°o m·ªôt m·ªôt [Struct]{"entity": "cpplus_content", "value": "structure"} trong c++ ?
    - h√†m [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"} dc implement th·∫ø n√†o trong c++ v bot?
    - Su dung [double](cpplus_content) trong c++ ntn the?
    - su dung tinh nang [comment](cpplus_content) trong c++ ntn?
    - C√∫ ph√°p [recursion](cpplus_content)
    - [selection-statement](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - [reference-variable](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - vi·∫øt m·ªôt v√≤ng l·∫∑p [for](cpplus_content) trong c++ th√¨ ph·∫£i l√†m nh·ªØng g√¨?
    - Gi·ªù m√¨nh mu·ªën implement ra dc c√°i [ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"} th√¨ l√†m sao ƒë√¢y bot ?
    - [enumeration](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [for](cpplus_content)
    - √ä ku l√†m s ƒë·ªÉ t·∫°o dc m·ªôt bi·∫øn ki·ªÉu [long](cpplus_content) th·∫ø
    - Su dung cach thuc nao de co the su dung duoc mot [namespace](cpplus_content) trong C++ the bot ?
    - L√ÄM C√ÅCH N√ÄO ƒê·ªÇ T·∫†O RA DC 1 C√ÅI [MA TR·∫¨N]{"entity": "cpplus_content", "value": "2d-array"} TH·∫æ BOT CHAT /
    - C√∫ ph√°p [2d-array](cpplus_content)
    - Ntn de co the [truyen tham tri]{"entity": "cpplus_content", "value": "pass-by-value"} vao 1 ham dc day bot?
    - C√∫ ph√°p [unsigned](cpplus_content)
    - C√∫ ph√°p [cplusplus](cpplus_content)
    - Lam the nao de t tao ra mot vong [While]{"entity": "cpplus_content", "value": "while"} day may
    - [switch](cpplus_content) ch·∫°y nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [unary-operator](cpplus_content) l√† g√¨
    - [For]{"entity": "cpplus_content", "value": "for"} duoc su dung nhu the nao ?
    - Minh thac mac la lam s de co the tao ra 1 [ham]{"entity": "cpplus_content", "value": "function"} trong c++ day bot?
    - c√°ch d√πng [struct]{"entity": "cpplus_content", "value": "structure"} nh∆∞ th·∫ø n√†o v
    - 1 H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} TRONG C++ DC VI·∫æT NH∆Ø TH·∫æ N√ÄO?
    - [pass-by-value](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - tu khoa [break](cpplus_content) dc dung ntn the?
    - N√≥i cho t√¥i bi·∫øt c√°ch khai b√°o m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} nh∆∞ th·∫ø n√†o kh√¥ng
    - KHAI B√ÅO 1 [CLASS]{"entity": "cpplus_content", "value": "class"} NH∆Ø TH·∫æ N√ÄO ?
    - C√∫ ph√°p c·ªßa [dereference-operator](cpplus_content) l√† g√¨
    - C√°i [const]{"entity": "cpplus_content", "value": "constant"} ƒë∆∞a v√†o code th√¨ implement l√†m s ·∫•y nh·ªâ?
    - C√∫ ph√°p [short](cpplus_content)
    - [Macro]{"entity": "cpplus_content", "value": "macro"} trong c++ dc dung nhu the nao vay??
    - C√∫ ph√°p c·ªßa [wchar_t](cpplus_content) l√† g√¨
    - [dereference-operator](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - lam s de co su dung dc cac [ham dung san]{"entity": "cpplus_content", "value": "built-in-function"} the bot iu?
    - [short](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - [M·∫£ng 2 chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - khai bao kieu du lieu [pointer](cpplus_content) ntn?
    - [Toan tu ++]{"entity": "cpplus_content", "value": "increment-operator"} cach su dung
    - [boolean](cpplus_content) ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o
    - C√∫ ph√°p c·ªßa [namespace](cpplus_content) l√† g√¨
- intent: cpplus_what_asking
  examples: |
    - T·ª™ KH√ìA [RETURN]{"entity": "cpplus_content", "value": "return"} L√Ä G√å?
    - [s·ªë th·ª±c]{"entity": "cpplus_content", "value": "floating-point"} trong c++ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a th·∫ø n√†o v m
    - the nao la mot [string](cpplus_content)?
    - Mot [Kieu dau cham dong]{"entity": "cpplus_content", "value": "floating-point"} la j
    - nh∆∞ th·∫ø n√†o l√† [Return]{"entity": "cpplus_content", "value": "return"}?
    - [C·∫§U TR√öC]{"entity": "cpplus_content", "value": "structure"} L√Ä G√å?
    - NH∆Ø TH·∫æ N√ÄO L√Ä M·ªòT [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} TRONG C++ V·∫¨Y AK
    - [cin](cpplus_content) la gi?
    - 1 [bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"} ·ªü c++ l√† j?
    - [Lop]{"entity": "cpplus_content", "value": "class"} trong c++?
    - [cin](cpplus_content) l√† g√¨?
    - T·ª™ KH√ìA [CONTINUE]{"entity": "cpplus_content", "value": "continue"}?
    - thu noi ve [Con Tro]{"entity": "cpplus_content", "value": "pointer"} xem
    - ng∆∞·ªùi ta hay vi·∫øt t·ª´ [char]{"entity": "cpplus_content", "value": "character"}, n√≥ c√≥ nghƒ©a l√† sao v·∫≠y?
    - [M·∫¢NG HAI CHI·ªÄU]{"entity": "cpplus_content", "value": "2d-array"} L√Ä G√å?
    - [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} l√† g√¨ ?
    - K·ªÇ NGHE V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} ƒêI
    - v√≤ng l·∫∑p [While]{"entity": "cpplus_content", "value": "while"} l√† g√¨ v th kia?
    - [INT]{"entity": "cpplus_content", "value": "integer"} l√† j
    - [h√†m]{"entity": "cpplus_content", "value": "function"} trong c++
    - TH·∫æ N√ÄO M·ªòT [C·∫§U TR√öC]{"entity": "cpplus_content", "value": "structure"}?
    - The nao mot [STRUCTURE]{"entity": "cpplus_content", "value": "structure"}?
    - [unsigned variable]{"entity": "cpplus_content", "value": "unsigned"} la gj????
    - NH∆Ø L√ÄO L√Ä [MACRO]{"entity": "cpplus_content", "value": "macro"} H·∫¢ CON CH√ì BOT
    - [m·∫£ng]{"entity": "cpplus_content", "value": "array"} l√† c√°i v·∫πo g√¨ v?
    - [Th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} l√† g√¨
    - [enumeration](cpplus_content) la clgt?
    - Hay noi t nghe ve [DEREFERENCE OPERATOR]{"entity": "cpplus_content", "value": "dereference-operator"}
    - Nao, ke cho minh nghe nhung gi ban biet ve [Toan tu ba ngoi]{"entity": "cpplus_content", "value": "ternary-operator"} duoc k
    - tui nghe bao ve [Dau cham dong]{"entity": "cpplus_content", "value": "floating-point"}, no la j v
    - [Goto]{"entity": "cpplus_content", "value": "goto"} statement l√† g√¨?
    - TRONG C++ T·ª™ KH√ìA [RETURN]{"entity": "cpplus_content", "value": "return"} ƒê∆Ø·ª¢C D√ôNG ƒê·ªÇ L√ÄM G√å V·∫¨Y?
    - Cai tu khoa [static](cpplus_content) khi di chung voi viec khai bao bien thi no co su khac biet gi k bot
    - [C]{"entity": "cpplus_content", "value": "cplusplus"}++ la j ?
    - [con tro]{"entity": "cpplus_content", "value": "pointer"}?
    - [luu do thuat toan]{"entity": "cpplus_content", "value": "flowchart"} la sao vay bot ?
    - TH·∫æ N√ÄO L√Ä M·ªòT [POINTER]{"entity": "cpplus_content", "value": "pointer"}?
    - [Comma operator]{"entity": "cpplus_content", "value": "comma-operator"}
    - [FLOAT]{"entity": "cpplus_content", "value": "floating-point"} L√Ä CLGT
    - th·∫ø n√†o l√† ki·ªÉu [Character]{"entity": "cpplus_content", "value": "character"} trong c++
    - TH·∫æ N√ÄO L√Ä [RECURSION]{"entity": "cpplus_content", "value": "recursion"}?
    - Ki·ªÉu [k√≠ t·ª±]{"entity": "cpplus_content", "value": "character"} trong c++ l√† g√¨?
    - [Built in function]{"entity": "cpplus_content", "value": "built-in-function"} l√† wtf
    - [Toan tu logic]{"entity": "cpplus_content", "value": "logical-operator"} la cm gi v lz que
    - Kh√°i ni·ªám v·ªÅ [Chu·ªói]{"entity": "cpplus_content", "value": "string"}?
    - [TYPE MODIFER]{"entity": "cpplus_content", "value": "type-modifier"} L√Ä WTF
    - cho emm h·ªèi v·ªÅ [to√°n t·ª≠ g√°n]{"entity": "cpplus_content", "value": "assignment-operator"} ƒëi anh ∆°i
    - H√ÄM [MAIN]{"entity": "cpplus_content", "value": "main-function"} ?
    - t·ª´ kh√≥a [break](cpplus_content)?
    - [Nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"} l√† g√¨ v bot ng√°o chim
    - Th·∫ø n√†o l√† 1 [variables]{"entity": "cpplus_content", "value": "variable"} ?
    - T·ª™ KH√ìA [SIGNED]{"entity": "cpplus_content", "value": "signed"} l√† gj?
    - the nao la [cin](cpplus_content) trong c++?
    - N√ìI G√å V·ªÄ [H√ÄM]{"entity": "cpplus_content", "value": "function"} T NGHE XEM
    - nh·ªØng ki·∫øn th·ª©c c∆° b·∫£n v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"}
    - [bien]{"entity": "cpplus_content", "value": "variable"} la cai quai gi the?
    - h√£y cho t·ªõ bi·∫øt th·∫ø n√†o l√† 1 [s∆° ƒë·ªì thu·∫≠t to√°n]{"entity": "cpplus_content", "value": "flowchart"} ???
    - [toan tu phay]{"entity": "cpplus_content", "value": "comma-operator"}, sua gi ve noi xem nao
    - ki·ªÉu [float]{"entity": "cpplus_content", "value": "floating-point"} l√† j
    - [while](cpplus_content) loop l√† nh∆∞ th·∫ø n√†o v m?
    - [OPERATORS]{"entity": "cpplus_content", "value": "operator"} L√Ä G√å?
    - [m·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} l√† g√¨?
    - dinh nghia vong [For]{"entity": "cpplus_content", "value": "for"} trong c++ la j vay m?
    - noi gi ve [Cau Truc]{"entity": "cpplus_content", "value": "structure"} xem
    - THE NAO LA MOT [VECTOR]{"entity": "cpplus_content", "value": "vector"}
    - [FLOAT]{"entity": "cpplus_content", "value": "floating-point"} L√Ä G√å
    - c√¥ ∆°i n√≥i cho em nghe [if else]{"entity": "cpplus_content", "value": "if-else"} ƒëi ·∫°
    - [FLOAT]{"entity": "cpplus_content", "value": "floating-point"} TRONG C++ LA GI
    - [M·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"}
    - TH·ª¨ N√ìI V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} XEM
    - [H·∫∞NG S·ªê]{"entity": "cpplus_content", "value": "constant"} TRONG C++?
    - nh∆∞ th·∫ø n√†o l√† 1 [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"}?
    - ki·ªÉu [int]{"entity": "cpplus_content", "value": "integer"} trong c++ l√† j
    - THE NAO LA MOT [BIEN TOAN CUC]{"entity": "cpplus_content", "value": "global-variable"} THE ?
    - √ä bot [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} l√† j th·∫ø?
    - [Bi·∫øn]{"entity": "cpplus_content", "value": "variable"} l√† g√¨?
    - [To√°n t·ª≠ quan h·ªá]{"entity": "cpplus_content", "value": "comparison-operator"} b·∫£n ch·∫•t l√† j
    - The nao la [Recursion]{"entity": "cpplus_content", "value": "recursion"}?
    - Gi·∫£i th√≠ch c√°i [To√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"} xem
    - [COMMENT]{"entity": "cpplus_content", "value": "comment"} TRONG C++ L√Ä G√å?
    - C√ÇU L·ªÜNH [ƒêI·ªÄU KI·ªÜN]{"entity": "cpplus_content", "value": "if"} TRONG C++ L√Ä GI?
    - TH·∫æ N√ÄO L√Ä M·ªòT [BI·∫æN TO√ÄN C·ª§C]{"entity": "cpplus_content", "value": "global-variable"} TH·∫æ ?
    - [Bien]{"entity": "cpplus_content", "value": "variable"} la gi?
    - TH·∫æ N√ÄO L√Ä M·ªòT KI·ªÇU [Auto]{"entity": "cpplus_content", "value": "auto"}?
    - Nhu nao la 1 [BREAK]{"entity": "cpplus_content", "value": "break"} vay ban hien?
    - KIEU [DOUBLE]{"entity": "cpplus_content", "value": "double"} LA NHU THE NAO TRONG C++ VAY
    - [IF ELSE]{"entity": "cpplus_content", "value": "if-else"} L√Ä GI?
    - cho hoi [REFERENCE VARIABLE]{"entity": "cpplus_content", "value": "reference-variable"}?
    - [FUNCTION]{"entity": "cpplus_content", "value": "function"} L√Ä G√å?
    - nhu the nao la mot [Ham nac danh]{"entity": "cpplus_content", "value": "lambda"} the bot?
    - [RETURN]{"entity": "cpplus_content", "value": "return"} L√Ä G√å?
    - cho v√†i t√≠ x√≠u review v·ªÅ m√¥n [nmlt]{"entity": "cpplus_content", "value": "introduction-to-programming"} ƒëi bot
    - [M·∫£ng 2 chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} l√† g√¨ ?
    - [Assignment operator]{"entity": "cpplus_content", "value": "assignment-operator"} la j?
    - [kieu dau cham dong]{"entity": "cpplus_content", "value": "floating-point"} trong c++ la gi
    - [Pseudo code]{"entity": "cpplus_content", "value": "pseudo-code"} l√† shaoooo
    - N√≥i g√¨ v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"} t nghe xem
    - Th·∫ø [Truy·ªÅn tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} l√† j?
    - [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} L√Ä C√ÅI QU√ÅI G√å TH·∫æ?
    - [DECREMENT OPERATOR]{"entity": "cpplus_content", "value": "decrement-operator"} la clgt ban hien ?
    - KH√ÅI NI·ªÜM V·ªÄ [POINTER]{"entity": "cpplus_content", "value": "pointer"}?
    - [Goto]{"entity": "cpplus_content", "value": "goto"} statement la gi?
    - [Pseudo code]{"entity": "cpplus_content", "value": "pseudo-code"} la shaoooo
    - hey hey hey, [toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"} la s
    - n√≥i cho iem nghe v·ªÅ [main function]{"entity": "cpplus_content", "value": "main-function"} ƒëi a uiii
    - hay cho tao biet nhung gi m biet ve [dereference operator]{"entity": "cpplus_content", "value": "dereference-operator"} di th ngu bot
    - N√£o lz bot bi·∫øt g√¨ v·ªÅ [arithmetic operator]{"entity": "cpplus_content", "value": "arithmetic-operator"} kh√¥ng ?!
    - hay cho toi biet nhu the nao thi duoc goi la 1 [flowchart](cpplus_content)
    - [cau truc]{"entity": "cpplus_content", "value": "structure"} la j?
    - ngon ngu [c]{"entity": "cpplus_content", "value": "cplusplus"}++ la gi?
    - H√†m [Macro]{"entity": "cpplus_content", "value": "macro"} l√† j v·∫≠y b·∫°n iu
    - [Recursion]{"entity": "cpplus_content", "value": "recursion"} la j
    - m√¨nh mu·ªën bi·∫øt v·ªÅ vi·ªác [truy·ªÅn tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} trong c++ ·∫°
    - [comment](cpplus_content) trong C++ l√† g√¨?
    - th·∫ø n√†o l√† [ki·ªÉu s·ªë nguy√™n]{"entity": "cpplus_content", "value": "integer"} [ki·ªÉu s·ªë th·ª±c]{"entity": "cpplus_content", "value": "floating-point"} v√† [ki·ªÉu double]{"entity": "cpplus_content", "value": "double"}?
    - ƒê·ªäNH NGHƒ®A [PARAMETER]{"entity": "cpplus_content", "value": "parameter"}?
    - [Toan tu ba ngoi]{"entity": "cpplus_content", "value": "ternary-operator"}
    - KI·ªÇU [FLOATING POINTS]{"entity": "cpplus_content", "value": "floating-point"} L√Ä G√å ?
    - The nao mot [thu vien]{"entity": "cpplus_content", "value": "library"}?
    - N√≥i t nghe v·ªÅ [Chu·ªói]{"entity": "cpplus_content", "value": "string"} xem
    - [To√°n t·ª≠ m·ªôt ng√¥i]{"entity": "cpplus_content", "value": "unary-operator"}
    - N√ìI T NGHE V·ªÄ [ENUMS]{"entity": "cpplus_content", "value": "enumeration"} ƒêI BOT
    - [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} l√† g√¨?
    - N√ìI V·ªÄ [CLASS]{"entity": "cpplus_content", "value": "class"} ƒêI B·∫†N
    - trong c++ [V√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a ra sao?
    - The nao la [Toan tu tang]{"entity": "cpplus_content", "value": "increment-operator"}
    - l√™n m·∫°ng coi th·∫•y ng∆∞·ªùi ta c√≥ hay n√≥i v·ªÅ [Global variable]{"entity": "cpplus_content", "value": "global-variable"} v·ªõi [local variable]{"entity": "cpplus_content", "value": "local-variable"}, v·∫≠y r·ªët n√≥ l√† g√¨ v
    - th·∫ø n√†o l√† [i/o]{"entity": "cpplus_content", "value": "input-output"}?
    - Th·∫ø n√†o l√† [do while]{"entity": "cpplus_content", "value": "do-while"}?
    - [ƒê·ªêI S·ªê]{"entity": "cpplus_content", "value": "argument"} L√Ä G√å?
    - gi·∫£i th√≠ch c√°i [to√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"} xem
    - Ki·ªÉu d·ªØ li·ªáu [char]{"entity": "cpplus_content", "value": "character"} l√† j th·∫ø
    - ch·ªâ tao v·ªÅ [tham chi·∫øu h·∫±ng]{"entity": "cpplus_content", "value": "const-reference"} coi con ƒëƒ© bot
    - [Class]{"entity": "cpplus_content", "value": "class"} l√† j?
    - Cu phap [struct]{"entity": "cpplus_content", "value": "structure"} la j
    - b√†n lu·∫≠n s√¥i n·ªïi m·ªôt ch√∫t v·ªÅ [ki·ªÉu li·ªát k√™]{"entity": "cpplus_content", "value": "enumeration"} n√†o ChatBot?
    - nh∆∞ n√†o l√† [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} truy·ªÅn v√†o 1 h√†m
    - [I/O]{"entity": "cpplus_content", "value": "input-output"} TRONG C++ L√Ä G√å?
    - [l∆∞u ƒë·ªì thu·∫≠t to√°n]{"entity": "cpplus_content", "value": "flowchart"} l√† j v·∫≠y bot ?
    - [toan tu quan he]{"entity": "cpplus_content", "value": "comparison-operator"}
    - nh∆∞ th·∫ø n√†o l√† [flow chart]{"entity": "cpplus_content", "value": "flowchart"} ?
    - [GOTO]{"entity": "cpplus_content", "value": "goto"} TRONG C++ L√Ä C√ÅI J?
    - [ki·ªÉu d·ªØ li·ªáu]{"entity": "cpplus_content", "value": "data-type"} l√† chi n√†?
    - Khai niem ve [lop]{"entity": "cpplus_content", "value": "class"} trong c++?
    - ƒê·ªãnh nghƒ©a [H√†m]{"entity": "cpplus_content", "value": "function"} trong c++ l√† s v m?
    - [address_of operator]{"entity": "cpplus_content", "value": "address_of-operator"}
    - m·ªôt [array](cpplus_content) l√† j?
    - [boolean](cpplus_content)
    - what the fack is [MACRO]{"entity": "cpplus_content", "value": "macro"}?
    - [Vector]{"entity": "cpplus_content", "value": "vector"} l√† g√¨?
    - Kh√°i ni·ªám v·ªÅ [m·∫£ng]{"entity": "cpplus_content", "value": "array"}?
    - ƒë·ªãnh nghƒ©a v√≤ng [For]{"entity": "cpplus_content", "value": "for"} trong c++ l√† j v·∫≠y m?
    - [Vector]{"entity": "cpplus_content", "value": "vector"} la gi?
    - nhu nao la mot [Mang hai chieu]{"entity": "cpplus_content", "value": "2d-array"}?
    - cai lon ma chi lai tao khai niem ve [return type]{"entity": "cpplus_content", "value": "return-type"} coi th ngu
    - [toan tu --]{"entity": "cpplus_content", "value": "decrement-operator"} la gj
    - CHO T√îI H·ªéI TH·∫æ N√ÄO L√Ä [STRUCT]{"entity": "cpplus_content", "value": "structure"} V·∫¨Y ·∫†?
    - [To√°n t·ª≠ logic]{"entity": "cpplus_content", "value": "logical-operator"} l√† cm g√¨ v lz qu√®
    - [ƒê·ªÜ QUY]{"entity": "cpplus_content", "value": "recursion"} ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A NTN?
    - [H√ÄM]{"entity": "cpplus_content", "value": "function"} L√Ä G√å?
    - Dinh nghia cua [Switch]{"entity": "cpplus_content", "value": "switch"}?
    - em mu·ªën bi·∫øt th√™m v·ªÅ [if else]{"entity": "cpplus_content", "value": "if-else"} th·∫ßy ·∫°
    - Cu phap [lop]{"entity": "cpplus_content", "value": "class"} la j
    - [INT]{"entity": "cpplus_content", "value": "integer"} L√Ä G√å
    - N√ìI V·ªÄ [STRUCT]{"entity": "cpplus_content", "value": "structure"} ƒêI B·∫†N EII
    - Em zaii ∆°i, k·ªÉ ch·ªã nghe v·ªÅ [h√†m]{"entity": "cpplus_content", "value": "function"} xem n√†o
    - TUI NGHE B·∫¢O V·ªÄ [D·∫§U CH·∫§M ƒê·ªòNG]{"entity": "cpplus_content", "value": "floating-point"}, N√ì L√Ä G√å V
    - [L∆∞u ƒë·ªì thu·∫≠t to√°n]{"entity": "cpplus_content", "value": "flowchart"} l√† c√°i g√¨ v·∫≠y bot ?
    - [L·ªöP]{"entity": "cpplus_content", "value": "class"} L√Ä G√å?
    - [Array]{"entity": "cpplus_content", "value": "array"} l√† g√¨
    - c√¢u l·ªánh [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} trong c++ l√† gi?
    - CHO EM MOT TI THONG TIN VE [KIEU SO NGUYEN]{"entity": "cpplus_content", "value": "integer"} DI NGUOI OI
    - T·ª´ kh√≥a [Static]{"entity": "cpplus_content", "value": "static"} khi ƒëi v·ªõi m·ªôt bi·∫øn l√† gj
    - m bi·∫øt g√¨ v·ªÅ t·ª´ [include](cpplus_content)?
    - ng√¥n ng·ªØ l·∫≠p tr√¨nh [c]{"entity": "cpplus_content", "value": "cplusplus"}++ l√† j?
    - th·∫ø n√†o l√† m·ªôt c√°i [if l·ªìng if]{"entity": "cpplus_content", "value": "nested-if"} v ak
    - KI·ªÇU [WCHAR-T]{"entity": "cpplus_content", "value": "wchar-t"} L√Ä G√å
    - [N·∫£ng hai chi·ªÅu]{"entity": "cpplus_content", "value": "2d-array"} l√† g√¨ th·∫ø
    - TRONG C++ [VARIABLE]{"entity": "cpplus_content", "value": "variable"} ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A NH∆Ø TH·∫æ N√ÄO?
    - [To√°n t·ª≠ ƒë·ªãnh ph·∫°m vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"} l√† j
    - [Unary]{"entity": "cpplus_content", "value": "unary-operator"} l√† j
    - TH·∫æ N√ÄO L√Ä [COMMENT]{"entity": "cpplus_content", "value": "comment"}?
    - len mang coi thay nguoi ta co hay noi ve [Global variable]{"entity": "cpplus_content", "value": "global-variable"} voi [local variable]{"entity": "cpplus_content", "value": "local-variable"}, vay rot no la gi v
    - √ä BOT [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} L√Ä G√å TH·∫æ?
    - [Class]{"entity": "cpplus_content", "value": "class"} la j?
    - [kieu so nguyen]{"entity": "cpplus_content", "value": "integer"} trong c++ la nhu nao vay bot?
    - c√∫n con ∆°i, [function](cpplus_content) l√† g√¨ th·∫ø
    - N√≥i g√¨ v·ªÅ [Return]{"entity": "cpplus_content", "value": "return"} ch∆°i
    - L·ªÜNH [ƒêI·ªÄU KI·ªÜN]{"entity": "cpplus_content", "value": "if"} L√Ä G√å?
    - [bien tham chieu]{"entity": "cpplus_content", "value": "reference-variable"}?
    - [Static]{"entity": "cpplus_content", "value": "static"} khi ƒëi v·ªõi vi·ªác khai b√°o bi·∫øn th√¨ nghƒ©a l√† sao v bot?
    - [truy·ªÅn tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} l√† sao v·∫≠y th·∫ßy
    - [Static]{"entity": "cpplus_content", "value": "static"}
    - cho t√¥i bi·∫øt c√°c kh√°i ni·ªám sau: [h√†m]{"entity": "cpplus_content", "value": "function"}, [ki·ªÉu tr·∫£ v·ªÅ]{"entity": "cpplus_content", "value": "return-type"} v√† [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"}
    - cau lenh [if](cpplus_content) la j?
    - [kieu so nguyen]{"entity": "cpplus_content", "value": "integer"} la sao
    - Say sth about [Toan tu dia chi]{"entity": "cpplus_content", "value": "address_of-operator"} di
    - nh∆∞ th·∫ø n√†o l√† 1 [h√†m]{"entity": "cpplus_content", "value": "function"}
    - [Reference variable]{"entity": "cpplus_content", "value": "reference-variable"}?
    - √ìc lz bot n√≥i [Arithmetic operator]{"entity": "cpplus_content", "value": "arithmetic-operator"} ƒëi
    - [Static]{"entity": "cpplus_content", "value": "static"} la j?
    - [COMMENT]{"entity": "cpplus_content", "value": "comment"} L√Ä G√å?
    - [M·∫£ng 1 chi·ªÅu]{"entity": "cpplus_content", "value": "array"} l√† g√¨ v·∫≠y
    - mot [array](cpplus_content) la j?
    - v√≤ng [While]{"entity": "cpplus_content", "value": "while"}?
    - [l·ªõp]{"entity": "cpplus_content", "value": "class"} l√† j?
    - ke tao nghe ve [bien tinh]{"entity": "cpplus_content", "value": "static"} di bot
    - Th·∫ø n√†o m·ªôt [STRUCTURE]{"entity": "cpplus_content", "value": "structure"}?
    - KI·ªÇU [DOUBLE]{"entity": "cpplus_content", "value": "double"} TRONG C++ L√Ä G√å TH·∫æ
    - th·∫ø n√†o l√† [Enumeration]{"entity": "cpplus_content", "value": "enumeration"}?
    - NH·ªÆNG KI·∫æN TH·ª®C C∆† B·∫¢N V·ªÄ [H√ÄM]{"entity": "cpplus_content", "value": "function"}
    - [switch](cpplus_content) case
    - the nao la 1 [tham so]{"entity": "cpplus_content", "value": "parameter"} va 1 [doi so]{"entity": "cpplus_content", "value": "argument"} trong c++?
    - [Unary]{"entity": "cpplus_content", "value": "unary-operator"} la j
    - [nh·∫≠p m√¥n l·∫≠p trinh]{"entity": "cpplus_content", "value": "introduction-to-programming"} l√† m√¥n h·ªçc g√¨ v?
    - the nao la [C]{"entity": "cpplus_content", "value": "cplusplus"}++ ?
    - NOI CHO TUI NGHE VE [KIEU SO THUC]{"entity": "cpplus_content", "value": "floating-point"} DII
    - [Local Variable]{"entity": "cpplus_content", "value": "local-variable"}
    - [ENUMERATION]{"entity": "cpplus_content", "value": "enumeration"} L√Ä CLGT?
    - [M·∫¢NG M·ªòT CHI·ªÄU]{"entity": "cpplus_content", "value": "array"} L√Ä G√å?
    - [decrement operator]{"entity": "cpplus_content", "value": "decrement-operator"}
    - Oke hello ban, gio cho minh hoi the nao [toan tu hai ngoi]{"entity": "cpplus_content", "value": "binary-operator"} dc k a ?
    - [THAM S·ªê]{"entity": "cpplus_content", "value": "parameter"} L√Ä G√å?
    - CHO T√îI H·ªéI NTN L√Ä M·ªòT [S·ªê NGUY√äN]{"entity": "cpplus_content", "value": "integer"}?
    - [float]{"entity": "cpplus_content", "value": "floating-point"} l√† g√¨
    - n√≠ ∆°i [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} l√† j v·∫≠y
    - [L·ªöP]{"entity": "cpplus_content", "value": "class"} TRONG C++?
    - NG∆Ø·ªúI TA HAY VI·∫æT T·ª™ [CHAR]{"entity": "cpplus_content", "value": "character"}, N√ì C√ì NGHƒ®A L√Ä SAO V·∫¨Y?
    - [argument](cpplus_content) la gi?
    - KIEU DU LIEU [LUAN LY]{"entity": "cpplus_content", "value": "boolean"}
    - N√ìI NH·ªÆNG G√å M BI·∫æT V·ªÄ [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} T NGHE XEM
    - t·ª´ kh√≥a [inclue]{"entity": "cpplus_content", "value": "library"} l√† j?
    - th·∫ø n√†o l√† [cin](cpplus_content) trong c++?
    - [PARAMETER]{"entity": "cpplus_content", "value": "parameter"} L√Ä NH∆Ø TH·∫æ N√ÄO V?
    - [Con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} l√† g√¨?
    - TH·∫æ N√ÄO M·ªòT [STRUCTURE]{"entity": "cpplus_content", "value": "structure"}?
    - T·ª™ KH√ìA [BREAK]{"entity": "cpplus_content", "value": "break"}?
    - ƒê·ªãnh nghƒ©a v·ªÅ [INTEGER]{"entity": "cpplus_content", "value": "integer"} ƒëi
    - Ki·ªÉu d·ªØ li·ªáu [floating-point](cpplus_content) l√† j v·∫≠y
    - lam on noi cho toi nghe ve [Switch]{"entity": "cpplus_content", "value": "switch"} di nguoi oii
    - Th·∫ø n√†o l√† m·ªôt h√†m [macro](cpplus_content) ?
    - The nao la [do while]{"entity": "cpplus_content", "value": "do-while"}?
    - [Tham s·ªë]{"entity": "cpplus_content", "value": "parameter"} l√† g√¨?
    - tu khoa [Break]{"entity": "cpplus_content", "value": "break"} va [Continue]{"entity": "cpplus_content", "value": "continue"} la j?
    - [Lib]{"entity": "cpplus_content", "value": "library"} l√† j
    - Noi cho toi nghe ve [toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"} voi
    - [variable](cpplus_content) l√† g√¨ v·∫≠y bot?
    - TH·∫æ N√ÄO L√Ä M·ªòT [CONSTANT]{"entity": "cpplus_content", "value": "constant"} TRONG C++
    - [M·∫£ng m·ªôt chi·ªÅu]{"entity": "cpplus_content", "value": "array"} l√† g√¨
    - dinh nghia cua [c]{"entity": "cpplus_content", "value": "cplusplus"}++ ?
    - Oc lz bot noi [Arithmetic operator]{"entity": "cpplus_content", "value": "arithmetic-operator"} di
    - DEFINITION C·ª¶A [RECURSION]{"entity": "cpplus_content", "value": "recursion"}?
    - Hay cho bo may biet, the nao la [ham dung san]{"entity": "cpplus_content", "value": "built-in-function"} di
    - [Toan tu quan he]{"entity": "cpplus_content", "value": "comparison-operator"} ban chat la j
    - [signed variable]{"entity": "cpplus_content", "value": "signed"} l√† th·∫ø ƒë√©o n√†o?
    - nh∆∞ n√†o l√† [h√†m n·∫∑c danh]{"entity": "cpplus_content", "value": "lambda"} v·∫≠y bot ?
    - E may oi [ham noi tuyen]{"entity": "cpplus_content", "value": "inline-function"} la gi vay
    - TH·∫æ N√ÄO L√Ä [ARRAY]{"entity": "cpplus_content", "value": "array"}?
    - [GOTO]{"entity": "cpplus_content", "value": "goto"} STATEMENT L√Ä G√å?
    - [ENUM]{"entity": "cpplus_content", "value": "enumeration"} L√Ä G√å TML?
    - [c·∫•u tr√∫c]{"entity": "cpplus_content", "value": "structure"} l√† j?
    - th·∫ø n√†o l√† [Ki·ªÉu lu·∫≠n l√Ω]{"entity": "cpplus_content", "value": "boolean"} trong c√°i c++ lz qu√® n√†y zay
    - n√≥i cho tao bi·∫øt [c]{"entity": "cpplus_content", "value": "cplusplus"}++ l√† j ƒë∆∞·ª£c kh√¥ng?
    - n√≥i g√¨ v·ªÅ [C·∫•u Tr√∫c]{"entity": "cpplus_content", "value": "structure"} xem
    - [nested if]{"entity": "cpplus_content", "value": "nested-if"} l√† c√°i g√¨ n·ªØa v tr·ªùi ∆°i
    - trong c++ c√≥ t·ª´ [include](cpplus_content) l√† sao v m?
    - [RECURSION]{"entity": "cpplus_content", "value": "recursion"} L√Ä WTF?
    - KHAI NIEM VE [LOP]{"entity": "cpplus_content", "value": "class"} TRONG C++?
    - Th·∫ø n√†o l√† [float]{"entity": "cpplus_content", "value": "floating-point"}?
    - [M·∫£ng]{"entity": "cpplus_content", "value": "array"} l√† j?
    - Definition of [flow of control]{"entity": "cpplus_content", "value": "control-flow"} in programming?
    - KH√ÅI NI·ªÜM V·ªÄ [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} ?
    - [HANG SO]{"entity": "cpplus_content", "value": "constant"} TRONG C++ LA GI
    - TH·∫æ N√ÄO L√Ä [ƒê·ªÜ QUY]{"entity": "cpplus_content", "value": "recursion"}?
    - KH√ÅI NI·ªÜM V·ªÄ [INTEGER]{"entity": "cpplus_content", "value": "integer"}?
    - TH·∫æ N√ÄO L√Ä [STRING]{"entity": "cpplus_content", "value": "string"}?
    - M·ªòT [CLASS]{"entity": "cpplus_content", "value": "class"} TRONG C++ ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A NH∆Ø N√ÄO V·∫¨Y BOT?
    - [ƒê·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} l√† j?
    - n√≥i g√¨ v·ªÅ [Con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} ƒëi?
    - THE NAO LA KIEU [DAU CHAM DONG]{"entity": "cpplus_content", "value": "floating-point"}
    - noi nhung gi m biet ve [CHUOI]{"entity": "cpplus_content", "value": "string"} t nghe xem
    - [to√°n t·ª≠ --]{"entity": "cpplus_content", "value": "decrement-operator"} l√† g√¨
    - [Unsigned]{"entity": "cpplus_content", "value": "unsigned"} l√† sao
    - [TYPE MODIFER]{"entity": "cpplus_content", "value": "type-modifier"} L√Ä G√å V EM OIII
    - KH√ÅI NI·ªÜM V·ªÄ [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"}?
    - ke tao nghe ve [namespace](cpplus_content) di
    - [Static]{"entity": "cpplus_content", "value": "static"} l√† j?
    - √ä tao m·ªõi h·ªçc, t th·∫Øc m·∫Øc k bi·∫øt h√†m [main]{"entity": "cpplus_content", "value": "main-function"} l√† j lu√¥n √°
    - [bitwise operator]{"entity": "cpplus_content", "value": "bitwise-operator"} l√† j th·∫ø?
    - [if](cpplus_content)
    - the nao la 1 [Break]{"entity": "cpplus_content", "value": "break"}?
    - [Unsigned]{"entity": "cpplus_content", "value": "unsigned"} la sao
    - ƒê·ªäNH NGHƒ®A V√íNG [FOR]{"entity": "cpplus_content", "value": "for"} TRONG C++ L√Ä G√å V·∫¨Y M?
    - TU KHOA [SIGNED]{"entity": "cpplus_content", "value": "signed"} la gj?
    - cau lenh [dieu kien]{"entity": "cpplus_content", "value": "if"} trong c++ la gi?
    - [L·ªõp]{"entity": "cpplus_content", "value": "class"} trong c++?
    - [ki·ªÉu s·ªë nguy√™n]{"entity": "cpplus_content", "value": "integer"} trong c++ l√† nh∆∞ n√†o v·∫≠y bot?
    - [macro](cpplus_content) l√† wtf
    - Dinh nghia ve [CHUOI]{"entity": "cpplus_content", "value": "string"} trong c++?
    - Nh∆∞ l√†o l√† [Macro]{"entity": "cpplus_content", "value": "macro"} h·∫£ con ch√≥ bot
    - noi cc gi ve [lenh nhay]{"entity": "cpplus_content", "value": "jump-statement"} coi th lz
    - [Assignment operator]{"entity": "cpplus_content", "value": "assignment-operator"} l√† j?
    - N√®, [h√†m n·ªôi tuy·∫øn]{"entity": "cpplus_content", "value": "inline-function"} l√† j v·∫≠y?
    - TH·∫æ N√ÄO L√Ä KI·ªÇU [CHARACTER]{"entity": "cpplus_content", "value": "character"} TRONG C++
    - M N√ìI T NGHE V·ªÄ [L·ªöP]{"entity": "cpplus_content", "value": "class"} ƒêI
    - [bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"} l√† sao r·ª©a mi
    - [argument](cpplus_content) l√† g√¨?
    - TH·∫æ N√ÄO L√Ä M·ªòT [CLASS]{"entity": "cpplus_content", "value": "class"} TRONG C++?
    - Th·ª≠ th√°ch cho m ƒë√¢y, show cho tao ki·∫øn th·ª©c v·ªÅ [ARGUMENT]{"entity": "cpplus_content", "value": "argument"} c·ªßa m xem
    - Kieu [auto](cpplus_content) la gi vay
    - Tu khoa [static](cpplus_content) la gi the
    - [SWITCH]{"entity": "cpplus_content", "value": "switch"} STATEMENT L√Ä G√å?
    - e th lz bot noi cho bo m biet ve [Reference Variable]{"entity": "cpplus_content", "value": "reference-variable"} ƒëi
    - TH·∫æ N√ÄO L√Ä [CHARACTER]{"entity": "cpplus_content", "value": "character"} ?
    - [KIEU SO NGUYEN]{"entity": "cpplus_content", "value": "integer"} LA SAO
    - The nao la mot [ham khong ten]{"entity": "cpplus_content", "value": "lambda"} vay bot?
    - [kieu so thuc]{"entity": "cpplus_content", "value": "floating-point"} trong c++ la j
    - [variable](cpplus_content) la gi vay bot?
    - 1 [vars]{"entity": "cpplus_content", "value": "variable"} trong c++ ƒë∆∞·ª£c nghƒ©a th·∫ø n√†o ?
    - N√ìI T NGHE V·ªÄ [C·∫§U TR√öC]{"entity": "cpplus_content", "value": "structure"} TRONG C++ ƒêI
    - wtf is [Constant]{"entity": "cpplus_content", "value": "constant"}
    - V√íNG L·∫∂P [FOR]{"entity": "cpplus_content", "value": "for"} L√Ä G√å?
    - n√≥i nh·ªØng g√¨ m bi·∫øt v·ªÅ [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} t nghe xem
    - TH·∫æ N√ÄO L√Ä [BREAK]{"entity": "cpplus_content", "value": "break"}?
    - noi t nghe ve [Enums]{"entity": "cpplus_content", "value": "enumeration"} di bot
    - [ENUMS]{"entity": "cpplus_content", "value": "enumeration"} L√Ä QQ G√å ZAY BOT?
    - CHO TAO BI·∫æT [KI·ªÇU LU·∫¨N L√ù]{"entity": "cpplus_content", "value": "boolean"} L√Ä CC G√å XEM N√ÄO
    - eeeeeee ki·ªÉu [bool]{"entity": "cpplus_content", "value": "boolean"} l√† shao zay
    - [INPUT/OUTPUT]{"entity": "cpplus_content", "value": "input-output"} L√Ä C√ÅI G√å TH·∫æ BOT?
    - [ƒê·ªá quy]{"entity": "cpplus_content", "value": "recursion"}
    - TRONG C++ [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A RA SAO?
    - KIEU [FLOAT]{"entity": "cpplus_content", "value": "floating-point"}?
    - the nao mot [Cau Truc]{"entity": "cpplus_content", "value": "structure"}?
    - EEEEEEE KI·ªÇU [BOOL]{"entity": "cpplus_content", "value": "boolean"} L√Ä SHAO ZAY
    - s·ª± kh√°c bi·ªát th·∫≠t s·ª± gi·ªØa [struct]{"entity": "cpplus_content", "value": "structure"} v√† [union](cpplus_content) l√† g√¨ v bot?
    - ki·ªÉu [S·ªë Th·ª±c]{"entity": "cpplus_content", "value": "floating-point"} trong c++ l√† sao
    - [COMMENT]{"entity": "cpplus_content", "value": "comment"} TRONG C++ L√Ä G√å V·∫¨Y?
    - vong [While]{"entity": "cpplus_content", "value": "while"}?
    - th·∫ø n√†o l√† 1 [Break]{"entity": "cpplus_content", "value": "break"}?
    - e th lz bot noi cho bo m biet ve [Reference Variable]{"entity": "cpplus_content", "value": "reference-variable"} di
    - the nao la [nested if]{"entity": "cpplus_content", "value": "nested-if"}?
    - nhu the nao la [if long if]{"entity": "cpplus_content", "value": "nested-if"} v ong oiii
    - biet gi ve [toan tu ba ngoi]{"entity": "cpplus_content", "value": "ternary-operator"}?
    - [DO WHILE]{"entity": "cpplus_content", "value": "do-while"} L√Ä G√å?
    - [Float]{"entity": "cpplus_content", "value": "floating-point"} la clgt
    - [l∆∞u ƒë·ªì thu·∫≠t to√°n]{"entity": "cpplus_content", "value": "flowchart"}  ?
    - [C]{"entity": "cpplus_content", "value": "cplusplus"}++ la cai quai gi vay?
    - [Doi so]{"entity": "cpplus_content", "value": "argument"} la j?
    - Noi cho iem nghe ve [toan tu --]{"entity": "cpplus_content", "value": "decrement-operator"} di a
    - [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} ?
    - Nen oii [bien toan cuc]{"entity": "cpplus_content", "value": "global-variable"} la gie
    - [h√†m th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "built-in-function"} l√† j
    - the nao la [kieu so thuc]{"entity": "cpplus_content", "value": "floating-point"} v?
    - KH√ÅI NI·ªÜM V·ªÄ [STRUCTURE]{"entity": "cpplus_content", "value": "structure"}?
    - KI·ªÇU [K√ù T·ª∞]{"entity": "cpplus_content", "value": "character"} TRONG CPP L√Ä G√å?
    - E bot [con tro]{"entity": "cpplus_content", "value": "pointer"} la j the?
    - Definition cua [Recursion]{"entity": "cpplus_content", "value": "recursion"}?
    - [ternary operator]{"entity": "cpplus_content", "value": "ternary-operator"}
    - th·∫ø n√†o l√† [comment](cpplus_content)?
    - trong c++ [Bi·∫øn]{"entity": "cpplus_content", "value": "variable"} l√† j?
    - [tham chieu hang]{"entity": "cpplus_content", "value": "const-reference"} la sao
    - the nao la [Goto]{"entity": "cpplus_content", "value": "goto"}?
    - the nao la 1 ham [de quy]{"entity": "cpplus_content", "value": "recursion"}?
    - N√≥i cho tao nghe v·ªÅ [tham s·ªë m·∫∑c ƒë·ªãnh]{"entity": "cpplus_content", "value": "default-value"} ƒë√™
    - vong lap [While]{"entity": "cpplus_content", "value": "while"} la gi
    - ban luan soi noi mot chut ve [kieu liet ke]{"entity": "cpplus_content", "value": "enumeration"} nao ChatBot?
    - noi gi ve [bien tinh]{"entity": "cpplus_content", "value": "static"} nghe choi
    - the nao la [mang mot chieu]{"entity": "cpplus_content", "value": "array"}
    - the nao la 1 [variable](cpplus_content)?
    - [bien]{"entity": "cpplus_content", "value": "variable"} ?
    - KH√ÅI NI·ªÜM V·ªÄ [RECURSION]{"entity": "cpplus_content", "value": "recursion"}?
    - ƒê·ªãnh nghƒ©a [Parameter]{"entity": "cpplus_content", "value": "parameter"}?
    - TH·∫æ N√ÄO L√Ä M·ªòT [FUNCTION]{"entity": "cpplus_content", "value": "function"} TRONG C++?
    - kh√°i ni·ªám v·ªÅ [library](cpplus_content) trong c++?
    - The nao la [toan tu logic]{"entity": "cpplus_content", "value": "logical-operator"} v?
    - [Lambda]{"entity": "cpplus_content", "value": "lambda"} l√† g√¨
    - t hay thay nguoi ta xai cai [toan tu ++]{"entity": "cpplus_content", "value": "increment-operator"} ay, no la gi v bot
    - [M·∫£ng 2D]{"entity": "cpplus_content", "value": "2d-array"}
    - [return](cpplus_content) la j?
    - BI·∫æT G√å V·ªÄ [C·∫§U TR√öC]{"entity": "cpplus_content", "value": "structure"} K B·∫†N EI
    - [Return]{"entity": "cpplus_content", "value": "return"} l√† g√¨
    - What is the main thing about [Const Reference]{"entity": "cpplus_content", "value": "const-reference"}?
    - the nao la [comment](cpplus_content)?
    - Ne ban oi, ban co the cho minh biet the nao la [toan tu ba ngoi]{"entity": "cpplus_content", "value": "ternary-operator"} dc k
    - [H·∫∞NG S·ªê]{"entity": "cpplus_content", "value": "constant"} TRONG C++ L√Ä G√å N·ªÆA V???
    - noi t nghe ve nhung kien thuc ve phan [ham]{"entity": "cpplus_content", "value": "function"} di
    - Ki·ªÉu [char]{"entity": "cpplus_content", "value": "character"} trong c++ l√† sao
    - cho em mot ti thong tin ve [kieu so nguyen]{"entity": "cpplus_content", "value": "integer"} di nguoi oi
    - Can u say about [Built-in function]{"entity": "cpplus_content", "value": "built-in-function"}
    - t·ª´ kh√≥a [return](cpplus_content) l√† j
    - [comment](cpplus_content) trong C++ la j vay?
    - nhu the nao la [bien tinh]{"entity": "cpplus_content", "value": "static"}?
    - Cho minh biet the nao la [lenh lap]{"entity": "cpplus_content", "value": "iteration-statement"} dc k
    - [Ma tr·∫≠n]{"entity": "cpplus_content", "value": "2d-array"} l√† g√¨
    - nh∆∞ th·∫ø n√†o l√† 1 [reference variable]{"entity": "cpplus_content", "value": "reference-variable"} v ?
    - [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a nh∆∞ th·∫ø n√†o v th kia?
    - NH∆Ø N√ÄO L√Ä KI·ªÇU [BOOLEAN]{"entity": "cpplus_content", "value": "boolean"} VALUE
    - N√≥i g√¨ v·ªÅ [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} khi truy·ªÅn v√†o m·ªôt h√†m xem th·ª≠
    - If [If else]{"entity": "cpplus_content", "value": "if-else"} else l√† j
    - th·∫ø n√†o l√† m·ªôt [th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"}?
    - [TO√ÅN T·ª¨]{"entity": "cpplus_content", "value": "operator"} L√Ä C√ÅI G√å TH·∫æ ?
    - trong c++ [variable](cpplus_content) ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a nh∆∞ th·∫ø n√†o?
    - what do u known about [pass by reference]{"entity": "cpplus_content", "value": "pass-by-reference"}?
    - [ki·ªÉu d·∫•u ch·∫•m ƒë·ªông]{"entity": "cpplus_content", "value": "floating-point"} trong c++ l√† g√¨
    - [Switch]{"entity": "cpplus_content", "value": "switch"} statement la gi?
    - Th·∫ø n√†o l√† m·ªôt h√†m [Macro]{"entity": "cpplus_content", "value": "macro"}
    - h√£y cho tao bi·∫øt th·∫ø n√†o l√† ki·ªÉu [int]{"entity": "cpplus_content", "value": "integer"}, ki·ªÉu [float]{"entity": "cpplus_content", "value": "floating-point"}, ki·ªÉu [char]{"entity": "cpplus_content", "value": "character"} v√† ki·ªÉu [bool]{"entity": "cpplus_content", "value": "boolean"}
    - [switch](cpplus_content) case l√† sao?
    - [While]{"entity": "cpplus_content", "value": "while"}
    - The nao la [float]{"entity": "cpplus_content", "value": "floating-point"}?
    - [2d array]{"entity": "cpplus_content", "value": "2d-array"} l√† c√°i g√¨ th·∫ø ?
    - KI·ªÇU [S·ªê NGUY√äN]{"entity": "cpplus_content", "value": "integer"} TRONG C++ L√Ä NH∆Ø N√ÄO V·∫¨Y BOT?
    - T·ª´ kh√≥a [Continue]{"entity": "cpplus_content", "value": "continue"}?
    - CU PHAP [LOP]{"entity": "cpplus_content", "value": "class"} LA GI
    - th·∫ßy ∆°i th·∫ßy c√≥ th·ªÉ cho bi·∫øt v·ªÅ [nested if]{"entity": "cpplus_content", "value": "nested-if"} ƒë∆∞·ª£c kh√¥ng ·∫°
    - nhu the nao la [Return]{"entity": "cpplus_content", "value": "return"}?
    - Th·∫ø n√†o l√† ki·ªÉu [Double]{"entity": "cpplus_content", "value": "double"}
    - nh∆∞ th·∫ø n√†o l√† 1 [to√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"}
    - m biet gi ve tu [include](cpplus_content)?
    - [To√°n th·ª≠ ƒë·ªãa ch·ªâ]{"entity": "cpplus_content", "value": "address_of-operator"}
    - n√® n√® n√®, n√≥i g√¨ nghe v·ªÅ [to√°n t·ª≠ hai ng√¥i]{"entity": "cpplus_content", "value": "binary-operator"} ch∆°i
    - TRONG C++ [I/O]{"entity": "cpplus_content", "value": "input-output"} ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A RA SAO TH·∫æ BOT?
    - noi ve [Struct]{"entity": "cpplus_content", "value": "structure"} di ban eii
    - [Break]{"entity": "cpplus_content", "value": "break"} trong c++ l√† j?
    - [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} L√Ä G√å?
    - [STRUCTURE]{"entity": "cpplus_content", "value": "structure"} L√Ä G√å?
    - The nao la [Bien tham chieu]{"entity": "cpplus_content", "value": "reference-variable"}?
    - Biet gi ve [Cau truc]{"entity": "cpplus_content", "value": "structure"} k ban ei
    - The nao la kieu [dau cham dong]{"entity": "cpplus_content", "value": "floating-point"}
    - N√®n oii [bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"} l√† gi·ªÅ
    - Dinh nghia ve [INTEGER]{"entity": "cpplus_content", "value": "integer"} di
    - ƒê·ªãnh nghƒ©a c·ªßa [Switch]{"entity": "cpplus_content", "value": "switch"}?
    - √ä [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} L√Ä C√ÅI CC G√å V·∫¨Y BOT?
    - N√≥i t nghe v·ªÅ [c·∫•u tr√∫c]{"entity": "cpplus_content", "value": "structure"} trong c++ ƒëi
    - ƒê·ªäNH NGHƒ®A C·ª¶A [SWITCH]{"entity": "cpplus_content", "value": "switch"}?
    - the nao la [cout](cpplus_content) trong c++?
    - The nao la mot [class](cpplus_content) trong c++?
    - [RECURSION]{"entity": "cpplus_content", "value": "recursion"} L√Ä G√å?
    - TH·∫æ N√ÄO L√Ä M·ªòT [VECTOR]{"entity": "cpplus_content", "value": "vector"}
    - day tao kien thuc ve [ham noi tuyen]{"entity": "cpplus_content", "value": "inline-function"} di bot
    - [ENUM]{"entity": "cpplus_content", "value": "enumeration"} L√Ä C√ÅI G√å ?
    - what is the meaning of [jump statement]{"entity": "cpplus_content", "value": "jump-statement"} in c?
    - Noi gi ve [ham]{"entity": "cpplus_content", "value": "function"} t nghe xem
    - ƒëi·ªÉm kh√°c nhau gi·ªØa ki·ªÉu [float]{"entity": "cpplus_content", "value": "floating-point"} v√† ki·ªÉu [double](cpplus_content) l√†?
    - cho m√¨nh ƒë·ªãnh nghƒ©a v·ªÅ c·∫•u tr√∫c [h√†m]{"entity": "cpplus_content", "value": "function"}
    - [De quy]{"entity": "cpplus_content", "value": "recursion"} duoc dinh nghia ntn?
    - the nao la khai niem [dau cham dong]{"entity": "cpplus_content", "value": "floating-point"}???
    - [string](cpplus_content) la gi?
    - [string](cpplus_content) l√† g√¨?
    - [OPERATORS]{"entity": "cpplus_content", "value": "operator"} TRONG C++ L√Ä G√å?
    - day tao mot chut khai niem ve [Tham chieu hang]{"entity": "cpplus_content", "value": "const-reference"} di bot ngu
    - Bien tinh [Static]{"entity": "cpplus_content", "value": "static"} la gi the
    - nhu the nao la 1 [toan tu]{"entity": "cpplus_content", "value": "operator"}?
    - [ma gia]{"entity": "cpplus_content", "value": "pseudo-code"} la clgt th lz que
    - T·ª´ kh√≥a [Static]{"entity": "cpplus_content", "value": "static"} khi ƒëi k√®m v·ªõi vi·ªác khai b√°o m·ªôt bi·∫øn l√† g√¨
    - Sua gi ve [comma operator]{"entity": "cpplus_content", "value": "comma-operator"} xem
    - [for](cpplus_content) loop l√† j?
    - cho toi biet the nao la [Dereference operator]{"entity": "cpplus_content", "value": "dereference-operator"} la gi duoc khong a?
    - ƒê·ªãnh nghƒ©a v·ªÅ [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} trong c++?
    - [Enumeration]{"entity": "cpplus_content", "value": "enumeration"} l√† j v bot?
    - l·ªánh [switch](cpplus_content) l√† g√¨ th·∫ø?
    - nh∆∞ th·∫ø n√†o l√† 1 [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}
    - [Bi·∫øn to√†n c·ª•c]{"entity": "cpplus_content", "value": "global-variable"} v√† [Bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} l√† j?
    - [FOR]{"entity": "cpplus_content", "value": "for"} LOOP L√Ä G√å?
    - [khong gian ten]{"entity": "cpplus_content", "value": "namespace"}?
    - [Return]{"entity": "cpplus_content", "value": "return"} trong 1 h√†m l√† j?
    - Ban noi ve [CLASS]{"entity": "cpplus_content", "value": "class"} di
    - c√¢u l·ªánh [if](cpplus_content) l√† j?
    - TH·∫æ N√ÄO L√Ä [SWITCH]{"entity": "cpplus_content", "value": "switch"}?
    - [lop]{"entity": "cpplus_content", "value": "class"} la j?
    - Noi t nghe ve [Chuoi]{"entity": "cpplus_content", "value": "string"} xem
    - [To√°n t·ª≠]{"entity": "cpplus_content", "value": "operator"} l√† c√°i g√¨ th·∫ø ?
    - [INPUT/OUTPUT]{"entity": "cpplus_content", "value": "input-output"} TRONG C++
    - TH·∫æ N√ÄO L√Ä [I/O]{"entity": "cpplus_content", "value": "input-output"}?
    - [Th∆∞ vi·ªán]{"entity": "cpplus_content", "value": "library"} l√† j?
    - th·∫ø n√†o l√† [Goto]{"entity": "cpplus_content", "value": "goto"}?
    - WHAT ABOUT [WCHAR_T]{"entity": "cpplus_content", "value": "wchar-t"}?
    - [INT]{"entity": "cpplus_content", "value": "integer"} la j
    - [float]{"entity": "cpplus_content", "value": "floating-point"} trong c++ la gi
    - [Switch]{"entity": "cpplus_content", "value": "switch"} l√† g√¨
    - NHU NAO LA [BREAK]{"entity": "cpplus_content", "value": "break"} VAY BAN HIEN?
    - [Enum]{"entity": "cpplus_content", "value": "enumeration"} la j the bot ei?
    - th·∫ø n√†o l√† [cout](cpplus_content) trong c++?
    - kieu [int]{"entity": "cpplus_content", "value": "integer"} trong c++ la j
    - KI·ªÇU [S·ªê TH·ª∞C]{"entity": "cpplus_content", "value": "floating-point"} TRONG C++ L√Ä SAO
    - [RETURN]{"entity": "cpplus_content", "value": "return"} TRONG 1 H√ÄM L√Ä G√å?
    - what is [Increment operator]{"entity": "cpplus_content", "value": "increment-operator"}
    - [Return]{"entity": "cpplus_content", "value": "return"} trong 1 ham la j?
    - [con tro]{"entity": "cpplus_content", "value": "pointer"} duoc dinh nghia nhu the nao v th kia?
    - S·ª≠ d·ª•ng t·ª´ kh√≥a [static](cpplus_content) khi m√¨nh khai b√°o m·ªôt bi·∫øn th√¨ c√≥ th√™m t√°c d·ª•ng g√¨ k bot?
    - [de quy]{"entity": "cpplus_content", "value": "recursion"} la j
    - cho emm hoi ve [toan tu gan]{"entity": "cpplus_content", "value": "assignment-operator"} di anh oi
    - [bien toan cuc]{"entity": "cpplus_content", "value": "global-variable"} la sao rua mi
    - kh·ªëi l·ªánh [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} trong c++ l√† g√¨?
    - kieu [double](cpplus_content) la nhu the nao trong c++ vay
    - C√¥ gi√°o ∆°i, t·ª´ [Return]{"entity": "cpplus_content", "value": "return"} n√≥ l√† j v·∫≠y ·∫°
    - noi cho tui nghe ve viec [truyen tham chieu]{"entity": "cpplus_content", "value": "pass-by-reference"} di
    - [CLASS]{"entity": "cpplus_content", "value": "class"} L√Ä G√å?
    - S·ªßa g√¨ v·ªÅ [comma operator]{"entity": "cpplus_content", "value": "comma-operator"} xem
    - t hay th·∫•y ng∆∞·ªùi ta x√†i c√°i [to√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"} ·∫•y n√≥ l√† g√¨ v bot
    - [M·∫£ng]{"entity": "cpplus_content", "value": "array"} l√† g√¨
    - [Function]{"entity": "cpplus_content", "value": "function"} l√† c√°i chi r·ª©a?
    - can you say something about [Address_of operator]{"entity": "cpplus_content", "value": "address_of-operator"} in cplusplus ?
    - [Ki·ªÉu li·ªát k√™]{"entity": "cpplus_content", "value": "enumeration"} trong C++ l√† c√°i j th·∫ø ChatBot ?
    - th·∫ø n√†o l√† m·ªôt [Function]{"entity": "cpplus_content", "value": "function"} trong c++?
    - l·ªánh [ƒëi·ªÅu ki·ªán]{"entity": "cpplus_content", "value": "if"} l√† g√¨?
    - NH∆Ø TH·∫æ N√ÄO L√Ä [RETURN]{"entity": "cpplus_content", "value": "return"}?
    - CU PHAP [STRUCT]{"entity": "cpplus_content", "value": "structure"} LA GI
    - Noi cho t nghe ve [toan tu gan]{"entity": "cpplus_content", "value": "assignment-operator"} di
    - ƒë·ªãnh nghƒ©a v·ªÅ [ƒê·ªëi s√¥]{"entity": "cpplus_content", "value": "argument"} truy·ªÅn v√†o trong m·ªôt h√†m th·ª≠ xem
    - K·ªÇ T NGHE V·ªÄ [STRUCTURE]{"entity": "cpplus_content", "value": "structure"} COI
    - Definition c·ªßa [Recursion]{"entity": "cpplus_content", "value": "recursion"}?
    - H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"} L√Ä G√å V·∫¨Y B·∫†N IU
    - Say about [pass by reference]{"entity": "cpplus_content", "value": "pass-by-reference"}
    - [namespace](cpplus_content) la gi?
    - nh∆∞ n√†o l√† ki·ªÉu [Boolean]{"entity": "cpplus_content", "value": "boolean"} value
    - Tao c·∫ßn bi·∫øt g·∫•p v·ªÅ [tham chi·∫øu h·∫±ng]{"entity": "cpplus_content", "value": "const-reference"}, n√≥i coi
    - the nao la [doi so]{"entity": "cpplus_content", "value": "argument"} vay?
    - [enum]{"entity": "cpplus_content", "value": "enumeration"} la j tml?
    - Th·∫ø n√†o l√† [ki·ªÉu s·ªë nguy√™n]{"entity": "cpplus_content", "value": "integer"}, [ki·ªÉu s·ªë th·ª±c]{"entity": "cpplus_content", "value": "floating-point"} v√† [ki·ªÉu double]{"entity": "cpplus_content", "value": "double"}?
    - n√≥i v·ªÅ [Struct]{"entity": "cpplus_content", "value": "structure"} ƒëi b·∫°n eii
    - do you have any ideas about [pass by value]{"entity": "cpplus_content", "value": "pass-by-value"} stuff ?
    - [SWITCH]{"entity": "cpplus_content", "value": "switch"} TRONG C++?
    - [L∆∞u ƒë·ªì thu·∫≠t to√°n]{"entity": "cpplus_content", "value": "flowchart"} l√† c√°i gi·ªëng √¥n g√¨ th·∫ø th lz
    - [goto](cpplus_content) la j?
    - minh muon biet ve [Toan tu gan]{"entity": "cpplus_content", "value": "assignment-operator"}, ban co the noi cho minh nghe ve no dc k a ?
    - [to√°n t·ª≠ ph·∫©y]{"entity": "cpplus_content", "value": "comma-operator"}, s·ªßa g√¨ v·ªÅ n√≥i xem n√†o
    - Nay bot, noi t nghe ve [Binary operator]{"entity": "cpplus_content", "value": "binary-operator"} ƒëi
    - [operators]{"entity": "cpplus_content", "value": "operator"} trong c++ l√† g√¨?
    - [Switch]{"entity": "cpplus_content", "value": "switch"} statement l√† g√¨?
    - th·∫ø n√†o l√† 1 [array](cpplus_content)?
    - [S·ªê TH·ª∞C]{"entity": "cpplus_content", "value": "floating-point"} TRONG C++ ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A TH·∫æ N√ÄO V M
    - TH·∫æ N√ÄO L√Ä M·ªòT H√ÄM [MACRO]{"entity": "cpplus_content", "value": "macro"}
    - h√†m [main]{"entity": "cpplus_content", "value": "main-function"} l√† h√†m cc g√¨ v
    - lenh [goto](cpplus_content) la cc gi the duma
    - review cho t 1 ch√∫t v·ªÅ m√¥n [nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"} ƒëi bot
    - khai niem ve [namespace](cpplus_content)
    - kieu [DOUBLE]{"entity": "cpplus_content", "value": "double"} la gi?
    - [COUT]{"entity": "cpplus_content", "value": "cout"} L√Ä G√å?
    - [Bi·∫øn tƒ©nh]{"entity": "cpplus_content", "value": "static"}
    - [POINTER]{"entity": "cpplus_content", "value": "pointer"}?
    - ng√¥n ng·ªØ [c]{"entity": "cpplus_content", "value": "cplusplus"}++ l√† g√¨?
    - noi cho tao biet [c]{"entity": "cpplus_content", "value": "cplusplus"}++ la j duoc khong?
    - [Structure]{"entity": "cpplus_content", "value": "structure"} la j?
    - [ENUM]{"entity": "cpplus_content", "value": "enumeration"} la cai gi ?
    - KI·ªÇU [BOOL]{"entity": "cpplus_content", "value": "boolean"} L√Ä KI·ªÇU G√å TH·∫æ?
    - cho h·ªèi v·ªÅ [ma tr·∫≠n]{"entity": "cpplus_content", "value": "2d-array"} ƒëi ?
    - Em muon biet them ve [default value]{"entity": "cpplus_content", "value": "default-value"}
    - kh√°i ni·ªám v·ªÅ [array](cpplus_content)?
    - [Enumeration]{"entity": "cpplus_content", "value": "enumeration"} la j v bot?
    - k·ªÉ t nghe v·ªÅ [STRUCTURE]{"entity": "cpplus_content", "value": "structure"} coi
    - KI·ªÇU D·ªÆ LI·ªÜU [FLOATING-POINT]{"entity": "cpplus_content", "value": "floating-point"} L√Ä G√å V·∫¨Y
    - cho minh hoi ve [luu do thuat toan]{"entity": "cpplus_content", "value": "flowchart"} voi a !
    - TH·∫æ N√ÄO L√Ä [CIN]{"entity": "cpplus_content", "value": "cin"} TRONG C++?
    - say about [H√†m d·ª±ng s·∫µn]{"entity": "cpplus_content", "value": "built-in-function"} quickly
    - Vong lap [for](cpplus_content) la gi?
    - C√ÇU L·ªÜNH [IF]{"entity": "cpplus_content", "value": "if"} L√Ä G√å?
    - [V√íNG L·∫∂P]{"entity": "cpplus_content", "value": "loop"} L√Ä G√å?
    - NTN LA [KIEU LIET KE]{"entity": "cpplus_content", "value": "enumeration"} VAY A
    - th·∫ø n√†o l√† 1 [variable](cpplus_content)?
    - [L∆∞u ƒë·ªì thu·∫≠t to√°n]{"entity": "cpplus_content", "value": "flowchart"} l√† g√¨ v·∫≠y bot ∆°i?
    - TRONG C++ [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} L√Ä G√å?
    - [ƒë·ªá quy]{"entity": "cpplus_content", "value": "recursion"} l√† j
    - n√™u cho m√¨nh c√°c kh√°i ni·ªám v·ªÅ [c·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn]{"entity": "cpplus_content", "value": "control-flow"}, [v√≤ng l·∫∑p]{"entity": "cpplus_content", "value": "loop"} v√† [l·ªánh nh·∫£y]{"entity": "cpplus_content", "value": "jump-statement"} ƒë∆∞·ª£c kh√¥ng?
    - Th·∫ø n√†o l√† m·ªôt [class](cpplus_content) trong c++?
    - th·ª≠ n√≥i v·ªÅ [Con Tr·ªè]{"entity": "cpplus_content", "value": "pointer"} xem
    - M noi t nghe ve [lop]{"entity": "cpplus_content", "value": "class"} di
    - [Vector]{"entity": "cpplus_content", "value": "vector"} l√† g√¨
    - h√£y cho t√¥i bi·∫øt nh∆∞ th·∫ø n√†o th√¨ ƒë∆∞·ª£c g·ªçi l√† 1 [flowchart](cpplus_content)
    - N√ìI G√å V·ªÄ [C·∫§U TR√öC]{"entity": "cpplus_content", "value": "structure"} XEM
    - [Namespace]{"entity": "cpplus_content", "value": "namespace"} l√† g√¨
    - KI·ªÇU [K√Ω t·ª±]{"entity": "cpplus_content", "value": "character"} trong CPP l√† j?
    - n√™u kh√°i ni·ªám v·ªÅ [operator](cpplus_content), [to√°n t·ª≠ s·ªë h·ªçc]{"entity": "cpplus_content", "value": "arithmetic-operator"}, [to√°n t·ª≠ logic]{"entity": "cpplus_content", "value": "logical-operator"} ƒëi
    - ni oi [bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"} la j vay
    - [Parameter]{"entity": "cpplus_content", "value": "parameter"} l√† nh∆∞ th·∫ø n√†o v?
    - THE NAO LA KIEU [SO NGUYEN]{"entity": "cpplus_content", "value": "integer"} TRONG C++ VAY CHATBOT?
    - noi cho toi nghe, [toan tu dinh pham vi]{"entity": "cpplus_content", "value": "scope-resolution-operator"} la j ne
    - ƒê·ª• m·∫π c√°i tr√≤ [Return type]{"entity": "cpplus_content", "value": "return-type"} l√† l·ªìn qu√® g√¨ v·∫≠y
    - H√£y cho t√¥i bi·∫øt v·ªÅ [to√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"}
    - ki·ªÉu [DOUBLE]{"entity": "cpplus_content", "value": "double"} l√† g√¨?
    - TRONG C++ TU KHOA [return](cpplus_content) DUOC DUNG DE LAM GI VAY?
    - the nao la mot [thu vien]{"entity": "cpplus_content", "value": "library"}?
    - [goto](cpplus_content) l√† j?
    - nh∆∞ th·∫ø n√†o l√† [argument](cpplus_content) ƒë∆∞·ª£c truy·ªÅn v√†o m·ªôt h√†m
    - Ayy doooo noi tao nghe ve [comma operator]{"entity": "cpplus_content", "value": "comma-operator"} nghe nao
    - [Ki·ªÉu tr·∫£ v·ªÅ]{"entity": "cpplus_content", "value": "return-type"} l√† sao th·∫ø
    - TH·∫æ N√ÄO L√Ä C√ö PH√ÅP C·ª¶A [STRUCTURE]{"entity": "cpplus_content", "value": "structure"} TRONG C++?
    - [Cin]{"entity": "cpplus_content", "value": "cin"} l√† g√¨
    - th·∫ø n√†o l√† m·ªôt [string](cpplus_content)?
    - [comment](cpplus_content) trong C++ l√† j v·∫≠y?
    - KI·ªÇU [K√ç T·ª∞]{"entity": "cpplus_content", "value": "character"} TRONG C++ L√Ä G√å?
    - teach me [H√†m n·ªôi tuy·∫øn]{"entity": "cpplus_content", "value": "inline-function"} if u can
    - [GOTO]{"entity": "cpplus_content", "value": "goto"} L√Ä G√å?
    - TH·∫æ N√ÄO L√Ä KI·ªÇU [S·ªê NGUY√äN]{"entity": "cpplus_content", "value": "integer"} V·∫¨Y BOT?
    - [if else if ladder]{"entity": "cpplus_content", "value": "if-else-if-ladder"} l√† g√¨
    - Kh√°i ni·ªám v·ªÅ [structure](cpplus_content)?
    - khoi lenh [dieu kien]{"entity": "cpplus_content", "value": "if"} trong c++ la gi?
    - [to√°n t·ª≠ logic]{"entity": "cpplus_content", "value": "logical-operator"}
    - WTF IS [CONSTANT]{"entity": "cpplus_content", "value": "constant"}
    - [TO√ÅN T·ª¨]{"entity": "cpplus_content", "value": "operator"} L√Ä G√å ?
    - n√≥i g√¨ v·ªÅ [bi·∫øn tƒ©nh]{"entity": "cpplus_content", "value": "static"} nghe ch∆°i
    - trong c++ [Bien]{"entity": "cpplus_content", "value": "variable"} la j?
    - [STRING]{"entity": "cpplus_content", "value": "string"} L√Ä G√å?
    - [Bien toan cuc]{"entity": "cpplus_content", "value": "global-variable"} va [Bien cuc bo]{"entity": "cpplus_content", "value": "local-variable"} la j?
    - kh√°i ni·ªám v·ªÅ [include](cpplus_content)?
    - Th·∫ø n√†o l√† [M·∫£ng 1 chi·ªÅu]{"entity": "cpplus_content", "value": "array"} v·∫≠y bot
    - Ki·ªÉu [floating point]{"entity": "cpplus_content", "value": "floating-point"} l√† g√¨ v·∫≠y
    - [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"}?
    - [ENUM]{"entity": "cpplus_content", "value": "enumeration"} L√Ä G√å TH·∫æ BOT EI?
    - m√¥n [nh·∫≠p m√¥n l·∫≠p tr√¨nh]{"entity": "cpplus_content", "value": "introduction-to-programming"} l√† m√¥n g√¨ v ?
    - T·ª™ KH√ìA [CONSTANT]{"entity": "cpplus_content", "value": "constant"} L√Ä SAO V M
    - TH·∫æ N√ÄO L√Ä KH√ÅI NI·ªÜM [D·∫§U CH·∫§M ƒê·ªòNG]{"entity": "cpplus_content", "value": "floating-point"}???
    - [enumeration](cpplus_content) l√† clgt?
    - h√£y cho m√¨nh bi·∫øt th·∫ø n√†o l√† [Flowchart]{"entity": "cpplus_content", "value": "flowchart"} ?
    - TH·∫æ N√ÄO L√Ä [BI·∫æN]{"entity": "cpplus_content", "value": "variable"}?
    - [Recursion]{"entity": "cpplus_content", "value": "recursion"} l√† j
    - hay cho minh biet the nao la [Flowchart]{"entity": "cpplus_content", "value": "flowchart"} ?
    - h√£y cho t√¥i bi·∫øt v·ªÅ [to√°n t·ª≠ ++]{"entity": "cpplus_content", "value": "increment-operator"}
    - B·∫°n n√≥i v·ªÅ [CLASS]{"entity": "cpplus_content", "value": "class"} ƒëi
    - th·∫ø n√†o l√† 1 [tham s·ªë]{"entity": "cpplus_content", "value": "parameter"} v√† 1 [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} trong c++?
    - [Structure]{"entity": "cpplus_content", "value": "structure"} l√† j?
    - Dinh nghia [Parameter]{"entity": "cpplus_content", "value": "parameter"}?
    - KI·ªÇU [INT]{"entity": "cpplus_content", "value": "integer"} TRONG C++ L√Ä G√å
    - [chu·ªói]{"entity": "cpplus_content", "value": "string"} l√† j?
    - [CHAR]{"entity": "cpplus_content", "value": "character"} TRONG C++ L√Ä G√å?
    - [Input/output]{"entity": "cpplus_content", "value": "input-output"} trong c++
    - [NAMESPACE]{"entity": "cpplus_content", "value": "namespace"} TRONG C++ L√Ä G√å?
    - [Enum]{"entity": "cpplus_content", "value": "enumeration"} l√† j th·∫ø bot ei?
    - [Parameter]{"entity": "cpplus_content", "value": "parameter"} la nhu the nao v?
    - [cout](cpplus_content) la gi?
    - Nao lz bot biet gi ve [arithmetic operator]{"entity": "cpplus_content", "value": "arithmetic-operator"} khong ?!
    - the nao la [toan tu tang]{"entity": "cpplus_content", "value": "increment-operator"} value
    - V√≤ng l·∫∑p [for](cpplus_content) l√† g√¨?
    - [CIN]{"entity": "cpplus_content", "value": "cin"} L√Ä G√å?
    - M·ªôt [bi·∫øn c·ª•c b·ªô]{"entity": "cpplus_content", "value": "local-variable"} trong c++ l√† j?
    - th·∫ø n√†o m·ªôt [C·∫•u Tr√∫c]{"entity": "cpplus_content", "value": "structure"}?
    - [CONTINUE]{"entity": "cpplus_content", "value": "continue"} TRONG C++ L√Ä G√å?
    - [signed variable]{"entity": "cpplus_content", "value": "signed"} la the deo nao?
    - [Toan tu so hoc]{"entity": "cpplus_content", "value": "arithmetic-operator"} la shaoo
    - t·ª´ kh√≥a [Break]{"entity": "cpplus_content", "value": "break"} v√† [Continue]{"entity": "cpplus_content", "value": "continue"} l√† j?
    - [Toan tu logic]{"entity": "cpplus_content", "value": "logical-operator"} la gi?
    - CHO TOI HOI THE NAO LA MOT [STRING]{"entity": "cpplus_content", "value": "string"} THE ?
    - n√≥i t nghe v·ªÅ nh·ªØng ki·∫øn th·ª©c v·ªÅ ph·∫ßn [h√†m]{"entity": "cpplus_content", "value": "function"} ƒëi
    - the nao la [goto](cpplus_content)?
    - THE NAO LA [GOTO]{"entity": "cpplus_content", "value": "goto"}?
    - N√≥i v·ªÅ [CLASS]{"entity": "cpplus_content", "value": "class"} ƒëi b·∫°n
    - KH·ªêI L·ªÜNH [ƒêI·ªÄU KI·ªÜN]{"entity": "cpplus_content", "value": "if"} TRONG C++ L√Ä G√å?
    - th·∫ßy ƒë·ªì ∆°i, t·ª´ [RETURN]{"entity": "cpplus_content", "value": "return"} m√† em ph·∫£o d√πng m·ªói khi khai b√°o h√†m n√≥ c√≥ √Ω nghƒ©a g√¨ v ·∫°
    - k·ªÉ nghe v·ªÅ [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} ƒëi
    - KI·ªÇU D·ªÆ LI·ªÜU [CHAR]{"entity": "cpplus_content", "value": "character"} L√Ä G√å TH·∫æ
    - [operators]{"entity": "cpplus_content", "value": "operator"} l√† g√¨?
    - Khai niem ve [Ham vo danh]{"entity": "cpplus_content", "value": "lambda"}?
    - [ARGUMENT]{"entity": "cpplus_content", "value": "argument"} L√Ä G√å?
    - [SWITCH]{"entity": "cpplus_content", "value": "switch"} CASE l√† sao?
    - i don't know about [inline function]{"entity": "cpplus_content", "value": "inline-function"}, will you teach me about that?
    - [ƒê·ªÜ QUY]{"entity": "cpplus_content", "value": "recursion"} L√Ä G√å?
    - [pointer](cpplus_content)?
    - tu khoa [inclue]{"entity": "cpplus_content", "value": "library"} la j?
    - [De quy]{"entity": "cpplus_content", "value": "recursion"}
    - the nao la kieu [long](cpplus_content)
    - Toi muon biet ve [Dereference Operator]{"entity": "cpplus_content", "value": "dereference-operator"}, ban co the noi cho toi biet gi ve no dc k a?
    - [BI·∫æN]{"entity": "cpplus_content", "value": "variable"} L√Ä G√å?
    - hay cho t biet nhu nao la 1 [Flowcharts]{"entity": "cpplus_content", "value": "flowchart"}
    - KI·ªÇU [CHAR]{"entity": "cpplus_content", "value": "character"} TRONG C++ L√Ä SAO
    - [namespace{"entity": "cpplus_content", "value": "namespace"}
    - [BREAK]{"entity": "cpplus_content", "value": "break"} TRONG C++ L√Ä G√å?
    - WHAT THE FACK IS [MACRO]{"entity": "cpplus_content", "value": "macro"}?
    - what is the definition of [control flow]{"entity": "cpplus_content", "value": "control-flow"} in programming?
    - Ki·ªÉu [WCHAR-T]{"entity": "cpplus_content", "value": "wchar-t"} l√† g√¨
    - [luu do thuat toan]{"entity": "cpplus_content", "value": "flowchart"} la gi vay bot ?
    - [Mang 2D]{"entity": "cpplus_content", "value": "2d-array"}
    - KI·ªÇU [DOUBLE]{"entity": "cpplus_content", "value": "double"} L√Ä G√å?
    - [H√†m d·ª±ng s·∫µn]{"entity": "cpplus_content", "value": "built-in-function"} trong c c·ªông c·ªông
    - thay oi cho em hoi the nao la [tham so mac nhien]{"entity": "cpplus_content", "value": "default-value"} v a
    - [KI·ªÇU LI·ªÜT K√ä]{"entity": "cpplus_content", "value": "enumeration"} TRONG C++ L√Ä C√ÅI G√å TH·∫æ CHATBOT ?
    - TH·∫æ N√ÄO L√Ä [CONTINUE]{"entity": "cpplus_content", "value": "continue"}?
    - th·∫ø n√†o l√† [namespace](cpplus_content)?
    - Nay bot, noi t nghe ve [Binary operator]{"entity": "cpplus_content", "value": "binary-operator"} di
    - kh√°i ni·ªám v·ªÅ [recursion](cpplus_content)?
    - [Bien tinh]{"entity": "cpplus_content", "value": "static"}
    - Ki·ªÉu [double](cpplus_content) trong c++ l√† g√¨ th·∫ø
    - th·∫ø n√†o l√† [to√°n t·ª≠ s·ªë h·ªçc]{"entity": "cpplus_content", "value": "arithmetic-operator"} v·∫≠y b·∫°n hi·ªÅn bot ngu m·∫∑t c·∫∑c
    - k·ªÉ tao nghe v·ªÅ [namespace](cpplus_content) ƒëi
    - n√≥i cho iem 1 t√≠ v·ªÅ ki·ªÉu [wchar-t](cpplus_content) ƒëi a oiii
    - [operators]{"entity": "cpplus_content", "value": "operator"} trong c++ la gi?
    - TH·∫æ N√ÄO L√Ä [KI·ªÇU LU·∫¨N L√ù]{"entity": "cpplus_content", "value": "boolean"} TRONG C√ÅI C++ LZ QU√à N√ÄY ZAY
    - noi gi ve [Con tro]{"entity": "cpplus_content", "value": "pointer"} di?
    - TH·∫æ N√ÄO L√Ä KI·ªÇU [DOUBLE]{"entity": "cpplus_content", "value": "double"}
    - [enums]{"entity": "cpplus_content", "value": "enumeration"} la qq gi zay bot?
    - [To√°n t·ª≠ ba ng√¥i]{"entity": "cpplus_content", "value": "ternary-operator"}
    - [Tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"}, [Tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"}, ki·ªÉu [int]{"entity": "cpplus_content", "value": "integer"}, ki·ªÉu [float]{"entity": "cpplus_content", "value": "floating-point"} l√† j?
    - [Thu vien]{"entity": "cpplus_content", "value": "library"} la j?
    - [type modifer]{"entity": "cpplus_content", "value": "type-modifier"} la j v em oiii
    - [library](cpplus_content) l√† j th·∫ø?
    - V√≤ng l·∫∑p [For]{"entity": "cpplus_content", "value": "for"} la sao
    - T qu√™n m·∫•t [return type]{"entity": "cpplus_content", "value": "return-type"} l√† g√¨ r·ªìi, n√≥i l·∫°i cho tao nh·ªõ coi
    - [char]{"entity": "cpplus_content", "value": "character"} trong c++ l√† j?
    - NH∆Ø L√ÄO L√Ä M·ªòT [L·ªöP]{"entity": "cpplus_content", "value": "class"} TRONG C++?
    - [ENUMERATION]{"entity": "cpplus_content", "value": "enumeration"} L√Ä G√å V BOT?
    - TRONG C++ T·ª™ KH√ìA [return](cpplus_content) ƒê∆Ø·ª¢C D√ôNG ƒê·ªÇ L√ÄM G√å V·∫¨Y?
    - [Toan tu mot ngoi]{"entity": "cpplus_content", "value": "unary-operator"}
    - [Tham so]{"entity": "cpplus_content", "value": "parameter"} la gi?
    - cho toi biet ve [toan tu so sanh]{"entity": "cpplus_content", "value": "comparison-operator"} dieu
    - [Mang]{"entity": "cpplus_content", "value": "array"} la j?
    - kh√°i ni·ªám v·ªÅ [namespace](cpplus_content)
    - [MACRO]{"entity": "cpplus_content", "value": "macro"} L√Ä WTF
    - nhu the nao la [flow chart]{"entity": "cpplus_content", "value": "flowchart"} ?
    - noi cho tui nghe ve [Kieu so thuc]{"entity": "cpplus_content", "value": "floating-point"} dii
    - [CON TR·ªé]{"entity": "cpplus_content", "value": "pointer"} ƒê∆Ø·ª¢C ƒê·ªäNH NGHƒ®A NH∆Ø TH·∫æ N√ÄO V TH KIA?
    - Kieu du lieu [auto](cpplus_content) la sao vay
    - TH·∫æ N√ÄO L√Ä [FLOAT]{"entity": "cpplus_content", "value": "floating-point"}?
    - [Static]{"entity": "cpplus_content", "value": "static"} khi di voi viec khai bao bien thi nghia la sao v bot?
    - TH·∫æ N√ÄO L√Ä [KI·ªÇU K√ç T·ª∞]{"entity": "cpplus_content", "value": "character"} TRONG C++
    - Ey dzo noi gi ve [Address_of operator]{"entity": "cpplus_content", "value": "address_of-operator"} coi bot ngu
    - Khai niem ve [mang]{"entity": "cpplus_content", "value": "array"}?
    - B·∫†N N√ìI V·ªÄ [CLASS]{"entity": "cpplus_content", "value": "class"} ƒêI
    - Ey dz√¥ n√≥i g√¨ v·ªÅ [Address_of operator]{"entity": "cpplus_content", "value": "address_of-operator"} coi bot ngu
    - [GOTO]{"entity": "cpplus_content", "value": "goto"} TRONG C++ LA CAI J?
    - [toan tu]{"entity": "cpplus_content", "value": "operator"} ?
    - kh√°i ni·ªám v·ªÅ [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"} khi ta truy·ªÅn n√≥ v√†o m·ªôt h√†m l√† j
    - [For]{"entity": "cpplus_content", "value": "for"}
    - [ki·ªÉu d·ªØ li·ªáu]{"entity": "cpplus_content", "value": "data-type"}?
    - [chuoi]{"entity": "cpplus_content", "value": "string"} la j?
    - Nh∆∞ l√†o l√† m·ªôt [l·ªõp]{"entity": "cpplus_content", "value": "class"} trong c++?
    - trong c++ [variable](cpplus_content) duoc dinh nghia nhu the nao?
    - ki·ªÉu [S·ªê TH·ª∞C]{"entity": "cpplus_content", "value": "floating-point"} l√† g√¨
    - [Toan tu]{"entity": "cpplus_content", "value": "operator"} la cai gi the ?
    - [bi·∫øn]{"entity": "cpplus_content", "value": "variable"} l√† c√°i qu√°i g√¨ th·∫ø?
    - bi·∫øt g√¨ v·ªÅ [to√°n t·ª≠ ba ng√¥i]{"entity": "cpplus_content", "value": "ternary-operator"}?
    - N√ìI T NGHE V·ªÄ [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} XEM
    - [pseudo code]{"entity": "cpplus_content", "value": "pseudo-code"} la gi vay ban iu oiii
    - √ä BOT T√îI H·ªéI B·∫†N TH·∫æ N√ÄO L√Ä M·ªòT [STRING]{"entity": "cpplus_content", "value": "string"}?
    - [Continue]{"entity": "cpplus_content", "value": "continue"} trong c++ la gi?
    - s·ª± kh√°c nhau gi·ªØa vi·ªác [truy·ªÅn tham chi·∫øu]{"entity": "cpplus_content", "value": "pass-by-reference"} v√† [truy·ªÅn tham tr·ªã]{"entity": "cpplus_content", "value": "pass-by-value"} l√† j?
    - KIEU [AUTO]{"entity": "cpplus_content", "value": "auto"} LA GI?
    - [Loop]{"entity": "cpplus_content", "value": "loop"}
    - TH·∫æ N√ÄO L√Ä [DO WHILE]{"entity": "cpplus_content", "value": "do-while"}?
    - [Chu·ªói]{"entity": "cpplus_content", "value": "string"} Chu·ªói Chu·ªói Chu·ªói l√† j
    - ƒê·ªäNH NGHƒ®A V·ªÄ [CHU·ªñI]{"entity": "cpplus_content", "value": "string"} TRONG C++?
    - ph·ªèng v·∫•n n√®, th·∫ø n√†o l√† [ƒë·ªëi s·ªë]{"entity": "cpplus_content", "value": "argument"}?
    - [Tham s·ªë m·∫∑c nhi√™n]{"entity": "cpplus_content", "value": "default-value"}
    - hey hey hey, [to√°n t·ª≠ m·ªôt ng√¥i]{"entity": "cpplus_content", "value": "unary-operator"} l√† s
    - N√ìI CHO IEM 1 T√ç V·ªÄ KI·ªÇU [WCHAR_T]{"entity": "cpplus_content", "value": "wchar-t"} ƒêI A OIII
    - Hay cho toi biet ve [toan tu ++]{"entity": "cpplus_content", "value": "increment-operator"}
    - nhu the nao la mot [vong lap]{"entity": "cpplus_content", "value": "loop"}
    - Nhu lao la mot [lop]{"entity": "cpplus_content", "value": "class"} trong c++?
    - [C]{"entity": "cpplus_content", "value": "cplusplus"}++ l√† th·ª© g√¨
    - th·∫ø n√†o l√† m·ªôt [POINTER]{"entity": "cpplus_content", "value": "pointer"}?
    - cho em biet the nao [nested if]{"entity": "cpplus_content", "value": "nested-if"} thay oi
    - the nao la 1 [array](cpplus_content)?
    - [for](cpplus_content) loop la j?
    - tao c√≥ v·∫•n ƒë·ªÅ c·∫ßn h·ªèi. kh√¥ng bi·∫øt [con tr·ªè]{"entity": "cpplus_content", "value": "pointer"} l√† g√¨ ?\t
    - Cho tao bi·∫øt [ki·ªÉu lu·∫≠n l√Ω]{"entity": "cpplus_content", "value": "boolean"} l√† cc g√¨ xem n√†o
    - [Do while]{"entity": "cpplus_content", "value": "do-while"} l√† g√¨?
    - Tu khoa [Continue]{"entity": "cpplus_content", "value": "continue"}?
    - th·∫ø n√†o l√† 1 [bi·∫øn]{"entity": "cpplus_content", "value": "variable"}?
    - B√ÄN LU·∫¨N S√îI N·ªîI M·ªòT CH√öT V·ªÄ [KI·ªÇU LI·ªÜT K√ä]{"entity": "cpplus_content", "value": "enumeration"} N√ÄO CHATBOT?
    - Noi t nghe ve [cau truc]{"entity": "cpplus_content", "value": "structure"} trong c++ di
    - [M·∫¢NG]{"entity": "cpplus_content", "value": "array"} L√Ä G√å?
    - the nao la mot [Function]{"entity": "cpplus_content", "value": "function"} trong c++?
    - KH√ÅI NI·ªÜM V·ªÄ [CHU·ªñI]{"entity": "cpplus_content", "value": "string"}?
    - [namespace](cpplus_content) l√† g√¨?
    - khai niem ve [include](cpplus_content)?
    - [pass by value]{"entity": "cpplus_content", "value": "pass-by-value"} l√† cc g√¨ th·∫ø =))
    - ƒê·ªäNH NGHƒ®A V·ªÄ [INTEGER]{"entity": "cpplus_content", "value": "integer"} ƒêI
    - kieu [float]{"entity": "cpplus_content", "value": "floating-point"} la j
    - [Float]{"entity": "cpplus_content", "value": "floating-point"} l√† g√¨
    - E noi cho tao ve [Bien tinh]{"entity": "cpplus_content", "value": "static"} dii
    - [toan tu logic]{"entity": "cpplus_content", "value": "logical-operator"}
    - Bi·∫øt g√¨ v·ªÅ [C·∫•u tr√∫c]{"entity": "cpplus_content", "value": "structure"} k b·∫°n ei
    - [return](cpplus_content) l√† j?
- synonym: array
  examples: |
    - m·∫£ng
    - m·∫£ng m·ªôt chi·ªÅu
    - M·∫¢NG
    - ARRAY
    - M·∫¢NG M·ªòT CHI·ªÄU
    - mang mot chieu
    - MANG
    - MANG MOT CHIEU
    - M·∫£ng m·ªôt chi·ªÅu
    - M·∫£ng
    - Mang mot chieu
    - Mang
    - mang
    - Array
    - M·∫£ng 1 chi·ªÅu
    - ARR
    - 1D ARRAY
    - ARRAYS
    - M·∫¢NG 1D
    - arr
    - 1D Array
    - Arrays
    - M·∫£ng 1D
    - Mang 1D
    - arrays
    - Mang 1 chieu
    - mang 1 chieu
    - Mang Mot Chieu
    - Mang 1 Chieu
    - 1d array
    - 1D array
    - m·∫£ng 1D
    - m·∫£ng 1d
    - M·∫£ng 1d
    - array
    - arrs
- synonym: library
  examples: |
    - Library
    - th∆∞ vi·ªán
    - libraries
    - LIBRARY
    - TH∆Ø VI·ªÜN
    - LIBRARIES
    - THU VIEN
    - Th∆∞ vi·ªán
    - inclue
    - Thu vien
    - thu vien
    - Lib
    - Th∆∞ Vi·ªán
    - LIBS
    - libs
    - th∆∞ vi·∫πn
    - lib
    - Thu Vien
- synonym: namespace
  examples: |
    - kh√¥ng gian t√™n
    - NAMESPACE
    - KH√îNG GIAN T√äN
    - khong gian ten
    - KHONG GIAN TEN
    - Namespace
    - NAMEPSACE
    - namepsace
    - NAMEPSACES
    - Khong gian ten
    - Khong Gian Ten
    - namespaces
    - name space
    - name spaces
    - Namespaces
- synonym: comment
  examples: |
    - Comment
    - commnet
    - COMMENT
    - COMMNET
    - B√åNH LU·∫¨N
    - BINH LUAN
    - b√¨nh lu·∫≠n
    - comments
    - cmt
    - cmts
- synonym: variable
  examples: |
    - bi·∫øn
    - Variable
    - variables
    - bien
    - BI·∫æN
    - VARIABLE
    - VARIABLES
    - BIEN
    - vars
    - Bi·∫øn
    - Bien
    - Variables
    - varaible
    - var
    - Var
    - Vars
- synonym: operator
  examples: |
    - to√°n t·ª≠
    - Operators
    - TO√ÅN T·ª¨
    - OPERATORS
    - toan tu
    - TOAN TU
    - To√°n t·ª≠
    - operators
    - Toan tu
    - Operator
    - OPERATOR
    - Toan Tu
- synonym: if
  examples: |
    - If
    - ƒêi·ªÅu ki·ªán
    - IF
    - ƒêI·ªÄU KI·ªÜN
    - Dieu kien
    - DIEU KIEN
    - ƒëi·ªÅu ki·ªán
    - dieu kien
    - n·∫øu
    - ifs
    - ƒêi·ªÅu Ki·ªán
    - Dieu Kien
- synonym: for
  examples: |
    - For
    - FOR
    - FORS
    - for
    - fors
- synonym: do-while
  examples: |
    - do while
    - DO WHILE
    - Do while
    - DOWHILE
    - do whiles
    - dowhile
    - dowhiles
    - Dowhile
    - Do While
- synonym: while
  examples: |
    - While
    - WHILE
    - WHILES
    - while
    - whiles
- synonym: loop
  examples: |
    - v√≤ng l·∫∑p
    - loops
    - vong lap
    - V√íNG L·∫∂P
    - LOOPS
    - VONG LAP
    - Loop
    - V√≤ng l·∫∑p
    - Vong lap
    - LOOP
    - V√≤ng L·∫∑p
    - Vong Lap
    - Loops
    - l·∫∑p
    - lap
    - v√≤ng
- synonym: function
  examples: |
    - h√†m
    - ham
    - H√ÄM
    - FUNCTION
    - HAM
    - functiion
    - H√†m
    - Function
    - Ham
    - FUNCTIONS
    - ham so
    - h√†m s·ªë
    - Ham so
    - Ham So
    - functions
    - func
    - funcs
    - Functions
    - Funct
- synonym: pass-by-reference
  examples: |
    - tham chi·∫øu
    - tham chieu
    - THAM CHI·∫æU
    - THAM CHIEU
    - Truy·ªÅn tham chi·∫øu
    - truyen tham chieu
    - Truyen tham chieu
    - pass by reference
    - Tham chi·∫øu
    - truy·ªÅn tham chi·∫øu
    - Tham Chi·∫øu
    - Tham Chieu
    - Tham chieu
    - Pass by reference
    - Pass By Reference
    - PASS BY REFERENCE
- synonym: pass-by-value
  examples: |
    - tham tr·ªã
    - tham tri
    - THAM TR·ªä
    - THAM TRI
    - truy·ªÅn tham tr·ªã
    - pass by value
    - Pass by value
    - Tham tr·ªã
    - truyen tham tri
    - Tham Tr·ªã
    - Tham Tri
    - Tham tri
    - Pass By Value
    - PASS BY VALUE
- synonym: parameter
  examples: |
    - tham s·ªë
    - THAM S·ªê
    - tham so
    - THAM SO
    - PARAMETER
    - Tham s·ªë
    - Parameter
    - Tham so
    - PARAMETERS
    - Tham S·ªë
    - Tham So
    - parameters
    - para
    - paras
    - Parameters
- synonym: argument
  examples: |
    - ƒë·ªëi s·ªë
    - ƒê·ªêI S·ªê
    - doi so
    - DOI SO
    - ARGUMENT
    - ƒê·ªëi s√¥
    - ƒê·ªëi s·ªë
    - Doi so
    - Argument
    - ARGUMENTS
    - ARGS
    - arguments
    - arg
    - args
    - ƒê·ªëi S·ªë
    - Arguments
- synonym: recursion
  examples: |
    - ƒë·ªá quy
    - Recursion
    - recursions
    - ƒê·ªÜ QUY
    - RECURSION
    - RECURSIONS
    - de quy
    - DE QUY
    - ƒê·ªá quy
    - De quy
    - De Quy
    - RECURSIVE
    - recursive
    - ƒê·ªá Quy
- synonym: 2d-array
  examples: |
    - m·∫£ng hai chi·ªÅu
    - M·∫¢NG HAI CHI·ªÄU
    - mang hai chieu
    - MANG HAI CHIEU
    - M·∫£ng 2D
    - Mang 2D
    - Mang hai chieu
    - N·∫£ng hai chi·ªÅu
    - Ma tr·∫≠n
    - M·∫£ng 2 chi·ªÅu
    - ma tr·∫≠n
    - 2d array
    - 2D ARRAY
    - TWO DIMENSIONAL ARRAY
    - MA TR·∫¨N
    - MATRIX
    - 2D array
    - two dimensional array
    - matrix
    - M·∫£ng hai chi·ªÅu
    - ma tran
    - Ma tran
    - MA TRAN
    - Mang Hai Chieu
    - M·∫¢NG 2D
    - TWO DEMENSIONAL ARRAY
    - TWO DEMENSIONALS ARRAY
    - MATRICES
    - two demensionals array
    - two-demensional array
    - Ma Tran
    - Matrix
- synonym: class
  examples: |
    - Class
    - CLASS
    - L·ªöP
    - LOP
    - L·ªõp
    - lop
    - l·ªõp
    - Lop
    - Classes
    - classes
    - class
- synonym: pointer
  examples: |
    - Con tr·ªè
    - con tr·ªè
    - Pointer
    - CON TR·ªé
    - POINTER
    - Con tro
    - con tro
    - CON TRO
    - Con Tr·ªè
    - Con Tro
    - POINTERS
    - tr·ªè
    - pointers
- synonym: data-type
  examples: |
    - ki·ªÉu d·ªØ li·ªáu
    - Kieu du lieu
    - KI·ªÇU D·ªÆ LI·ªÜU
    - KIEU DU LIEU
    - kieu du lieu
    - Ki·ªÉu d·ªØ li·ªáu
    - DATA TYPES
    - data types
    - Kieu Du Lieu
    - DATA TYPE
    - DATATYPE
    - Ki·ªÉu D·ªØ Li·ªáu
    - Data Type
    - d√¢t type
    - datatype
    - datatypes
- synonym: integer
  examples: |
    - Integer
    - int
    - INTEGER
    - INT
    - S·ªê NGUY√äN
    - KIEU SO NGUYEN
    - ki·ªÉu s·ªë nguy√™n
    - kieu so nguyen
    - SO NGUYEN
    - Ki·ªÉu s·ªë nguy√™n
    - INTEGERS
    - KI·ªÇU S·ªê NGUY√äN
    - Int
    - S·ªë nguy√™n
    - Integers
    - s·ªë nguy√™n
    - integers
    - ints
    - so nguyen
    - So nguyen
    - Kieu so nguyen
    - Kieu So Nguyen
- synonym: floating-point
  examples: |
    - float
    - FLOAT
    - FLOATING POINTS
    - KIEU SO THUC
    - KI·ªÇU D·∫§U CH·∫§M ƒê·ªòNG
    - D·∫§U CH·∫§M ƒê·ªòNG
    - DAU CHAM DONG
    - KIEU DAU CHAM DONG
    - FLOATING POINT
    - FLOATING-POINT
    - S·ªê TH·ª∞C
    - ki·ªÉu s·ªë th·ª±c
    - Float
    - kieu so thuc
    - ki·ªÉu d·∫•u ch·∫•m ƒë·ªông
    - d·∫•u ch·∫•m ƒë·ªông
    - D·∫•u ch·∫•m ƒë·ªông
    - dau cham dong
    - Kieu dau cham dong
    - Kieu so thuc
    - kieu dau cham dong
    - Dau cham dong
    - floating point
    - S·ªë Th·ª±c
    - s·ªë th·ª±c
    - so thuc
    - KI·ªÇU S·ªê TH·ª∞C
    - S·ªë th·ª±c
    - Ki·ªÉu d·∫•u ch·∫•m ƒë·ªông
    - Ki·ªÉu s·ªë th·ª±c
    - ki·ªÉu float
    - ki·ªÉu d·∫•m ch·∫•m ƒë·ªông
    - floats
    - floating points
    - floating-points
- synonym: increment-operator
  examples: |
    - to√°n t·ª≠ tƒÉng
    - TO√ÅN T·ª¨ TƒÇNG
    - toan tu tang
    - to√°n t·ª≠ ++
    - To√°n t·ª≠ tƒÉng
    - Increment operator
    - To√°n t·ª≠ ++
    - Toan tu tang
    - toan tu ++
    - Toan tu ++
    - increment operator
    - INCREMENT OPERATOR
    - INCREMENT OPERATORS
    - TO√ÅN T·ª¨ ++
    - ++ OPERATOR
    - TOAN TU TANG
    - ++
    - increment operators
    - incrementoperator
    - incrementoperators
- synonym: decrement-operator
  examples: |
    - to√°n t·ª≠ gi·∫£m
    - TO√ÅN T·ª¨ GI·∫¢M
    - toan tu giam
    - to√°n t·ª≠ --
    - decrement operator
    - Decrement operator
    - DECREMENT OPERATOR
    - toan tu --
    - DECREMENT OPERATORS
    - TO√ÅN T·ª¨ --
    - TOAN TU GIAM
    - Toan tu giam
    - Toan Tu Giam
    - TOAN TU --
    - To√°n t·ª≠ gi·∫£m
    - To√°n t·ª≠ --
    - Decrement Operator
    - --
    - decrement operators
    - decrementoperator
    - decrementoperators
- synonym: unary-operator
  examples: |
    - to√°n t·ª≠ m·ªôt ng√¥i
    - TO√ÅN T·ª¨ M·ªòT NG√îI
    - toan tu mot ngoi
    - To√°n t·ª≠ m·ªôt ng√¥i
    - Toan tu mot ngoi
    - unary operator
    - Unary
    - Toan Tu Mot Ngoi
    - UNARY OPERATOR
    - UNARY
    - UNARY OPERATORS
    - TOAN TU MOT NGOI
    - Unary Operator
    - Unary operator
    - Unary Operators
    - unary
    - unaries
    - unarys
    - unary operators
- synonym: binary-operator
  examples: |
    - to√°n t·ª≠ hai ng√¥i
    - TO√ÅN T·ª¨ HAI NG√îI
    - toan tu hai ngoi
    - Binary operator
    - binary operator
    - To√°n t·ª≠ hai ng√¥i
    - Toan tu hai ngoi
    - TO√ÅN T·ª¨ 2 NG√îI
    - to√°n t·ª≠ 2 ng√¥i
    - Toan Tu Hai Ngoi
    - TOAN TU HAI NGOI
    - BINARY OPERATOR
    - BINARY OPERATORS
    - Binary Operators
    - binary
    - binaries
    - binarys
    - binary operators
- synonym: ternary-operator
  examples: |
    - to√°n t·ª≠ ba ng√¥i
    - TO√ÅN T·ª¨ BA NG√îI
    - toan tu ba ngoi
    - To√°n t·ª≠ ba ng√¥i
    - Toan tu ba ngoi
    - ternary operator
    - Ternary operator
    - TO√ÅN T·ª¨ 3 NG√îI
    - to√°n t·ª≠ 3 ng√¥i
    - Toan Tu Ba Ngoi
    - TOAN TU BA NGOI
    - TERNARY OPERATOR
    - TERNARY OPERATORS
    - Ternary Operator
    - ternary
    - ternaries
    - ternarys
- synonym: arithmetic-operator
  examples: |
    - To√°n t·ª≠ s·ªë h·ªçc
    - TO√ÅN T·ª¨ S·ªê H·ªåC
    - Toan tu so hoc
    - to√°n t·ª≠ s·ªë h·ªçc
    - arithmetic operator
    - Arithmetic operator
    - toan tu so hoc
    - Toan Tu So Hoc
    - TOAN TU SO HOC
    - ARITHMETIC OPERATOR
    - ARITHMETIC OPERATORS
    - MATHEMETICAL OPERATOR
    - MATHEMETICAL OPERATORS
    - Arithmetic Operator
    - Mathemetical Operator
    - Mathemetical operator
    - arithmetic operators
    - arithmetic
    - mathemetical operator
    - mathemetical operators
    - mathemetical
    - to√°n t·ª≠ to√°n h·ªçc
- synonym: logical-operator
  examples: |
    - to√°n t·ª≠ logic
    - TO√ÅN T·ª¨ LOGIC
    - toan tu logic
    - Toan tu logic
    - To√°n t·ª≠ logic
    - Logical operator
    - logical operator
    - Toan Tu Logic
    - TOAN TU LOGIC
    - TO√ÅN T·ª¨ LOGICAL
    - LOGICAL OPERATOR
    - LOGICAL OPERATORS
    - Logical Operator
    - logical operators
    - to√°n t·ª≠ logical
    - to√°n t·ª≠ t∆∞ duy
    - toan tu logical
    - toan tu tu duy
- synonym: const-reference
  examples: |
    - Tham chi·∫øu h·∫±ng
    - THAM CHI·∫æU H·∫∞NG
    - Tham chieu hang
    - Const Reference
    - tham chieu hang
    - tham chi·∫øu h·∫±ng
    - constant reference
    - Tham Chieu Hang
    - THAM CHIEU HANG
    - CONST REFERENCE
    - CONSTANT REFERENCE
    - Const referemce
    - const reference
    - const references
    - constreference
- synonym: inline-function
  examples: |
    - h√†m n·ªôi tuy·∫øn
    - H√ÄM N·ªòI TUY·∫æN
    - ham noi tuyen
    - inline function
    - H√†m n·ªôi tuy·∫øn
    - inline functions
    - Ham noi tuyen
    - Ham Noi Tuyen
    - INLINE FUNCTION
    - INLINE FUNCTIONS
    - H√†m inline
    - Inline Function
    - Inline function
    - h√†m inline
    - n·ªôi tuy·∫øn
    - noi tuyen
- synonym: static
  examples: |
    - bi·∫øn tƒ©nh
    - BI·∫æN Tƒ®NH
    - bien tinh
    - Static
    - Bien tinh
    - Bi·∫øn tƒ©nh
    - STATIC
    - Bien Tinh
    - STATIC VARIABLE
    - STATIC VARIABLES
    - BIEN TINH
    - Bi·∫øn Tƒ©nh
    - static
    - Static Variable
    - statics
    - static variable
    - static variables
    - static var
    - static vars
    - staticvariable
    - staticvariables
    - staticvar
    - staticvars
- synonym: lambda
  examples: |
    - Lambda
    - lamda
    - LAMBDA
    - LAMDA
    - h√†m n·∫∑c danh
    - Ham nac danh
    - ham khong ten
    - Ham vo danh
    - H√ÄM N·∫∂C DANH
    - H√ÄM KH√îNG T√äN
    - H√ÄM V√î DANH
    - H√ÄM ANNONYMOUS
    - HAM NAC DANH
    - HAM KHONG TEN
    - HAM VO DANH
    - HAM ANNONYMOUS
    - H√†m n·∫∑c danh
    - H√†m Lambda
    - H√†m lambda
    - H√†m v√¥ danh
    - Lambda function
    - Lambda Function
    - Lambda Functions
    - ham nac danh
    - ham vo danh
    - h√†m lambda
    - h√†m v√¥ danh
    - h√†m ko t√™n
    - h√†m kh√¥ng t√™n
    - lambda function
    - anonymous function
    - ham lambda
- synonym: default-value
  examples: |
    - ham s·ªë m·∫∑c nhi√™n
    - HAM S·ªê M·∫∂C NHI√äN
    - ham so mac nhien
    - Tham s·ªë m·∫∑c nhi√™n
    - tham so mac nhien
    - default value
    - tham s·ªë m·∫∑c ƒë·ªãnh
    - Tham so mac nhien
    - Tham So Mac Nhien
    - THAM S·ªê M·∫∂C NHI√äN
    - THAM SO MAC NHIEN
    - DEFAULT VALUES
    - DEFAULT VALUE
    - Default value
    - Default Value
    - tham s·ªë m·∫∑c nhi√™n
    - default values
    - tham so mac dinh
- synonym: if-else
  examples: |
    - if else
    - IF ELSE
    - If else
    - If Else
    - ifelse
    - ELSE
    - Else
    - else
    - n·∫øu kh√¥ng th√¨
- synonym: scope-resolution-operator
  examples: |
    - scope resolution operator
    - to√°n t·ª≠ ƒë·ªãnh ph·∫°m vi
    - toan tu dinh pham vi
    - SCOPE RESOLUTION OPERATOR
    - TO√ÅN T·ª¨ ƒê·ªäNH PH·∫†M VI
    - TOAN TU DINH PHAM VI
    - To√°n t·ª≠ ƒë·ªãnh ph·∫°m vi
    - Toan tu dinh pham vi
    - Toan Tu Dinh Pham Vi
    - SCOPE RESOLUTION OPERATORS
    - TOAN TU ::
    - TO√ÅN T·ª¨ ::
    - Scopre resolution operator
    - Scopre Resolution Operator
    - Scopre resolution Operators
    - Scopre Resolution Operators
    - to√°n t·ª≠ ph·∫°m vi
    - to√°n t·ª≠ ::
    - To√°n t·ª≠ ::
    - ::
    - toan tu pham vi
    - toan tu ::
    - scope resolution operators
- synonym: control-flow
  examples: |
    - cau truc dieu khien
    - CAU TRUC DIEU KHIEN
    - control flow
    - flow of control
    - c·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn
    - flow controls
    - C·∫§U TR√öC ƒêI·ªÄU KHI·ªÇN
    - Cau truc dieu khien
    - Cau Truc Dieu Khien
    - CONTROL FLOW
    - FLOW OF CONTROLS
    - FLOW ƒêI·ªÄU KHI·ªÇN
    - FLOW COTROLS
    - C·∫•u tr√∫c ƒëi·ªÅu khi·ªÉn
    - Flow controls
    - Flow of control
    - Flow Of Control
    - control flows
    - controlflow
    - controlflows
    - flow ƒëi·ªÅu khi·ªÉn
- synonym: cplusplus
  examples: |
    - C
    - c
    - CPP
    - CPLUSPLUS
    - C PLUS PLUS
    - cpp
    - c plus plus
    - C C·ªòNG C·ªòNG
    - CPPLUS
    - c++
    - C++
    - Cpp
    - cplusplus
    - Cplusplus
    - cpplus
    - Cpplus
    - c c·ªông c·ªông
    - C ++
- synonym: break
  examples: |
    - BREAK
    - Break
    - BREAKS
    - break
    - breaks
- synonym: goto
  examples: |
    - GOTO
    - Goto
    - GOTOS
    - Gotos
    - gotos
- synonym: return
  examples: |
    - RETURN
    - Return
    - RETURNS
    - TR·∫¢ V·ªÄ
    - TRA VE
    - Returns
    - Tra ve
    - Tr·∫£ v·ªÅ
    - returns
    - tr·∫£ v·ªÅ
    - tra ve
- synonym: input-output
  examples: |
    - I/O
    - INPUT/OUTPUT
    - i/o
    - Input/output
    - INPUT OUTPUT
    - I/o
    - Input output
    - Input Output
    - Input/Output
    - input/output
    - intput output
- synonym: cout
  examples: |
    - COUT
    - STD::COUT
    - std::cout
    - cout
    - Std::cout
    - Cout
- synonym: cin
  examples: |
    - CIN
    - Cin
    - STD::CIN
    - std::cin
    - cin
    - Std::cin
- synonym: continue
  examples: |
    - CONTINUE
    - Continue
    - CONTINUES
    - Continues
    - continue
    - continues
- synonym: switch
  examples: |
    - SWITCH
    - Switch
    - SWTICHS
    - Switchs
    - switchs
    - switchcase
    - switchcases
    - Switch case
    - switch case
- synonym: string
  examples: |
    - STRING
    - CHU·ªñI
    - Chu·ªói
    - chu·ªói
    - chuoi
    - Chuoi
    - CHUOI
    - String
    - Ki·ªÉu chu·ªói
    - KI·ªÇU CHU·ªñI
    - ki·ªÉu chu·ªói
    - kieu chuoi
    - Kieu chuoi
    - Kieu Chuoi
    - kieu Chuoi
    - STRINGS
    - CHU·ªñI K√ç T·ª∞
    - CHUOI KI TU
    - Chuoi ki tu
    - Chuoi Ki Tu
    - Strings
    - strings
    - str
    - strs
    - chuoi ki tu
- synonym: structure
  examples: |
    - STRUCTURE
    - C·∫§U TR√öC
    - STRUCT
    - Structure
    - c·∫•u tr√∫c
    - Struct
    - struct
    - C·∫•u tr√∫c
    - C·∫•u Tr√∫c
    - cau truc
    - Cau truc
    - Cau Truc
    - STRUCTURES
    - CAU TRUC
    - Struc
    - Structures
    - structures
    - structs
- synonym: enumeration
  examples: |
    - ENUMERATION
    - ENUM
    - ENUMS
    - ENUMERATOR
    - KIEU LIET KE
    - KI·ªÇU LI·ªÜT K√ä
    - Enumeration
    - enum
    - Enum
    - enums
    - Ki·ªÉu li·ªát k√™
    - ki·ªÉu li·ªát k√™
    - Enums
    - Kieu liet ke
    - kieu liet ke
    - LI·ªÜT K√ä
    - LIET KE
    - Li·ªát k√™
    - Kieu Liet Ke
    - Liet ke
    - li·ªát k√™
- synonym: double
  examples: |
    - DOUBLE
    - ki·ªÉu double
    - Double
    - DOUBLES
    - double
    - g·∫•p ƒë√¥i
    - doubles
- synonym: character
  examples: |
    - CHAR
    - CHARACTER
    - KI·ªÇU K√ç T·ª∞
    - K√ç T·ª∞
    - K√ù T·ª∞
    - char
    - Character
    - k√≠ t·ª±
    - K√Ω t·ª±
    - k√Ω t·ª±
    - ki·ªÉu k√≠ t·ª±
    - kieu ki tu
    - KIEU KI TU
    - CHARACTERS
    - KI·ªÇU K√ù T·ª∞
    - CHARS
    - KI TU
    - KIEU KY TU
    - Char
    - Characters
    - Chars
    - Ki·ªÉu k√≠ t·ª±
    - Ki·ªÉu k√Ω t·ª±
    - Kieu ki tu
    - Kieu Ki Tu
    - Kieu Ky Tu
    - Kieu ky tu
    - chars
    - characters
- synonym: macro
  examples: |
    - MACRO
    - Macro
    - macros
    - macro
    - #define
- synonym: wchar-t
  examples: |
    - WCHAR-T
    - WCHAR_T
    - wchar-t
    - Wchar-t
    - Wchar_t
- synonym: boolean
  examples: |
    - BOOLEAN
    - LUAN LY
    - KIEU LUAN LY
    - KI·ªÇU LU·∫¨N L√ù
    - BOOL
    - Boolean
    - luan ly
    - Kieu luan ly
    - ki·ªÉu lu·∫≠n l√Ω
    - Ki·ªÉu lu·∫≠n l√Ω
    - bool
    - LU·∫¨N L√ù
    - lu·∫≠n l√Ω
    - kieu luan ly
    - Kieu Luan Ly
    - BOOLS
    - Bool
    - Luan Ly
    - Luan ly
    - Lu·∫≠n l√Ω
    - Lu·∫≠n L√Ω
    - b√¥l
    - b√¥lean
- synonym: constant
  examples: |
    - CONSTANT
    - H·∫∞NG S·ªê
    - HANG SO
    - Constant
    - Hang so
    - h·∫±ng s·ªë
    - CONST
    - const
    - Const
    - CONSTANTS
    - H·∫±ng s·ªë
    - H·∫±ng S·ªë
    - Hang So
    - Constants
    - hang so
    - constants
    - consts
    - h·∫±ng
- synonym: type-modifier
  examples: |
    - TYPE MODIFER
    - type modifer
    - TYPE MODIFIER
    - type modifier
    - TYPE MODIFIERS
    - type modifiers
    - TYPE OF MODIFIERS
    - MODIFERS
    - type modifers
    - typemodifier
    - type of modifers
    - data modifiers
- synonym: introduction-to-programming
  examples: |
    - Nh·∫≠p m√¥n l·∫≠p tr√¨nh
    - nh·∫≠p m√¥n l·∫≠p tr√¨nh
    - nh·∫≠p m√¥n l·∫≠p trinh
    - Nmlt
    - nmlt
    - NMLT
    - nhap mon lap trinh
    - NH·∫¨P M√îN L·∫¨P TR√åNH
    - Nhap mon lap trinh
    - Nh·∫≠p M√¥n L·∫≠p Tr√¨nh
    - NH·∫¨P M√îN C++
    - INTRODUCTION TO PROGRAMMING
    - INTRODUCTION TO C++
    - nh·∫≠p m√¥n C++
    - nh·∫≠p m√¥n c++
    - introduction to programming
    - introduction to c++
    - introduction to C++
    - Nh·∫≠p m√¥n C++
    - Nh·∫≠p m√¥n c++
    - Introduction to programming
    - Introduction to c++
    - Introduction to C++
    - Nhap Mon Lap Trinh
- synonym: local-variable
  examples: |
    - bi·∫øn c·ª•c b·ªô
    - Local Variable
    - local variable
    - Bi·∫øn c·ª•c b·ªô
    - Bien cuc bo
    - bien cuc bo
    - Local variable
    - LOCAL VARIABLE
    - BI·∫æN C·ª§C B·ªò
    - LOCAL VARIABLES
    - BIEN CUC BO
    - LOCALS
    - LOCAL
    - Bi·∫øn C·ª•c B·ªô
    - Bien Cuc Bo
    - Local variables
    - Local Variables
    - local
    - locals
    - local var
    - local vars
    - local variables
    - localvar
    - locavars
    - localvariable
    - localvariables
- synonym: global-variable
  examples: |
    - bi·∫øn to√†n c·ª•c
    - Global variable
    - BI·∫æN TO√ÄN C·ª§C
    - Bi·∫øn to√†n c·ª•c
    - bien toan cuc
    - BIEN TOAN CUC
    - Bien toan cuc
    - GLOBAL VARIABLE
    - global variable
    - GLOBAL VARIABLES
    - GLOBAL
    - Global Variable
    - Bi·∫øn To√†n C·ª•c
    - Bien Toan Cuc
    - global
    - globals
    - global variables
    - globalvariable
    - globalvariables
- synonym: address_of-operator
  examples: |
    - To√°n th·ª≠ ƒë·ªãa ch·ªâ
    - address_of operator
    - Address_of operator
    - To√°n t·ª≠ ƒë·ªãa ch·ªâ
    - Toan tu dia chi
    - ADDRESS OF OPERATORS
    - ADDRESS-OF OPERATORS
    - TO√ÅN T·ª¨ ƒê·ªäA CH·ªà
    - TOAN TU DIA CHI
    - TO√ÅN T·ª¨ &
    - TOAN TU &
    - To√°n t·ª≠ &
    - Toan tu &
    - to√°n t·ª≠ ƒë·ªãa ch·ªâ
    - address of operator
    - address operator
    - adress_of operator
    - address operators
    - address of operators
    - to√°n t·ª≠ &
    - toan tu dia chi
    - Toan Tu Dia Chi
- synonym: flowchart
  examples: |
    - Flowchart
    - l∆∞u ƒë·ªì thu·∫≠t to√°n
    - L∆∞u ƒë·ªì thu·∫≠t to√°n
    - flow chart
    - Flowcharts
    - s∆° ƒë·ªì thu·∫≠t to√°n
    - luu do thuat toan
    - so do thuat toan
    - Luu do thuat toan
    - FLOWCHART
    - FLOWCHARTS
    - L∆ØU ƒê·ªí
    - LUU DO
    - S∆† ƒê·ªí THU·∫¨T TO√ÅN
    - SO DO THUAT TOAN
    - So do thuat toan
    - So Do Thuat Toan
    - L∆ØU ƒê·ªí THU·∫¨T TO√ÅN
    - L∆∞u ƒë·ªì
    - L∆∞u ƒê·ªì
    - Luu do
    - Luu Do Thuat Toan
    - S∆° ƒë·ªì thu·∫≠t to√°n
    - flowchart
    - flowcharts
- synonym: auto
  examples: |
    - AUTO
    - Auto
    - AUTO VARIABLE
    - AUTO VARIABLES
    - KI·ªÇU AUTO
    - KIEU AUTO
    - Auto variables
    - Auto Variables
    - Auto Variable
    - Auto variable
    - Ki·ªÉu auto
    - Ki·ªÉu Auto
    - auto variable
    - auto variables
    - autovariable
    - autovariables
    - auto var
    - auto vars
    - autovar
    - autovars
    - bi·∫øn auto
    - ki·ªÉu auto
    - kieu auto
- synonym: vector
  examples: |
    - VECTOR
    - Vector
    - VECTORS
    - Vectors
    - vector
    - vectors
- synonym: reference-variable
  examples: |
    - reference variable
    - Reference Variable
    - Reference variable
    - REFERENCE VARIABLE
    - Bi·∫øn tham chi·∫øu
    - bi·∫øn tham chi·∫øu
    - Bien tham chieu
    - bien tham chieu
    - REFERENCE VARIABLES
    - BI·∫æN THAM CHI·∫æU
    - BIEN THAM CHIEU
    - Reference Variables
    - Reference variables
    - Bien Tham Chieu
    - Bi·∫øn Tham Chi·∫øu
    - reference
    - reference vars
    - reference variables
- synonym: unsigned
  examples: |
    - Unsigned
    - unsigned variable
    - UNSIGNED
    - UNSINGED
    - unsinged
    - UNSIGNEDS
    - unsigneds
    - unsigned
    - kh√¥ng d·∫•u
    - ko d·∫•u
    - 0 d·∫•u
- synonym: signed
  examples: |
    - signed variable
    - SIGNED
    - SIGNED VARIABLE
    - SIGNED VARIABLES
    - Signed variables
    - Signed Variable
    - Signed variable
    - Signed
    - signeds
    - c√≥ d·∫•u
    - d·∫•u
- synonym: pseudo-code
  examples: |
    - Pseudo code
    - m√£ gi·∫£
    - pseudo code
    - ma gia
    - M√É GI·∫¢
    - PSEUDO CODE
    - PSEUDO CODES
    - MA GIA
    - M√£ gi·∫£
    - M√£ Gi·∫£
    - Pseudo Code
    - pseduocode
    - pseudo codes
    - pseudocodes
- synonym: dereference-operator
  examples: |
    - Dereference operator
    - Dereference Operator
    - dereference operator
    - DEREFERENCE OPERATOR
    - DEREFERNCE OPERATORS
    - INDIRECTION OPERATOR
    - INDIRECTION OPERATORS
    - TO√ÅN T·ª¨ TR·ªé
    - TOAN TU TRO
    - TOAN TU *
    - TO√ÅN T·ª¨ *
    - Indirection Operators
    - Indirection operators
    - Dereference operators
    - dereference operators
    - indirection operator
    - indirection operators
    - To√°n t·ª≠ tr·ªè
    - to√°n t·ª≠ tr·ªè
    - to√°n t·ª≠ *
    - toan tu tro
    - toan tu *
    - Toan tu tro
    - Toan tu *
- synonym: comma-operator
  examples: |
    - Comma operator
    - comma operator
    - to√°n t·ª≠ ph·∫©y
    - toan tu phay
    - d·∫•u ph·∫©y
    - dau phay
    - COMMA OPERATOR
    - COMMA OPERATORS
    - TO√ÅN T·ª¨ PH·∫®Y
    - TOAN TU PHAY
    - To√°n t·ª≠ ph·∫©y
    - To√°n T·ª≠ Ph·∫©y
    - Comma Operator
    - Comma Operators
    - comma operators
- synonym: comparison-operator
  examples: |
    - toan tu quan he
    - to√°n t·ª≠ so s√°nh
    - To√°n t·ª≠ quan h·ªá
    - toan tu so sanh
    - Toan tu quan he
    - to√°n t·ª≠ quan h·ªá
    - TO√ÅN T·ª¨ QUAN H·ªÜ
    - TO√ÅN T·ª¨ SO S√ÅNH
    - TOAN TU QUAN HE
    - TOAN TU SO SANH
    - COMPARISON OPERATOR
    - COMPARISON OPERATORS
    - RELATIONAL OPERATOR
    - RELATIONAL OPERATORS
    - To√°n t·ª≠ so s√°nh
    - Toan tu so sanh
    - Comparison operator
    - Relational operator
    - Comparison operators
    - Relational operators
    - comparison operators
    - relational operators
    - relational operator
- synonym: assignment-operator
  examples: |
    - Assignment operator
    - to√°n t·ª≠ g√°n
    - Toan tu gan
    - toan tu gan
    - ASSIGNMENT OPERATOR
    - ASSIGNMENT OPERATORS
    - TO√ÅN T·ª¨ G√ÅN
    - TOAN TU GAN
    - Assignment operators
    - To√°n t·ª≠ g√°n
    - Assignment Operator
    - Assignment Operators
    - assignment operator
    - assignment
    - assign
    - assignment operators
- synonym: iteration-statement
  examples: |
    - iteration statement
    - lenh lap
    - ITERATION STATEMENT
    - ITERATION STATEMETS
    - L·ªÜNH L·∫∂P
    - LENH LAP
    - L·ªánh l·∫∑p
    - L·ªánh L·∫∑p
    - Iteration Statement
    - Iteration statement
    - Lenh lap
    - Lenh Lap
    - iteration statements
    - iterationstatement
    - iterationstatements
    - l·ªánh l·∫∑p
- synonym: jump-statement
  examples: |
    - jump statement
    - Lenh nhay
    - lenh nhay
    - l·ªánh nh·∫£y
    - JUMP STATEMENT
    - JUMP STATEMENTS
    - L·ªÜNH NH·∫¢Y
    - LENH NHAY
    - L·ªÜNH JUMP
    - LENH JUMP
    - L·ªánh jump
    - L·ªánh Jump
    - Jump statement
    - Jump Statement
    - jump statements
    - jumpstatement
    - jumpstatements
    - l·ªánh jump
    - lenh jump
- synonym: nested-if
  examples: |
    - nested if
    - if l·ªìng if
    - if long if
    - NESTED IF
    - IF L·ªíNG IF
    - IF L·ªíNG B√äN TRONG IF
    - If l·ªìng If
    - If l·ªìng if
    - Nested If
    - Nested if
    - if l·ªìng b√™n trong if
    - nested ifs
- synonym: if-else-if-ladder
  examples: |
    - if else if ladder
    - IF ELSE IF LADDER
    - N·∫æU KH√îNG TH√å N·∫æU
    - C·∫¶U THANG IF ELSE
    - CAU THANG IF ELSE
    - C·∫ßu thang if else
    - C·∫ßu thang If else
    - N·∫øu kh√¥ng th√¨ n·∫øu
    - If else If ladder
    - If else if ladder
    - if else if
    - n·∫øu kh√¥ng th√¨ n·∫øu
    - c·∫ßu thang if else
    - cau thang if else
- synonym: return-type
  examples: |
    - Ki·ªÉu tr·∫£ v·ªÅ
    - Return type
    - return type
    - ki·ªÉu tr·∫£ v·ªÅ
    - KI·ªÇU TR·∫¢ V·ªÄ
    - KIEU TRA VE
    - RETURN TYPE
    - RETURN TYPES
    - Kieu tra ve
    - return types
    - kieu tra ve
- synonym: main-function
  examples: |
    - main
    - main function
    - MAIN
    - MAIN FUNCTION
    - H√ÄM CH√çNH
    - HAM CHINH
    - Main
    - Main Function
    - Main function
    - h√†m ch√≠nh
    - mains
- synonym: built-in-function
  examples: |
    - Built in function
    - Built-in function
    - ham dung san
    - H√†m d·ª±ng s·∫µn
    - h√†m th∆∞ vi·ªán
    - h√†m d·ª±ng s·∫µn
    - built in functions
    - BUILT-IN FUNCTION
    - BUILT IN FUNCTION
    - H√ÄM D·ª∞NG S·∫¥N
    - H√ÄM TH∆Ø VI·ªÜN
    - H√ÄM C√ì S·∫¥N
    - HAM DUNG SAN
    - HAM CO SAN
    - HAM THU VIEN
    - Built-in Function
    - H√†m c√≥ s·∫µn
    - H√†m th∆∞ Vi·ªán
    - Ham dung san
    - Ham co san
    - Ham thu vien
    - built in function
    - h√†m c√≥ s·∫µn
    - built-in function
    - built_in function
    - library function
- synonym: bitwise-operator
  examples: |
    - bitwise operator
    - BITWISE OPERATOR
    - BITWISE OPERATORS
    - Bitwise operator
    - Bitwise Operator
    - bitwise
    - bitwise operators
- synonym: include
  examples: |
    - INCLUDE
    - #INCLUDE
    - #include
    - Include
    - includes
- synonym: short
  examples: |
    - SHORT
    - SHORTS
    - Short
    - short
    - Shorts
    - shorts
    - ng·∫Øn
- synonym: long
  examples: |
    - LONG
    - LONGS
    - Long
    - long
    - longs
    - d√†i
- synonym: typedef
  examples: |
    - TYPEDEF
    - Typedef
    - typedef
- synonym: union
  examples: |
    - UNION
    - UNIONS
    - Union
    - Unions
    - union
    - unions
    - h·ª£p nh·∫•t
    - li√™n hi·ªáp
- synonym: shift-operator
  examples: |
    - to√°n t·ª≠ d·ªùi bit
    - toan tu doi bit
    - SHIFT OPERATOR
    - SHIFT OPERATORS
    - TO√ÅN T·ª¨ D·ªúI BIT
    - TO√ÅN T·ª¨ THAO TH√ÅC BIT
    - TOAN TU DOI BIT
    - TOAN TU THAO TAC BIT
    - To√°n t·ª≠ d·ªùi bit
    - To√°n t·ª≠ thao t√°c bit
    - Shift operator
    - Shift operators
    - shift operators
    - shift operator
    - shift
    - to√°n t·ª≠ thao t√°c bit
    - toan tu thao tac bit
- synonym: external
  examples: |
    - EXTERNAL VARIABLE
    - EXTERNAL VARIABLES
    - External variable
    - External Variable
    - External variables
    - externals
    - external variable
    - external variables
    - external var
    - external vars
    - externalvars
    - externalvar
- synonym: control-statement
  examples: |
    - CONTROL STATEMENT
    - CONTROL STATEMENTS
    - L·ªÜNH ƒêI·ªÄU KHI·ªÇN
    - LENH DIEU KHIEN
    - Control statements
    - Control statement
    - Control Statement
    - Control Statements
    - L·ªánh ƒëi·ªÅu khi·ªÉn
    - Lenh dieu khien
    - control statement
    - control statements
    - controlstatement
    - controlstatements
    - l·ªánh ƒëi·ªÅu khi·ªÉn
    - lenh dieu khien
    - Lenh Dieu Khien
- synonym: selection-statement
  examples: |
    - SELECTION STATEMENT
    - SELECTION STATEMENTS
    - L·ªÜNH CH·ªåN
    - L·ªÜNH L·ª∞A CH·ªåN
    - LENH CHON
    - LENH LUA CHON
    - L·ªánh ch·ªçn
    - L·ªánh l·ª±a ch·ªçn
    - Lenh chon
    - Lenh lua chon
    - Selection statement
    - Selection Statement
    - Selection Statements
    - Selection statements
    - selection statement
    - selection statements
    - selectionstatement
    - selectionstatements
    - l·ªánh ch·ªçn
    - l·ªánh l·ª±a ch·ªçn
    - lenh lua chon
    - Lenh Lua Chon
- regex: flowchart_quest_num
  examples: |
    - [0-9]{3}
